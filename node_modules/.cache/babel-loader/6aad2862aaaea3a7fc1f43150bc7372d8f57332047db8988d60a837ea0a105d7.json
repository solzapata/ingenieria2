{"ast":null,"code":"import immediate from 'immediate';\nimport { v4 } from 'uuid';\nimport Md5 from 'spark-md5';\nimport vuvuzela from 'vuvuzela';\nimport getArguments from 'argsarray';\nimport inherits from 'inherits';\nimport EE from 'events';\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.keys = function () {\n  return Object.keys(this._store).map(k => unmangle(k));\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = (mangled in this._store);\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n\nvar ExportedSet;\nvar ExportedMap;\n{\n  if (supportsMapAndSet()) {\n    // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else {\n    // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\nfunction isBinaryObject(object) {\n  return typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer || typeof Blob !== 'undefined' && object instanceof Blob;\n}\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) {\n    // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n}\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date && isFinite(object)) {\n    return object.toISOString();\n  }\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = typeof args[args.length - 1] === 'function' ? args.pop() : false;\n    var promise = new Promise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(err ? ['error', err] : ['success', res]);\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return Promise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return Promise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new Promise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\nfunction identityFunction(x) {\n  return x;\n}\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {\n      results: results\n    });\n  }\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {\n      id: id,\n      docs: docs\n    };\n    checkDone();\n  }\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n  var i = 0;\n  function nextBatch() {\n    if (i >= allRequests.length) {\n      return;\n    }\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n      var formatResult = identityFunction;\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{\n            error: err\n          }];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n  nextBatch();\n}\nvar hasLocal;\ntry {\n  localStorage.setItem('_pouch_check_localstorage', 1);\n  hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n} catch (e) {\n  hasLocal = false;\n}\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n\ninherits(Changes, EE);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (hasLocalStorage()) {\n    addEventListener(\"storage\", function (e) {\n      self.emit(e.key);\n    });\n  }\n}\nfunction Changes() {\n  EE.call(this);\n  this._listeners = {};\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, ['style', 'include_docs', 'attachments', 'conflicts', 'filter', 'doc_ids', 'view', 'since', 'query_params', 'binary', 'return_docs']);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        immediate(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  EE.prototype.removeListener.call(this, dbName, this._listeners[id]);\n  delete this._listeners[id];\n};\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (hasLocalStorage()) {\n    localStorage[dbName] = localStorage[dbName] === \"a\" ? \"b\" : \"a\";\n  }\n};\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n        if (nextSource != null) {\n          // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\nvar $inject_Object_assign = assign;\ninherits(PouchError, Error);\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    var names = Object.getOwnPropertyNames(error);\n    for (var i = 0, len = names.length; i < len; i++) {\n      if (typeof error[names[i]] !== 'function') {\n        this[names[i]] = error[names[i]];\n      }\n    }\n    if (this.stack === undefined) {\n      this.stack = new Error().stack;\n    }\n\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\nfunction generateErrorFromResponse(err) {\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n  if (!('stack' in err)) {\n    err.stack = new Error().stack;\n  }\n  return err;\n}\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n    if (filterReturn) {\n      return false;\n    }\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(change.doc._attachments, att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !/^_(design|local)/.test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn', 'db.type() is deprecated and will be removed in ' + 'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) : EE.listenerCount(ee, type);\n}\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\", \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName = \"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (Object.prototype.hasOwnProperty.call(scope, key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return db.get(docId).catch(function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 404) {\n      throw err;\n    }\n    return {};\n  }).then(function (doc) {\n    // the user might change the _rev, so save it for posterity\n    var docRev = doc._rev;\n    var newDoc = diffFun(doc);\n    if (!newDoc) {\n      // if the diffFun returns falsy, we short-circuit as\n      // an optimization\n      return {\n        updated: false,\n        rev: docRev\n      };\n    }\n\n    // users aren't allowed to modify these values,\n    // so reset them here\n    newDoc._id = docId;\n    newDoc._rev = docRev;\n    return tryAndPut(db, newDoc, diffFun);\n  });\n}\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\nvar thisAtob = function (str) {\n  return atob(str);\n};\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {\n    type: type\n  });\n}\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = self.setImmediate || self.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n  var append = inputIsString ? appendString : appendBlob;\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\n/**\n * Creates a new revision string that does NOT include the revision height\n * For example '56649f1b0506c6ca9fda0746eb0cacdf'\n */\nfunction rev$$1(doc, deterministic_revs) {\n  if (!deterministic_revs) {\n    return v4().replace(/-/g, '').toLowerCase();\n  }\n  var mutateableDoc = $inject_Object_assign({}, doc);\n  delete mutateableDoc._rev_tree;\n  return stringMd5(JSON.stringify(mutateableDoc));\n}\nvar uuid = v4; // mimic old import, only v4 is ever used elsewhere\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while (node = toVisit.pop()) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) {\n      // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({\n          pos: pos + 1,\n          ids: branches[i]\n        });\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted : winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n  var node;\n  while (node = toVisit.pop()) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx = callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({\n        pos: pos + 1,\n        ids: branches[i],\n        ctx: newCtx\n      });\n    }\n  }\n}\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({\n        rev: pos + \"-\" + id,\n        pos: pos,\n        opts: opts\n      });\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos, revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while (node = toVisit.pop()) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n    var history = node.history ? node.history.slice() : [];\n    history.push({\n      id: id,\n      opts: opts\n    });\n    if (isLeaf) {\n      paths.push({\n        pos: pos + 1 - history.length,\n        ids: history\n      });\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({\n        pos: pos + 1,\n        ids: branches[i],\n        history: history\n      });\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = low + high >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{\n    tree1: in_tree1,\n    tree2: in_tree2\n  }];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status = tree1[1].status === 'available' || tree2[1].status === 'available' ? 'available' : 'missing';\n    }\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({\n            tree1: tree1[2][j],\n            tree2: tree2[2][i]\n          });\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {\n    conflicts: conflicts,\n    tree: in_tree1\n  };\n}\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n  if (!tree.length) {\n    return {\n      tree: [path],\n      conflicts: 'new_leaf'\n    };\n  }\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({\n        pos: branch.pos,\n        ids: res.tree\n      });\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n      var candidateParents = [];\n      var trees = [];\n      trees.push({\n        ids: t1.ids,\n        diff: diff,\n        parent: null,\n        parentIdx: null\n      });\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n      var el = candidateParents[0];\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({\n          pos: t1.pos,\n          ids: t1.ids\n        });\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n  restree.sort(sortByPos$1);\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = path.pos + s + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else {\n      // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n  var node;\n  while (node = toVisit.pop()) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({\n        pos: node.pos + 1,\n        ids: branches[i]\n      });\n    }\n  }\n  return false;\n}\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n  var tree;\n  while (tree = toVisit.pop()) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\nfunction isLocalId(id) {\n  return /^_local/.test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while (node = toVisit.pop()) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n    var history = node.history ? node.history.slice() : [];\n    history.push({\n      id: id,\n      pos: pos,\n      opts: opts\n    });\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({\n        pos: pos + 1,\n        ids: branches[j],\n        history: history\n      });\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\ninherits(Changes$1, EE);\nfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change, pending, lastSeq);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\nfunction Changes$1(db, opts, callback) {\n  EE.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n  opts.onChange = function (change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change, pending, lastSeq);\n  };\n  var promise = new Promise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {\n      status: 'cancelled'\n    });\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$1.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{\n    rev: doc._rev\n  }];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree).map(function (x) {\n      return {\n        rev: x.rev\n      };\n    });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\nChanges$1.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\nChanges$1.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {\n          status: 'cancelled'\n        });\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.normalize(opts);\n    if (PouchDB._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn', 'The \"' + key + '\" option was passed in to changes/replicate, ' + 'but pouchdb-changes-filter plugin is not installed, so it ' + 'was ignored. Please install the plugin to enable filtering.');\n      }\n    });\n  }\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || results[0] && results[0].error) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0] : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att], ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({\n        from: prnt,\n        to: rev\n      });\n    }\n    return rev;\n  });\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\nfunction allDocsKeysParse(opts) {\n  var keys = 'limit' in opts ? opts.keys.slice(opts.skip, opts.limit + opts.skip) : opts.skip > 0 ? opts.keys.slice(opts.skip) : opts.keys;\n  opts.keys = keys;\n  opts.skip = 0;\n  delete opts.limit;\n  if (opts.descending) {\n    keys.reverse();\n    opts.descending = false;\n  }\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      immediate(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' + 'names cannot start with \\'_\\'';\n  }\n  return false;\n}\ninherits(AbstractPouchDB, EE);\nfunction AbstractPouchDB() {\n  EE.call(this);\n\n  // re-bind prototyped methods\n  for (var p in AbstractPouchDB.prototype) {\n    if (typeof this[p] === 'function') {\n      this[p] = this[p].bind(this);\n    }\n  }\n}\nAbstractPouchDB.prototype.post = adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({\n    docs: [doc]\n  }, opts, yankError(callback, doc._id));\n});\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {\n        ok: true,\n        id: doc._id,\n        rev: doc._rev\n      };\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev$$1();\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({\n        docs: [doc]\n      }, opts, yankError(next, doc._id));\n    }\n  }\n});\nAbstractPouchDB.prototype.putAttachment = adapterFun('putAttachment', function (docId, attachmentId, rev, blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev) {\n      throw createError(REV_CONFLICT);\n    }\n    return createAttachment(doc);\n  }, function (err) {\n    // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({\n        _id: docId\n      });\n    } else {\n      throw err;\n    }\n  });\n});\nAbstractPouchDB.prototype.removeAttachment = adapterFun('removeAttachment', function (docId, attachmentId, rev, callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\nAbstractPouchDB.prototype.remove = adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {\n    _id: doc._id,\n    _rev: doc._rev || opts.rev\n  };\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({\n    docs: [newDoc]\n  }, opts, yankError(callback, newDoc._id));\n});\nAbstractPouchDB.prototype.revsDiff = adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n  if (!ids.length) {\n    return callback(null, {});\n  }\n  var count = 0;\n  var missing = new ExportedMap();\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {\n        missing: []\n      });\n    }\n    missing.get(id).missing.push(revId);\n  }\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev = pos + '-' + revHash;\n      var idx = missingForId.indexOf(rev);\n      if (idx === -1) {\n        return;\n      }\n      missingForId.splice(idx, 1);\n      /* istanbul ignore if */\n      if (opts.status !== 'available') {\n        addToMissing(id, rev);\n      }\n    });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev) {\n      addToMissing(id, rev);\n    });\n  }\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {\n          missing: req[id]\n        });\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument = adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev) {\n      if (height[rev] > maxHeight) {\n        candidates.push(rev);\n      }\n    });\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev) !== -1) {\n        revs.push(rev);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact = adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var self = this;\n  opts = opts || {};\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({\n    opts: opts,\n    callback: callback\n  });\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    Promise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {\n        ok: true\n      });\n    }).catch(callback);\n  }\n  self.changes(changesOpts).on('change', onChange).on('complete', onComplete).on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [],\n    self = this;\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({\n              ok: doc\n            });\n          }\n        } else {\n          result.push({\n            missing: leaf\n          });\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        /* istanbul ignore if */\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof l === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo = parseInt(splittedRev[0], 10);\n      var revHash = splittedRev[1];\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) {\n          return x.id;\n        }).indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === revNo - 1;\n        if (hashFoundAtRevPos || !path && hashIndex !== -1) {\n          path = currentPath;\n        }\n      }\n\n      /* istanbul ignore if */\n      if (!path) {\n        err = new Error('invalid rev tree');\n        err.docId = id;\n        return cb(err);\n      }\n      var indexOfRev = path.ids.map(function (x) {\n        return x.id;\n      }).indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n      if (opts.revs) {\n        doc._revisions = {\n          start: path.pos + path.ids.length - 1,\n          ids: path.ids.map(function (rev) {\n            return rev.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos = path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev) {\n          pos--;\n          return {\n            rev: pos + '-' + rev.id,\n            status: rev.opts.status\n          };\n        });\n      }\n    }\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (! --count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (Object.prototype.hasOwnProperty.call(doc._attachments, key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment = adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId, res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\nAbstractPouchDB.prototype.allDocs = adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt = ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR, 'Query parameter `' + incompatibleOpt + '` is not compatible with multi-get'));\n      return;\n    }\n    if (!isRemote(this)) {\n      allDocsKeysParse(opts);\n      if (opts.keys.length === 0) {\n        return this._allDocs({\n          limit: 0\n        }, callback);\n      }\n    }\n  }\n  return this._allDocs(opts, callback);\n});\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  // By default set return_docs to false if the caller has opts.live = true,\n  // this will prevent us from collecting the set of changes indefinitely\n  // resulting in growing memory\n  opts.return_docs = 'return_docs' in opts ? opts.return_docs : !opts.live;\n  return new Changes$1(this, opts, callback);\n};\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return typeof this._type === 'function' ? this._type() : this.adapter;\n};\nAbstractPouchDB.prototype.bulkDocs = adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n    callback(null, res);\n  });\n});\nAbstractPouchDB.prototype.registerDependentDatabase = adapterFun('registerDependentDatabase', function (dependentDb, callback) {\n  var dbOptions = clone(this.__opts);\n  if (this.__opts.view_adapter) {\n    dbOptions.adapter = this.__opts.view_adapter;\n  }\n  var depDB = new this.constructor(dependentDb, dbOptions);\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun).then(function () {\n    callback(null, {\n      db: depDB\n    });\n  }).catch(callback);\n});\nAbstractPouchDB.prototype.destroy = adapterFun('destroy', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || {\n        'ok': true\n      });\n    });\n  }\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else {\n        // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ? name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    Promise.all(deletedMap).then(destroyDb, callback);\n  });\n});\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\nTaskQueue.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while (fun = this.queue.shift()) {\n      fun(this.failed);\n    }\n  } else {\n    while (fun = this.queue.shift()) {\n      fun();\n    }\n  }\n};\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n  var adapters = PouchDB.adapters;\n  var preferredAdapters = PouchDB.preferredAdapters;\n  var prefix = PouchDB.prefix;\n  var adapterName = opts.adapter;\n  if (!adapterName) {\n    // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters && hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' + ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n\n      break;\n    }\n  }\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = adapter && 'use_prefix' in adapter ? adapter.use_prefix : true;\n  return {\n    name: usePrefix ? prefix + name : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\ninherits(PouchDB, AbstractPouchDB);\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n  var self = this;\n  opts = opts || {};\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n  if (opts.deterministic_revs === undefined) {\n    opts.deterministic_revs = true;\n  }\n  this.__opts = opts = clone(opts);\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n  if (!PouchDB.adapters[opts.adapter] || !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n  if (opts.view_adapter) {\n    if (!PouchDB.adapters[opts.view_adapter] || !PouchDB.adapters[opts.view_adapter].valid()) {\n      throw new Error('Invalid View Adapter: ' + opts.view_adapter);\n    }\n  }\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue();\n  self.adapter = opts.adapter;\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n}\n\n// AbortController was introduced quite a while after fetch and\n// isnt required for PouchDB to function so polyfill if needed\nvar a = typeof AbortController !== 'undefined' ? AbortController : function () {\n  return {\n    abort: function () {}\n  };\n};\nvar f$1 = fetch;\nvar h = Headers;\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\nPouchDB.prefix = '_pouch_';\nvar eventEmitter = new EE();\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EE.prototype).forEach(function (key) {\n    if (typeof EE.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed', true);\n    });\n  });\n}\nsetUpEventEmitter(PouchDB);\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') {\n    // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) {\n      // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB;\n};\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n    opts = opts || {};\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB.call(this, name, opts);\n  }\n  inherits(PouchAlt, PouchDB);\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n  return PouchAlt;\n};\nPouchDB.fetch = function (url, opts) {\n  return f$1(url, opts);\n};\n\n// managed automatically by set-version.js\nvar version = \"7.3.1\";\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (i > 0 && fieldName[i - 1] === '\\\\' && (ch === '$' || ch === '.')) {\n      // escaped delimiter\n      current = current.substring(0, current.length - 1) + ch;\n    } else if (ch === '.') {\n      // When `.` is not escaped (above), it is a field delimiter\n      fields.push(current);\n      current = '';\n    } else {\n      // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n  var first = {\n    $or: true,\n    $nor: true\n  };\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {\n          $eq: matcher\n        };\n      }\n      if (isCombinationalField(field)) {\n        // or, nor\n        if (matcher instanceof Array) {\n          if (first[field]) {\n            first[field] = false;\n            res[field] = matcher;\n            return;\n          }\n          var entries = [];\n          res[field].forEach(function (existing) {\n            Object.keys(matcher).forEach(function (key) {\n              var m = matcher[key];\n              var longest = Math.max(Object.keys(existing).length, Object.keys(m).length);\n              var merged = mergeAndedSelectors([existing, m]);\n              if (Object.keys(merged).length <= longest) {\n                // we have a situation like: (a :{$eq :1} || ...) && (a {$eq: 2} || ...)\n                // merging would produce a $eq 2 when actually we shouldn't ever match against these merged conditions\n                // merged should always contain more values to be valid\n                return;\n              }\n              entries.push(merged);\n            });\n          });\n          res[field] = entries;\n        } else {\n          // not\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          } else if (operator === \"$regex\") {\n            return mergeRegex(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n  return res;\n}\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) {\n        // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else {\n      // operator === '$gt'\n      if (value >= fieldMatchers.$gte) {\n        // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) {\n        // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else {\n      // operator === '$gt'\n      if (value > fieldMatchers.$gt) {\n        // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) {\n        // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else {\n      // operator === '$gt'\n      if (value <= fieldMatchers.$lte) {\n        // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) {\n        // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else {\n      // operator === '$gt'\n      if (value < fieldMatchers.$lt) {\n        // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else {\n    // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n// combine $regex values into one array\nfunction mergeRegex(value, fieldMatchers) {\n  if ('$regex' in fieldMatchers) {\n    // a value could match multiple regexes\n    fieldMatchers.$regex.push(value);\n  } else {\n    // doesn't exist yet\n    fieldMatchers.$regex = [value];\n  }\n}\n\n//#7458: execute function mergeAndedSelectors on nested $and\nfunction mergeAndedSelectorsNested(obj) {\n  for (var prop in obj) {\n    if (Array.isArray(obj)) {\n      for (var i in obj) {\n        if (obj[i]['$and']) {\n          obj[i] = mergeAndedSelectors(obj[i]['$and']);\n        }\n      }\n    }\n    var value = obj[prop];\n    if (typeof value === 'object') {\n      mergeAndedSelectorsNested(value); // <- recursive call\n    }\n  }\n\n  return obj;\n}\n\n//#7458: determine id $and is present in selector (at any level)\nfunction isAndInSelector(obj, isAnd) {\n  for (var prop in obj) {\n    if (prop === '$and') {\n      isAnd = true;\n    }\n    var value = obj[prop];\n    if (typeof value === 'object') {\n      isAnd = isAndInSelector(value, isAnd); // <- recursive call\n    }\n  }\n\n  return isAnd;\n}\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n  //#7458: if $and is present in selector (at any level) merge nested $and\n  if (isAndInSelector(result, false)) {\n    result = mergeAndedSelectorsNested(result);\n    if ('$and' in result) {\n      result = mergeAndedSelectors(result['$and']);\n    }\n    wasAnded = true;\n  }\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {\n              $eq: matcher\n            };\n          }\n        }\n      });\n    }\n  });\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n  var fields = Object.keys(result);\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {\n        $eq: matcher\n      };\n    } else if (!wasAnded) {\n      // These values must be placed in an array because these operators can be used multiple times on the same field\n      // when $and is used, mergeAndedSelectors takes care of putting them into arrays, otherwise it's done here:\n      if ('$ne' in matcher) {\n        matcher.$ne = [matcher.$ne];\n      }\n      if ('$regex' in matcher) {\n        matcher.$regex = [matcher.$regex];\n      }\n    }\n    result[field] = matcher;\n  }\n  return result;\n}\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging\n\nfunction collate(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if (ai - bi !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n        /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) {\n        // generic object\n        key = {};\n        for (var k in origKey) {\n          if (Object.prototype.hasOwnProperty.call(origKey, k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        /* eslint-disable no-control-regex */\n        return key.replace(/\\u0002/g, '\\u0002\\u0002').replace(/\\u0001/g, '\\u0001\\u0002').replace(/\\u0000/g, '\\u0001\\u0001');\n      /* eslint-enable no-control-regex */\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) + toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {\n    num: num,\n    length: i - originalIdx\n  };\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) {\n      // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        /* eslint-disable no-control-regex */\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000').replace(/\\u0001\\u0002/g, '\\u0001').replace(/\\u0002\\u0002/g, '\\u0002');\n        /* eslint-enable no-control-regex */\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = {\n          element: [],\n          index: stack.length\n        };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = {\n          element: {},\n          index: stack.length\n        };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error('bad collationIndex or unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n}\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return a.length === b.length ? 0 : a.length > b.length ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return a === b ? 0 : a > b ? 1 : -1;\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a),\n    bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return ak.length === bk.length ? 0 : ak.length > bk.length ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? idx + 2 : idx + 3;\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n  var neg = num < 0;\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = (neg ? -magnitude : magnitude) - MIN_MAGNITUDE;\n  var magString = padLeft(magForComparison.toString(), '0', MAGNITUDE_DIGITS);\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) {\n    // for negative reverse ordering\n    factor = 10 - factor;\n  }\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n  result += SEP + factorStr;\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' && getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  // is matcher an object, if so continue recursion\n  if (typeof matcher === 'object') {\n    return Object.keys(matcher).every(function (maybeUserOperator) {\n      var userValue = matcher[maybeUserOperator];\n      // explicit operator\n      if (maybeUserOperator.indexOf(\"$\") === 0) {\n        return match(maybeUserOperator, doc, userValue, parsedField, docFieldValue);\n      } else {\n        var subParsedField = parseField(maybeUserOperator);\n        if (docFieldValue === undefined && typeof userValue !== \"object\" && subParsedField.length > 0) {\n          // the field does not exist, return or getFieldFromDoc will throw\n          return false;\n        }\n        var subDocFieldValue = getFieldFromDoc(docFieldValue, subParsedField);\n        if (typeof userValue === \"object\") {\n          // field value is an object that might contain more operators\n          return matchSelector(userValue, doc, parsedField, subDocFieldValue);\n        }\n\n        // implicit operator\n        return match(\"$eq\", doc, userValue, subParsedField, subDocFieldValue);\n      }\n    });\n  }\n\n  // no more depth, No need to recurse further\n  return matcher === docFieldValue;\n}\nfunction matchCominationalSelector(field, matcher, doc) {\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n}\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    /* istanbul ignore next */\n    throw new Error('unknown operator \"' + userOperator + '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' + '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\nfunction modField(docFieldValue, userValue) {\n  if (typeof docFieldValue !== \"number\" || parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  return docFieldValue % divisor === mod;\n}\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.some(function (docFieldValueItem) {\n        return collate(val, docFieldValueItem) === 0;\n      });\n    }\n    return collate(val, docFieldValue) === 0;\n  });\n}\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.some(function (docFieldValueItem) {\n      return collate(val, docFieldValueItem) === 0;\n    });\n  });\n}\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n  return re.test(docFieldValue);\n}\nfunction typeMatch(docFieldValue, userValue) {\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof docFieldValue === 'boolean';\n    case 'number':\n      return typeof docFieldValue === 'number';\n    case 'string':\n      return typeof docFieldValue === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return {}.toString.call(docFieldValue) === '[object Object]';\n  }\n}\nvar matchers = {\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n    if (typeof docFieldValue[0] === 'object' && docFieldValue[0] !== null) {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n    if (typeof docFieldValue[0] === 'object' && docFieldValue[0] !== null) {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && Array.isArray(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && typeof docFieldValue == \"string\" && userValue.every(function (regexValue) {\n      return regexMatch(docFieldValue, regexValue);\n    });\n  },\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n  var rowsMatched = filterInMemoryFields([row], {\n    'selector': selector\n  }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\nfunction evalView(input) {\n  var code = ['return function(doc) {', '  \"use strict\";', '  var emitted = false;', '  var emit = function (a, b) {', '    emitted = true;', '  };', '  var view = ' + input + ';', '  view(doc);', '  if (emitted) {', '    return true;', '  }', '};'].join('\\n');\n  return scopeEval(code, {});\n}\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ? opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' && !opts.doc_ids && !isRemote(changesHandler.db);\n}\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST, '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {\n          status: 'cancelled'\n        });\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] && ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC, ddoc.views ? 'missing json key: ' + viewName[1] : 'missing json key: views'));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {\n          status: 'cancelled'\n        });\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC, ddoc && ddoc.filters ? 'missing json key: ' + filterName[1] : 'missing json key: filters'));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB.plugin(applyChangesFilterPlugin);\nPouchDB.version = version;\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject(['_id', '_rev', '_access', '_attachments', '_deleted', '_revisions', '_revs_info', '_conflicts', '_deleted_conflicts', '_local_seq', '_rev_tree',\n// replication documents\n'_replication_id', '_replication_state', '_replication_state_time', '_replication_state_reason', '_replication_stats',\n// Specific to Couchbase Sync Gateway\n'_removed']);\n\n// List of reserved words that should end up in the document\nvar dataWords = toObject(['_access', '_attachments',\n// replication documents\n'_replication_id', '_replication_state', '_replication_state_time', '_replication_state_reason', '_replication_stats']);\nfunction parseRevisionInfo(rev) {\n  if (!/^\\d+-/.test(rev)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev.indexOf('-');\n  var left = rev.substring(0, idx);\n  var right = rev.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {\n      status: 'missing'\n    }, [ids]];\n  }\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits, dbOpts) {\n  if (!dbOpts) {\n    dbOpts = {\n      deterministic_revs: true\n    };\n  }\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {\n    status: 'available'\n  };\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev$$1(doc, dbOpts.deterministic_revs);\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {\n          status: 'missing'\n        }, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids: [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n  invalidIdError(doc._id);\n  doc._rev = nRevNum + '-' + newRevId;\n  var result = {\n    metadata: {},\n    data: {}\n  };\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG, 'Attachment is not a valid base64 string');\n    return {\n      error: err\n    };\n  }\n}\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else {\n    // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') {\n    // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else {\n    // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\nfunction preprocessAttachments(docInfos, blobType, callback) {\n  if (!docInfos.length) {\n    return callback();\n  }\n  var docv = 0;\n  var overallErr;\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ? Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n    if (!attachments.length) {\n      return done();\n    }\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n    for (var key in docInfo.data._attachments) {\n      if (Object.prototype.hasOwnProperty.call(docInfo.data._attachments, key)) {\n        preprocessAttachment(docInfo.data._attachments[key], blobType, processedAttachment);\n      }\n    }\n  });\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\nfunction updateDoc(revLimit, prev, docInfo, results, i, cb, writeDoc, newEdits) {\n  if (revExists(prev.rev_tree, docInfo.metadata.rev) && !newEdits) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted : isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted : isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n  var inConflict = newEdits && (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf' || !previouslyDeleted && merged.conflicts !== 'new_leaf' || previouslyDeleted && !deleted && merged.conflicts === 'new_branch');\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = previouslyDeleted === winningRevIsDeleted ? 0 : previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted, true, delta, i, cb);\n}\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results, writeDoc, opts, overallCallback) {\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n    var delta = deleted ? 0 : 1;\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false, delta, resultsIdx, callback);\n  }\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {\n        ctx: tx\n      }, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results, resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq,\n    // highest seq for this doc\n    id: metadata.id\n  };\n}\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {\n        type: type\n      }));\n    } else if (typeof body !== 'string') {\n      // we have blob support\n      callback(body);\n    } else {\n      // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else {\n    // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') {\n      // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else {\n      // no blob support\n      callback(body);\n    }\n  }\n}\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return Promise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return Promise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) {\n          // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new Promise(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(pick(attObj, ['digest', 'content_type']), {\n              data: data\n            });\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\nfunction compactRevs(revs, docId, txn) {\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n  function checkDone() {\n    count--;\n    if (!count) {\n      // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(IDBKeyRange.bound(digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n  revs.forEach(function (rev) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n      var cursor = attAndSeqStore.index('seq').openCursor(IDBKeyRange.only(seq));\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else {\n          // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\nvar changesHandler = new Changes();\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits, dbOpts);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n  function startTransaction() {\n    var stores = [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE, LOCAL_STORE, ATTACH_AND_SEQ_STORE, META_STORE];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n  function fetchExistingDocs() {\n    if (!docInfos.length) {\n      return;\n    }\n    var numFetched = 0;\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n    changesHandler.notify(api._meta.name);\n    callback(null, results);\n  }\n  function verifyAttachment(digest, callback) {\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB, 'unknown stub attachment with digest ' + digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n  function verifyAttachments(finish) {\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted, isUpdate, delta, resultsIdx, callback) {\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n    var hasAttachments = doc._attachments && Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback);\n    }\n    docCountDelta += delta;\n    updateDocCountIfReady();\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback);\n  }\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback) {\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1, winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n    var putReq = bySeqStore.put(doc);\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback) {\n    var doc = docInfo.data;\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback);\n      }\n    }\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n    if (!attsToAdd.length) {\n      return callback();\n    }\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n  if (batchSize === -1) {\n    batchSize = 1000;\n  }\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' && typeof objectStore.getAllKeys === 'function' && batchSize > 1 && !descending;\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n  function continuePseudoCursor() {\n    if (!keysBatch.length) {\n      // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper, true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) {\n      // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n  if (useGetAll) {\n    pseudoCursor = {\n      \"continue\": continuePseudoCursor\n    };\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\nfunction allDocsKeys(keys, docStore, onBatch) {\n  // It's not guaranted to be returned in right order  \n  var valuesBatch = new Array(keys.length);\n  var count = 0;\n  keys.forEach(function (key, index) {\n    docStore.get(key).onsuccess = function (event) {\n      if (event.target.result) {\n        valuesBatch[index] = event.target.result;\n      } else {\n        valuesBatch[index] = {\n          key: key,\n          error: 'not_found'\n        };\n      }\n      count++;\n      if (count === keys.length) {\n        onBatch(keys, valuesBatch, {});\n      }\n    };\n  });\n}\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {\n      error: e\n    };\n  }\n  return null;\n}\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var keys = 'keys' in opts ? opts.keys : false;\n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n  var keyRange;\n  var keyRangeError;\n  if (!keys) {\n    keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n    keyRangeError = keyRange && keyRange.error;\n    if (keyRangeError && !(keyRangeError.name === \"DataError\" && keyRangeError.code === 0)) {\n      // DataError with error code 0 indicates start is less than end, so\n      // can just do an empty query. Else need to throw\n      return callback(createError(IDB_ERROR, keyRangeError.name, keyRangeError.message));\n    }\n  }\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n  var updateSeq;\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  /* istanbul ignore if */\n  if (opts.update_seq) {\n    getMaxUpdateSeq(seqStore, function (e) {\n      if (e.target.result && e.target.result.length > 0) {\n        updateSeq = e.target.result[0];\n      }\n    });\n  }\n  function getMaxUpdateSeq(objectStore, onSuccess) {\n    function onCursor(e) {\n      var cursor = e.target.result;\n      var maxKey = undefined;\n      if (cursor && cursor.key) {\n        maxKey = cursor.key;\n      }\n      return onSuccess({\n        target: {\n          result: [maxKey]\n        }\n      });\n    }\n    objectStore.openCursor(null, 'prev').onsuccess = onCursor;\n  }\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess = function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result) || {};\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (deleted) {\n      if (keys) {\n        results.push(row);\n        // deleted docs are okay with \"keys\" requests\n        row.value.deleted = true;\n        row.doc = null;\n      }\n    } else if (skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      if (batchValue.error && keys) {\n        // key was not found with \"keys\" requests\n        results.push(batchValue);\n        continue;\n      }\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n  function onResultsReady() {\n    var returnVal = {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    };\n\n    /* istanbul ignore if */\n    if (opts.update_seq && updateSeq !== undefined) {\n      returnVal.update_seq = updateSeq;\n    }\n    callback(null, returnVal);\n  }\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (keys) {\n    return allDocsKeys(opts.keys, docStore, onBatch);\n  }\n  if (limit === -1) {\n    // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new Promise(function (resolve) {\n    var blob$$1 = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n    };\n    req.onerror = txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n\nvar running = false;\nvar queue = [];\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      immediate(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler.addListener(dbName, id, api, opts);\n    changesHandler.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler.removeListener(dbName, id);\n      }\n    };\n  }\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) {\n      // done\n      return;\n    }\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n      var filtered = filter(change);\n      if (typeof filtered === 'object') {\n        // anything but true/false indicates error\n        return Promise.reject(filtered);\n      }\n      if (!filtered) {\n        return Promise.resolve();\n      }\n      numResults++;\n      if (opts.return_docs) {\n        results.push(change);\n      }\n      // process the attachment immediately\n      // for the benefit of live listeners\n      if (opts.attachments && opts.include_docs) {\n        return new Promise(function (resolve) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              resolve(change);\n            });\n          });\n        });\n      } else {\n        return Promise.resolve(change);\n      }\n    }\n    function onBatchDone() {\n      var promises = [];\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        promises.push(processMetadataAndWinningDoc(metadata, winningDoc));\n      }\n      Promise.all(promises).then(function (changes) {\n        for (var i = 0, len = changes.length; i < len; i++) {\n          if (changes[i]) {\n            opts.onChange(changes[i]);\n          }\n        }\n      }).catch(opts.complete);\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) {\n      // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n  var keyRange = opts.since && !opts.descending ? IDBKeyRange.lowerBound(opts.since, true) : null;\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\nfunction IdbPouch(opts, callback) {\n  var api = this;\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\nfunction init(api, opts, callback) {\n  var dbName = opts.name;\n  var idb = null;\n  var idbGlobalFailureError = null;\n  api._meta = null;\n  function enrichCallbackError(callback) {\n    return function (error, result) {\n      if (error && error instanceof Error && !error.reason) {\n        if (idbGlobalFailureError) {\n          error.reason = idbGlobalFailureError;\n        }\n      }\n      callback(error, result);\n    };\n  }\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {\n      keyPath: 'id'\n    });\n    db.createObjectStore(BY_SEQ_STORE, {\n      autoIncrement: true\n    }).createIndex('_doc_id_rev', '_doc_id_rev', {\n      unique: true\n    });\n    db.createObjectStore(ATTACH_STORE, {\n      keyPath: 'digest'\n    });\n    db.createObjectStore(META_STORE, {\n      keyPath: 'id',\n      autoIncrement: false\n    });\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {\n      unique: false\n    });\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {\n      keyPath: '_id'\n    });\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE, {\n      autoIncrement: true\n    });\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {\n      unique: true\n    });\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {\n      unique: false\n    });\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {\n      keyPath: '_id'\n    }).createIndex('_doc_id_rev', '_doc_id_rev', {\n      unique: true\n    });\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE, {\n      autoIncrement: true\n    });\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {\n      unique: true\n    });\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n\n      var metadata = decodeMetadataCompat(cursor.value);\n      metadata.winningRev = metadata.winningRev || winningRev(metadata);\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(IDBKeyRange.bound(start, end));\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata, metadata.winningRev, metadata.deleted);\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n      fetchMetadataSeq();\n    };\n  }\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, enrichCallbackError(callback));\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb, [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    function finish() {\n      callback(err, {\n        doc: doc,\n        metadata: metadata,\n        ctx: txn\n      });\n    }\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n      var rev;\n      if (!opts.rev) {\n        rev = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev;\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb, [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: api._meta.blobSupport ? 'binary' : 'base64'\n      });\n    };\n  };\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, enrichCallbackError(callback));\n  };\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE, ATTACH_AND_SEQ_STORE];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos, revHash, ctx, opts) {\n        var rev = pos + '-' + revHash;\n        if (revs.indexOf(rev) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else {\n          // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {\n              ok: true,\n              id: doc._id,\n              rev: doc._rev\n            };\n            if (opts.ctx) {\n              // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else {\n      // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n\n      req.onsuccess = function () {\n        ret = {\n          ok: true,\n          id: doc._id,\n          rev: doc._rev\n        };\n        if (opts.ctx) {\n          // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {\n          ok: true,\n          id: id,\n          rev: '0-0'\n        };\n        if (opts.ctx) {\n          // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n  api._destroy = function (opts, callback) {\n    changesHandler.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && dbName in localStorage) {\n        delete localStorage[dbName];\n      }\n      callback(null, {\n        'ok': true\n      });\n    };\n    req.onerror = idbError(callback);\n  };\n  var cached = cachedDBs.get(dbName);\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return immediate(function () {\n      callback(null, api);\n    });\n  }\n  var req = indexedDB.open(dbName, ADAPTER_VERSION);\n  openReqList.set(dbName, req);\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [addDeletedOrLocalIndex,\n    // v1 -> v2\n    migrateLocalStore,\n    // v2 -> v3\n    migrateAttsAndSeqs,\n    // v3 -> v4\n    migrateMetadata // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n    next();\n  };\n  req.onsuccess = function (e) {\n    idb = e.target.result;\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idbGlobalFailureError = e.target.error;\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([META_STORE, DETECT_BLOB_SUPPORT_STORE, DOC_STORE], 'readwrite');\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || {\n        id: META_STORE\n      };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n    txn.onabort = idbError(callback);\n  };\n  req.onerror = function (e) {\n    var msg = e.target.error && e.target.error.message;\n    if (!msg) {\n      msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    } else if (msg.indexOf(\"stored database is a higher version\") !== -1) {\n      msg = new Error('This DB was created with the newer \"indexeddb\" adapter, but you are trying to open it with the older \"idb\" adapter');\n    }\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\nIdbPouch.valid = function () {\n  // Following #7085 buggy idb versions (typically Safari < 10.1) are\n  // considered valid.\n\n  // On Firefox SecurityError is thrown while referencing indexedDB if cookies\n  // are not allowed. `typeof indexedDB` also triggers the error.\n  try {\n    // some outdated implementations of IDB that appear on Samsung\n    // and HTC Android devices <4.4 are missing IDBKeyRange\n    return typeof indexedDB !== 'undefined' && typeof IDBKeyRange !== 'undefined';\n  } catch (e) {\n    return false;\n  }\n};\nfunction IDBPouch(PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\nfunction pool(promiseFactories, limit) {\n  return new Promise(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n    runNextBatch();\n  });\n}\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\nvar supportsBulkGetMap = {};\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var doc = row.doc || row.ok;\n  var atts = doc && doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\nfunction preprocessAttachments$1(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return Promise.resolve();\n  }\n  return Promise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new Promise(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n  var protocol = parseUri(opts.prefix).protocol;\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    // Ensure prefix has a trailing slash\n    var prefix = opts.prefix.replace(/\\/?$/, '/');\n    name = prefix + encodeURIComponent(dbName);\n  }\n  var uri = parseUri(name);\n  if (uri.user || uri.password) {\n    uri.auth = {\n      username: uri.user,\n      password: uri.password\n    };\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n  uri.path = parts.join('/');\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host + (opts.port ? ':' + opts.port : '') + '/' + opts.path + pathDel + path;\n}\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\nfunction shouldCacheBust(opts) {\n  var ua = typeof navigator !== 'undefined' && navigator.userAgent ? navigator.userAgent.toLowerCase() : '';\n  var isIE = ua.indexOf('msie') !== -1;\n  var isTrident = ua.indexOf('trident') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n  var isGET = !('method' in opts) || opts.method === 'GET';\n  return (isIE || isTrident || isEdge) && isGET;\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n  opts = clone(opts);\n  var ourFetch = function (url, options) {\n    options = options || {};\n    options.headers = options.headers || new h();\n    options.credentials = 'include';\n    if (opts.auth || host.auth) {\n      var nAuth = opts.auth || host.auth;\n      var str = nAuth.username + ':' + nAuth.password;\n      var token = thisBtoa(unescape(encodeURIComponent(str)));\n      options.headers.set('Authorization', 'Basic ' + token);\n    }\n    var headers = opts.headers || {};\n    Object.keys(headers).forEach(function (key) {\n      options.headers.append(key, headers[key]);\n    });\n\n    /* istanbul ignore if */\n    if (shouldCacheBust(options)) {\n      url += (url.indexOf('?') === -1 ? '?' : '&') + '_nonce=' + Date.now();\n    }\n    var fetchFun = opts.fetch || f$1;\n    return fetchFun(url, options);\n  };\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    })).bind(api);\n  }\n  function fetchJSON(url, options, callback) {\n    var result = {};\n    options = options || {};\n    options.headers = options.headers || new h();\n    if (!options.headers.get('Content-Type')) {\n      options.headers.set('Content-Type', 'application/json');\n    }\n    if (!options.headers.get('Accept')) {\n      options.headers.set('Accept', 'application/json');\n    }\n    return ourFetch(url, options).then(function (response) {\n      result.ok = response.ok;\n      result.status = response.status;\n      return response.json();\n    }).then(function (json) {\n      result.data = json;\n      if (!result.ok) {\n        result.data.status = result.status;\n        var err = generateErrorFromResponse(result.data);\n        if (callback) {\n          return callback(err);\n        } else {\n          throw err;\n        }\n      }\n      if (Array.isArray(result.data)) {\n        result.data = result.data.map(function (v) {\n          if (v.error || v.missing) {\n            return generateErrorFromResponse(v);\n          } else {\n            return v;\n          }\n        });\n      }\n      if (callback) {\n        callback(null, result.data);\n      } else {\n        return result;\n      }\n    });\n  }\n  var setupPromise;\n  function setup() {\n    if (opts.skip_setup) {\n      return Promise.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n    setupPromise = fetchJSON(dbUrl).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return fetchJSON(dbUrl, {\n          method: 'PUT'\n        });\n      } else {\n        return Promise.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return Promise.reject(err);\n    });\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n    return setupPromise;\n  }\n  immediate(function () {\n    callback(null, api);\n  });\n  api._remote = true;\n\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n  api.id = adapterFun$$1('id', function (callback) {\n    ourFetch(genUrl(host, '')).then(function (response) {\n      return response.json();\n    }).catch(function () {\n      return {};\n    }).then(function (result) {\n      // Bad response or missing `uuid` should not prevent ID generation.\n      var uuid$$1 = result && result.uuid ? result.uuid + host.db : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n    fetchJSON(genDBUrl(host, '_compact'), {\n      method: 'POST'\n    }).then(function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {\n              ok: true\n            });\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      fetchJSON(genDBUrl(host, '_bulk_get' + paramsToStr(params)), {\n        method: 'POST',\n        body: JSON.stringify({\n          docs: opts.docs\n        })\n      }).then(function (result) {\n        if (opts.attachments && opts.binary) {\n          result.data.results.forEach(function (res) {\n            res.docs.forEach(readAttachmentsAsBlobOrBuffer);\n          });\n        }\n        cb(null, result.data);\n      }).catch(cb);\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {\n              results: flatten(results)\n            });\n          }\n        };\n      }\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'binary', 'latest']);\n        subOpts.docs = opts.docs.slice(i * batchSize, Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(err.status, 'PouchDB is just detecting if the remote ' + 'supports the _bulk_get API.');\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      return ourFetch(genDBUrl(host, ''));\n    }).then(function (response) {\n      return response.json();\n    }).then(function (info) {\n      info.host = genDBUrl(host, '');\n      callback(null, info);\n    }).catch(callback);\n  };\n  api.fetch = function (path, options) {\n    return setup().then(function () {\n      var url = path.substring(0, 1) === '/' ? genUrl(host, path.substring(1)) : genDBUrl(host, path);\n      return ourFetch(url, options);\n    });\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    if (opts.revs) {\n      params.revs = true;\n    }\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n    if (opts.latest) {\n      params.latest = true;\n    }\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = opts.update_seq;\n    }\n    id = encodeDocId(id);\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetchData(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) + '?rev=' + doc._rev;\n        return ourFetch(genDBUrl(host, path)).then(function (response) {\n          if ('buffer' in response) {\n            return response.buffer();\n          } else {\n            /* istanbul ignore next */\n            return response.blob();\n          }\n        }).then(function (blob) {\n          if (opts.binary) {\n            var typeFieldDescriptor = Object.getOwnPropertyDescriptor(blob.__proto__, 'type');\n            if (!typeFieldDescriptor || typeFieldDescriptor.set) {\n              blob.type = att.content_type;\n            }\n            return blob;\n          }\n          return new Promise(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetchData(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return Promise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n    var url = genDBUrl(host, id + paramsToStr(params));\n    fetchJSON(url).then(function (res) {\n      return Promise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res.data);\n        }\n      }).then(function () {\n        callback(null, res.data);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove', function (docOrId, optsOrRev, opts, cb) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        cb = optsOrRev;\n        opts = {};\n      } else {\n        cb = opts;\n        opts = optsOrRev;\n      }\n    }\n    var rev = doc._rev || opts.rev;\n    var url = genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev;\n    fetchJSON(url, {\n      method: 'DELETE'\n    }, cb).catch(cb);\n  });\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment = adapterFun$$1('getAttachment', function (docId, attachmentId, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? '?rev=' + opts.rev : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' + encodeAttachmentId(attachmentId) + params;\n    var contentType;\n    ourFetch(url, {\n      method: 'GET'\n    }).then(function (response) {\n      contentType = response.headers.get('content-type');\n      if (!response.ok) {\n        throw response;\n      } else {\n        if (typeof process !== 'undefined' && !process.browser && typeof response.buffer === 'function') {\n          return response.buffer();\n        } else {\n          /* istanbul ignore next */\n          return response.blob();\n        }\n      }\n    }).then(function (blob) {\n      // TODO: also remove\n      if (typeof process !== 'undefined' && !process.browser) {\n        var typeFieldDescriptor = Object.getOwnPropertyDescriptor(blob.__proto__, 'type');\n        if (!typeFieldDescriptor || typeFieldDescriptor.set) {\n          blob.type = contentType;\n        }\n      }\n      callback(null, blob);\n    }).catch(function (err) {\n      callback(err);\n    });\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment = adapterFun$$1('removeAttachment', function (docId, attachmentId, rev, callback) {\n    var url = genDBUrl(host, encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId)) + '?rev=' + rev;\n    fetchJSON(url, {\n      method: 'DELETE'\n    }, callback).catch(callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment = adapterFun$$1('putAttachment', function (docId, attachmentId, rev, blob, type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev;\n      rev = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev) {\n      url += '?rev=' + rev;\n    }\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG, 'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    // Add the attachment\n    fetchJSON(url, {\n      headers: new h({\n        'Content-Type': type\n      }),\n      method: 'PUT',\n      body: blob\n    }, callback).catch(callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n    setup().then(function () {\n      return Promise.all(req.docs.map(preprocessAttachments$1));\n    }).then(function () {\n      // Update/create the documents\n      return fetchJSON(genDBUrl(host, '_bulk_docs'), {\n        method: 'POST',\n        body: JSON.stringify(req)\n      }, callback);\n    }).catch(callback);\n  };\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$1(doc);\n    }).then(function () {\n      return fetchJSON(genDBUrl(host, encodeDocId(doc._id)), {\n        method: 'PUT',\n        body: JSON.stringify(doc)\n      });\n    }).then(function (result) {\n      callback(null, result.data);\n    }).catch(function (err) {\n      err.docId = doc && doc._id;\n      callback(err);\n    });\n  };\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n    if (opts.descending) {\n      params.descending = true;\n    }\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n    var paramStr = paramsToStr(params);\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {\n        keys: opts.keys\n      };\n    }\n    fetchJSON(genDBUrl(host, '_all_docs' + paramStr), {\n      method: method,\n      body: JSON.stringify(body)\n    }).then(function (result) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        result.data.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, result.data);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n    opts = clone(opts);\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n    var requestTimeout = 'timeout' in opts ? opts.timeout : 30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout && requestTimeout - opts.timeout < CHANGES_TIMEOUT_BUFFER) {\n      requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    /* istanbul ignore if */\n    if ('heartbeat' in opts && opts.heartbeat && requestTimeout - opts.heartbeat < CHANGES_TIMEOUT_BUFFER) {\n      requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n    var limit = typeof opts.limit !== 'undefined' ? opts.limit : false;\n    var leftToFetch = limit;\n    if (opts.style) {\n      params.style = opts.style;\n    }\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n    if (opts.seq_interval) {\n      params.seq_interval = opts.seq_interval;\n    }\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(opts.query_params, param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n    var method = 'GET';\n    var body;\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {\n        doc_ids: opts.doc_ids\n      };\n    }\n    /* istanbul ignore next */else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {\n        selector: opts.selector\n      };\n    }\n    var controller = new a();\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetchData = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Cloudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = !limit || leftToFetch > batchSize ? batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var url = genDBUrl(host, '_changes' + paramsToStr(params));\n      var fetchOpts = {\n        signal: controller.signal,\n        method: method,\n        body: JSON.stringify(body)\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        return fetchJSON(url, fetchOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {\n      results: []\n    };\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        var pending = null;\n        var lastSeq = null;\n        // Attach 'pending' property if server supports it (CouchDB 2.0+)\n        /* istanbul ignore if */\n        if (typeof res.pending === 'number') {\n          pending = res.pending;\n        }\n        if (typeof results.last_seq === 'string' || typeof results.last_seq === 'number') {\n          lastSeq = results.last_seq;\n        }\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (opts.return_docs) {\n              results.results.push(c);\n            }\n            opts.onChange(c, pending, lastSeq);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n      var finished = limit && leftToFetch <= 0 || res && raw_results_length < batchSize || opts.descending;\n      if (opts.continuous && !(limit && leftToFetch <= 0) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        immediate(function () {\n          fetchData(lastFetchedSeq, fetched);\n        });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n    fetchData(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        controller.abort();\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    fetchJSON(genDBUrl(host, '_revs_diff'), {\n      method: 'POST',\n      body: JSON.stringify(req)\n    }, callback).catch(callback);\n  });\n  api._close = function (callback) {\n    callback();\n  };\n  api._destroy = function (options, callback) {\n    fetchJSON(genDBUrl(host, ''), {\n      method: 'DELETE'\n    }).then(function (json) {\n      callback(null, json);\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status === 404) {\n        callback(null, {\n          ok: true\n        });\n      } else {\n        callback(err);\n      }\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\nfunction HttpPouch$1(PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n}\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\ninherits(QueryParseError, Error);\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\ninherits(NotFoundError, Error);\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\ninherits(BuiltInError, Error);\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      immediate(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      immediate(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name + ' function requires map values to be numbers' + ' or number arrays';\n  return new BuiltInError(message);\n}\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else {\n        // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else {\n      // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\"return (\" + func.replace(/;\\s*$/, \"\") + \");\", {\n    emit: emit,\n    sum: sum,\n    log: log,\n    isArray: isArray,\n    toJSON: toJSON\n  });\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\nfunction TaskQueue$1() {\n  this.promise = new Promise(function (fulfill) {\n    fulfill();\n  });\n}\nTaskQueue$1.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$1.prototype.finish = function () {\n  return this.promise;\n};\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n  var promiseForView = sourceDB.info().then(function (info) {\n    var depDbName = info.db_name + '-mrview-' + (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$1();\nvar CHANGES_BATCH_SIZE$1 = 50;\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\nfunction emitError(db, e, data) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error', 'The user\\'s map/reduce function threw an uncaught error.\\n' + 'You can debug this error by doing:\\n' + 'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' + 'Please double-check your map/reduce function.');\n    guardedConsole('error', e, data);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e, {\n        fun: fun,\n        doc: doc\n      });\n    }\n  }\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {\n        output: fun(keys, values, rereduce)\n      };\n    } catch (e) {\n      emitError(db, e, {\n        fun: fun,\n        keys: keys,\n        values: values,\n        rereduce: rereduce\n      });\n      return {\n        error: e\n      };\n    }\n  }\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = val && typeof val === 'object' && val._id || row.id;\n    return docId;\n  }\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return new QueryParseError('Invalid value for integer: \"' + number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' + '\"' + number + '\"');\n      }\n    }\n  }\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n    if (typeof options[startkeyName] !== 'undefined' && typeof options[endkeyName] !== 'undefined' && collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' + 'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 && !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' + '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n    var ok, status;\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n    addHttpParam('update_seq', opts, params);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString = 'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {\n            keys: opts.keys\n          };\n        } else {\n          // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.fetch('_design/' + parts[0] + '/_view/' + parts[1] + params, {\n        headers: new h({\n          'Content-Type': 'application/json'\n        }),\n        method: method,\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n        return response.json();\n      }).then(function (result) {\n        if (!ok) {\n          result.status = status;\n          throw generateErrorFromResponse(result);\n        }\n        // fail the entire request if the result contains an error\n        result.rows.forEach(function (row) {\n          /* istanbul ignore if */\n          if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n            throw new Error(row.reason);\n          }\n        });\n        return result;\n      }).then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n    return db.fetch('_temp_view' + params, {\n      headers: new h({\n        'Content-Type': 'application/json'\n      }),\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(function (response) {\n      ok = response.ok;\n      status = response.status;\n      return response.json();\n    }).then(function (result) {\n      if (!ok) {\n        result.status = status;\n        throw generateErrorFromResponse(result);\n      }\n      return result;\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new Promise(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new Promise(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {\n      _id: metaDocId,\n      keys: []\n    };\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return Promise.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return Promise.resolve({\n          rows: []\n        });\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) {\n          // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n      return kvDocs;\n    }\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId).catch(defaultsTo({\n      _id: seqDocId,\n      seq: 0\n    })).then(function (lastSeqDoc) {\n      var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n      return Promise.all(docIds.map(function (docId) {\n        return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n      })).then(function (listOfDocsToPersist) {\n        var docsToPersist = flatten(listOfDocsToPersist);\n        lastSeqDoc.seq = seq;\n        docsToPersist.push(lastSeqDoc);\n        // write all docs in a single operation, update the seq once\n        return view.db.bulkDocs({\n          docs: docsToPersist\n        });\n      });\n    });\n  }\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$1();\n    }\n    return queue;\n  }\n  function updateView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view, opts);\n    })();\n  }\n  function updateViewInQueue(view, opts) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n    function emit(key, value) {\n      var output = {\n        id: doc._id,\n        key: normalizeKey(key)\n      };\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n    var mapFun = mapper(view.mapFun, emit);\n    var currentSeq = view.seq || 0;\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n    let indexed_docs = 0;\n    let progress = {\n      view: view.name,\n      indexed_docs: indexed_docs\n    };\n    view.sourceDB.emit('indexing', progress);\n    var queue = new TaskQueue$1();\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        return_docs: true,\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: opts.changes_batch_size\n      }).then(processBatch);\n    }\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      indexed_docs = indexed_docs + results.length;\n      let progress = {\n        view: view.name,\n        last_seq: response.last_seq,\n        results_count: results.length,\n        indexed_docs: indexed_docs\n      };\n      view.sourceDB.emit('indexing', progress);\n      if (results.length < opts.changes_batch_size) {\n        return;\n      }\n      return processNextBatch();\n    }\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [indexableKeysToKeyValues, change.changes]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n    var shouldGroup = options.group || options.group_level;\n    var reduceFun = reducer(view.reduceFun);\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY : options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {\n      rows: sliceResults(results, options.limit, options.skip)\n    };\n  }\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' && result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: 'value' in result.doc ? result.doc.value : null\n          };\n        });\n      });\n    }\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else if (typeof opts.keys === 'undefined') {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      } else {\n        // support limit, skip for keys query\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: sliceResults(rows, opts.limit, opts.skip)\n        };\n      }\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        finalResults.update_seq = view.seq;\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey: toIndexableString([key]),\n          endkey: toIndexableString([key, {}])\n        };\n        /* istanbul ignore if */\n        if (opts.update_seq) {\n          viewOpts.update_seq = true;\n        }\n        return fetchFromView(viewOpts);\n      });\n      return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else {\n      // normal query, no 'keys'\n      var viewOpts = {\n        descending: opts.descending\n      };\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        viewOpts.update_seq = true;\n      }\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ? toIndexableString([startkey, {}]) : toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n        viewOpts.endkey = toIndexableString(inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n  function httpViewCleanup(db) {\n    return db.fetch('_view_cleanup', {\n      headers: new h({\n        'Content-Type': 'application/json'\n      }),\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    });\n  }\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys: mapToKeysArray(docsToViews),\n        include_docs: true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views && row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] = viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(function (viewDBName) {\n          return !viewsToStatus[viewDBName];\n        });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return Promise.all(destroyPromises).then(function () {\n          return {\n            ok: true\n          };\n        });\n      });\n    }, defaultsTo({\n      ok: true\n    }));\n  }\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n    var updateViewOpts = {\n      changes_batch_size: db.__opts.view_update_changes_batch_size || CHANGES_BATCH_SIZE$1\n    };\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n      tempViewQueue.add(function () {\n        var createViewPromise = createView( /* sourceDB */db, /* viewName */'temp_view/temp_view', /* mapFun */fun.map, /* reduceFun */fun.reduce, /* temporary */true, /* localDocName */localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view, updateViewOpts).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' + viewName);\n        }\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n        var createViewPromise = createView( /* sourceDB */db, /* viewName */fullViewName, /* mapFun */fun.map, /* reduceFun */fun.reduce, /* temporary */false, /* localDocName */localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              immediate(function () {\n                updateView(view, updateViewOpts);\n              });\n            }\n            return queryView(view, opts);\n          } else {\n            // stale not ok\n            return updateView(view, updateViewOpts).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n    if (typeof fun === 'function') {\n      fun = {\n        map: fun\n      };\n    }\n    var promise = Promise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n  _count: function (keys, values) {\n    return values.length;\n  },\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += num * num;\n      }\n      return _sumsqr;\n    }\n    return {\n      sum: sum(values),\n      min: Math.min.apply(null, values),\n      max: Math.max.apply(null, values),\n      count: values.length,\n      sumsqr: sumsqr(values)\n    };\n  }\n};\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' + viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\nfunction isGenOne$1(rev) {\n  return /^1-/.test(rev);\n}\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments || !localDoc._attachments[filename] || localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return Promise.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {\n      rev: doc._rev\n    });\n  }));\n}\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n  return target.get(doc._id).then(function (localDoc) {\n    return Promise.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n    return getDocAttachments(src, doc);\n  });\n}\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n    ok = true;\n  function getAllDocs() {\n    var bulkGetOpts = createBulkGetOpts(diffs);\n    if (!bulkGetOpts.docs.length) {\n      // optimization: skip empty requests\n      return;\n    }\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return Promise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return Promise.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc).then(function (attachments) {\n            var filenames = Object.keys(remoteDoc._attachments);\n            attachments.forEach(function (attachment, i) {\n              var att = remoteDoc._attachments[filenames[i]];\n              delete att.stub;\n              delete att.length;\n              att.data = attachment;\n            });\n            return remoteDoc;\n          });\n        }));\n      })).then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) || hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n  function returnResult() {\n    return {\n      ok: ok,\n      docs: resultDocs\n    };\n  }\n  return Promise.resolve().then(getRevisionOneDocs).then(getAllDocs).then(returnResult);\n}\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(404, 'PouchDB is just checking if a remote checkpoint exists.');\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts || {};\n}\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint, session, this.returnValue);\n  } else {\n    return Promise.resolve(true);\n  }\n};\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    return updateCheckpoint(this.src, this.id, checkpoint, session, this.returnValue).catch(function (err) {\n      if (isForbiddenError(err)) {\n        self.opts.writeSourceCheckpoint = false;\n        return true;\n      }\n      throw err;\n    });\n  } else {\n    return Promise.resolve(true);\n  }\n};\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n  if (self.opts && self.opts.writeSourceCheckpoint && !self.opts.writeTargetCheckpoint) {\n    return self.src.get(self.id).then(function (sourceDoc) {\n      return sourceDoc.last_seq || LOWEST_SEQ;\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        throw err;\n      }\n      return LOWEST_SEQ;\n    });\n  }\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.opts && self.opts.writeTargetCheckpoint && !self.opts.writeSourceCheckpoint) {\n      return targetDoc.last_seq || LOWEST_SEQ;\n    }\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.opts.writeSourceCheckpoint = false;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n  return compareReplicationHistory(sourceRest, targetRest);\n}\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n  if (sessionId === props.session_id) {\n    return true;\n  }\n  return hasSessionId(sessionId, rest);\n}\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\nvar STARTING_BACK_OFF = 0;\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  /* istanbul ignore if */\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName = '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n  return Promise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName + queryParams + docIds + selector;\n    return new Promise(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = []; // list of batches to be processed\n  var currentBatch; // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false; // true while checkpoint is being written\n  var changesCompleted = false; // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var style = opts.style || 'all_docs';\n  var changesPending = false; // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n  result = result || {\n    ok: true,\n    start_time: new Date().toISOString(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n  var changesOpts = {};\n  returnValue.ready(src, target);\n  function initCheckpointer() {\n    if (checkpointer) {\n      return Promise.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = {\n          writeSourceCheckpoint: false,\n          writeTargetCheckpoint: false\n        };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = {\n          writeSourceCheckpoint: true,\n          writeTargetCheckpoint: false\n        };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = {\n          writeSourceCheckpoint: false,\n          writeTargetCheckpoint: true\n        };\n      } else {\n        checkpointOpts = {\n          writeSourceCheckpoint: true,\n          writeTargetCheckpoint: true\n        };\n      }\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n  function writeDocs() {\n    changedDocs = [];\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {\n      timeout: opts.timeout\n    };\n    return target.bulkDocs({\n      docs: docs,\n      new_edits: false\n    }, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of\n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n          var errorName = (error.name || '').toLowerCase();\n          if (errorName === 'unauthorized' || errorName === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      // Attach 'pending' property if server supports it (CouchDB 2.0+)\n      /* istanbul ignore if */\n      if (typeof currentBatch.pending === 'number') {\n        outResult.pending = currentBatch.pending;\n        delete currentBatch.pending;\n      }\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq, session).then(function () {\n      returnValue.emit('checkpoint', {\n        'checkpoint': currentBatch.seq\n      });\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      returnValue.emit('checkpoint', {\n        'revs_diff': change\n      });\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    returnValue.emit('checkpoint', {\n      'start_next_batch': currentBatch.seq\n    });\n    getDiffs().then(getBatchDocs).then(writeDocs).then(finishBatch).then(startNextBatch).catch(function (err) {\n      abortReplication('batch processing terminated with error', err);\n    });\n  }\n  function processPendingBatch(immediate$$1) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if (continuous && changesOpts.live || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (immediate$$1 || changesCompleted || pendingBatch.changes.length >= batch_size) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date().toISOString();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n      var errorName = (fatalError.name || '').toLowerCase();\n      if (errorName === 'unauthorized' || errorName === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n  function onChange(change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    // Attach 'pending' property if server supports it (CouchDB 2.0+)\n    /* istanbul ignore if */\n    if (typeof pending === 'number') {\n      pendingBatch.pending = pending;\n    }\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq || lastSeq;\n    pendingBatch.changes.push(change);\n    returnValue.emit('checkpoint', {\n      'pending_batch': pendingBatch.seq\n    });\n    immediate(function () {\n      processPendingBatch(batches.length === 0 && changesOpts.live);\n    });\n  }\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.results[changes.results.length - 1].seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq, session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        }).catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n  function getChanges() {\n    if (!(!changesPending && !changesCompleted && batches.length < batches_limit)) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n    if (returnValue._changes) {\n      // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n    var changes = src.changes(changesOpts).on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete).catch(onChangesError);\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: style,\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else {\n            // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) {\n    // cancelled immediately\n    completeReplication();\n    return;\n  }\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, EE);\nfunction Replication() {\n  EE.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new Promise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n  self.once('error', cleanup);\n};\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\nfunction replicateWrapper(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST, \"`doc_ids` filter parameter is not a list.\");\n  }\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = 'retry' in opts ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\ninherits(Sync, EE);\nfunction sync(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n  this.pushPaused = true;\n  this.pullPaused = true;\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n  var removed = {};\n  function removeAll(type) {\n    // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' && (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' && (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' && (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' && (func === pullActive || func === pushActive);\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n  var promise = Promise.all([this.push, this.pull]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync;\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      if (typeof this.replicateMethods === 'undefined') {\n        this.replicateMethods = {\n          from: function (other, opts, callback) {\n            return self.constructor.replicate(other, self, opts, callback);\n          },\n          to: function (other, opts, callback) {\n            return self.constructor.replicate(self, other, opts, callback);\n          }\n        };\n      }\n      return this.replicateMethods;\n    }\n  });\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\nPouchDB.plugin(IDBPouch).plugin(HttpPouch$1).plugin(mapreduce).plugin(replication);\nexport default PouchDB;","map":{"version":3,"names":["immediate","v4","Md5","vuvuzela","getArguments","inherits","EE","mangle","key","unmangle","substring","Map$1","_store","prototype","get","mangled","set","value","has","keys","Object","map","k","delete","res","forEach","cb","i","len","length","defineProperty","Set$1","array","Array","isArray","add","size","supportsMapAndSet","Symbol","Map","Set","prop","getOwnPropertyDescriptor","species","ExportedSet","ExportedMap","isBinaryObject","object","ArrayBuffer","Blob","cloneArrayBuffer","buff","slice","target","byteLength","targetArray","Uint8Array","sourceArray","cloneBinaryObject","type","webkitSlice","funcToString","Function","toString","objectCtorString","call","isPlainObject","proto","getPrototypeOf","Ctor","constructor","clone","newObject","Date","isFinite","toISOString","hasOwnProperty","once","fun","called","args","Error","apply","toPromise","func","self","usedCB","pop","promise","Promise","fulfill","reject","resp","callback","err","mesg","push","then","e","result","logApiCall","name","listeners","logArgs","emit","origCallback","responseArgs","concat","adapterFun","_closed","_destroyed","taskqueue","isReady","addTask","failed","pick","obj","arr","MAX_NUM_CONCURRENT_REQUESTS","identityFunction","x","formatResultForOpenRevsGet","ok","bulkGet","db","opts","requests","docs","requestsById","request","id","numDocs","numDone","perDocResults","collapseResultsAndFinish","results","info","checkDone","gotResult","docIndex","allRequests","nextBatch","upTo","Math","min","batch","processBatch","offset","docId","j","docIdx","docRequests","docOpts","open_revs","rev","filter","formatResult","param","error","hasLocal","localStorage","setItem","getItem","hasLocalStorage","Changes","attachBrowserEvents","addEventListener","_listeners","addListener","dbName","inprogress","eventFunction","changesOpts","onError","changes","on","c","seq","since","cancelled","onChange","removeListener","notifyLocalWindows","notify","guardedConsole","method","console","arguments","randomNumber","max","maxTimeout","parseInt","ratio","random","range","defaultBackOff","explainError","status","str","assign","to","index","nextSource","nextKey","$inject_Object_assign","PouchError","reason","message","JSON","stringify","UNAUTHORIZED","MISSING_BULK_DOCS","MISSING_DOC","REV_CONFLICT","INVALID_ID","MISSING_ID","RESERVED_ID","NOT_OPEN","UNKNOWN_ERROR","BAD_ARG","INVALID_REQUEST","QUERY_PARSE_ERROR","DOC_VALIDATION","BAD_REQUEST","NOT_AN_OBJECT","DB_MISSING","IDB_ERROR","WSQ_ERROR","LDB_ERROR","FORBIDDEN","INVALID_REV","FILE_EXISTS","MISSING_STUB","INVALID_URL","createError","CustomPouchError","names","getOwnPropertyNames","stack","undefined","generateErrorFromResponse","data","tryFilter","doc","req","msg","filterChange","hasFilter","query","query_params","change","filterReturn","include_docs","attachments","att","_attachments","stub","flatten","arrs","invalidIdError","test","isRemote","_remote","listenerCount","ee","parseDesignDocFunctionName","s","parts","split","normalizeDesignDocFunctionName","normalized","join","qName","qParser","parser","parseUri","m","exec","uri","encoded","indexOf","decodeURIComponent","replace","$0","$1","$2","scopeEval","source","scope","values","upsert","diffFun","catch","docRev","_rev","newDoc","updated","_id","tryAndPut","put","thisAtob","atob","thisBtoa","btoa","createBlob","properties","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","binaryStringToArrayBuffer","bin","buf","charCodeAt","binStringToBluffer","binString","b64ToBluffer","b64","arrayBufferToBinaryString","buffer","binary","bytes","String","fromCharCode","readAsBinaryString","blob","reader","FileReader","hasBinaryString","onloadend","readAsArrayBuffer","blobToBinaryString","blobOrBuffer","blobToBase64","base64","setImmediateShim","setImmediate","setTimeout","MD5_CHUNK_SIZE","rawToBase64","raw","sliceBlob","start","end","appendBlob","arrayBuffer","appendString","string","appendBinary","binaryMd5","inputIsString","chunkSize","chunks","ceil","currentChunk","next","loadNextChunk","done","destroy","stringMd5","hash","rev$$1","deterministic_revs","toLowerCase","mutateableDoc","_rev_tree","uuid","winningRev","metadata","winningId","winningPos","winningDeleted","toVisit","rev_tree","node","tree","ids","branches","pos","deleted","traverseRevTree","revs","newCtx","ctx","sortByPos","a","b","collectLeaves","leaves","isLeaf","acc","sort","reverse","collectConflicts","win","conflicts","leaf","compactTree","revHash","rootToLeaf","paths","history","sortByPos$1","binarySearch","item","comparator","low","high","mid","insertSorted","idx","splice","pathToTree","path","numStemmed","root","currentLeaf","compareTree","mergeTree","in_tree1","in_tree2","queue","tree1","tree2","merged","doMerge","dontExpand","restree","branch","t1","t2","diff","candidateParents","trees","parent","parentIdx","elements","elementsLen","el","stem","depth","stemmedRevs","stemmed","merge","newTree","revExists","splitRev","targetPos","targetId","getTrees","isDeleted","isLocalId","latest","historyNode","historyRev","l","Changes$1","tryCatchInChangeListener","pending","lastSeq","complete","removeAllListeners","onDestroy","cancel","isCancelled","bind","validateChanges","processChange","changeList","style","_conflicts","PouchDB","_changesFilterPlugin","validate","doChanges","continuous","live","update_seq","normalize","shouldFilter","descending","limit","newPromise","_changes","compare","left","right","yankError","cleanDocs","_deleted","atts","compareByIdThenRev","idCompare","aStart","_revisions","bStart","computeHeight","height","edges","prnt","from","edge","allDocsKeysParse","skip","doNextCompaction","task","_compactionQueue","last_seq","_compact","shift","attachmentNameError","charAt","AbstractPouchDB","p","post","bulkDocs","_putLocal","_removeLocal","force","transformForceOptionToNewEditsOption","putDoc","oldRevId","oldRevNum","newRevNum","newRevId","new_edits","_put","putAttachment","attachmentId","api","createAttachment","prevrevpos","content_type","revpos","removeAttachment","remove","docOrId","optsOrRev","was_delete","revsDiff","count","missing","addToMissing","revId","processDoc","missingForId","_getRevisionTree","missingObj","compactDocument","maxHeight","revTree","candidates","_doCompaction","compact","return_docs","promises","row","onComplete","all","deltaFunc","_getLocal","finishOpenRevs","existing","_get","revs_info","splittedRev","revNo","currentPath","hashIndex","hashFoundAtRevPos","indexOfRev","howMany","_revs_info","_getAttachment","getAttachment","allDocs","start_key","startkey","end_key","endkey","TypeError","incompatibleOpt","_allDocs","close","_close","_info","db_name","auto_compaction","adapter","_type","attachmentError","_bulkDocs","registerDependentDatabase","dependentDb","dbOptions","__opts","view_adapter","depDB","dependentDbs","usePrefix","use_prefix","destroyDb","_destroy","localDoc","deletedMap","trueName","RegExp","prefix","TaskQueue","execute","fail","ready","parseAdapter","match","adapters","preferredAdapters","adapterName","prepareForDestruction","onDestroyed","from_constructor","onClosed","prefixedName","backend","_adapter","valid","AbortController","abort","f$1","fetch","h","Headers","eventEmitter","setUpEventEmitter","Pouch","destructListeners","_destructionListeners","onConstructorRef","onConstructorUnref","dbList","onConstructorDestroyed","addToPreferredAdapters","plugin","__defaults","defaults","defaultOpts","PouchAlt","url","version","getFieldFromDoc","parsedField","compare$1","parseField","fieldName","fields","current","ch","combinationFields","isCombinationalField","field","getKey","getValue","mergeAndedSelectors","selectors","first","$or","$nor","selector","matcher","$eq","entries","longest","fieldMatchers","operator","mergeGtGte","mergeLtLte","mergeNe","mergeEq","mergeRegex","$gte","$gt","$lte","$lt","$ne","$regex","mergeAndedSelectorsNested","isAndInSelector","isAnd","massageSelector","input","wasAnded","orOrNor","subSelector","pad","padWith","upToLength","padding","targetLength","padLeft","MIN_MAGNITUDE","MAGNITUDE_DIGITS","SEP","collate","normalizeKey","ai","collationIndex","bi","stringCollate","arrayCollate","objectCollate","Infinity","isNaN","origKey","toJSON","val","indexify","numToIndexableString","toIndexableString","objKey","zero","parseNumber","originalIdx","num","neg","numAsString","magAsString","magnitude","parseFloat","metaStack","lastMetaElement","element","lastElementIndex","parseIndexableString","parsedNum","parsedStr","arrayElement","objElement","ak","bk","expFormat","toExponential","magForComparison","magString","factor","abs","factorStr","toFixed","createFieldSorter","getFieldValuesAsArray","sorting","docFieldValue","aRow","bRow","aFieldValues","bFieldValues","collation","filterInMemoryFields","rows","requestDef","inMemoryFields","rowFilter","fieldSorter","every","matchCominationalSelector","matchSelector","maybeUserOperator","userValue","subParsedField","subDocFieldValue","some","orMatchers","find","userOperator","matchers","fieldExists","fieldIsNotUndefined","modField","divisor","mod","arrayContainsValue","docFieldValueItem","arrayContainsAllValues","arraySize","regexMatch","re","typeMatch","neValue","regexValue","matchesSelector","rowsMatched","evalFilter","evalView","code","filterName","view","changesHandler","doc_ids","viewName","ddoc","mapFun","views","filterFun","filters","applyChangesFilterPlugin","toObject","reduce","reservedWords","dataWords","parseRevisionInfo","makeRevTreeFromRevisions","revisions","revisionIds","parseDoc","newEdits","dbOpts","nRevNum","revInfo","specialKey","parseBase64","preprocessString","blobType","asBinary","digest","preprocessBlob","md5","preprocessAttachment","preprocessAttachments","docInfos","docv","overallErr","docInfo","recv","processedAttachment","updateDoc","revLimit","prev","writeDoc","previousWinningRev","previouslyDeleted","isRoot","inConflict","newRev","rev_map","winningRev$$1","winningRevIsDeleted","delta","newRevIsDeleted","rootIsMissing","processDocs","fetchedDocs","tx","overallCallback","insertDoc","resultsIdx","idsToDocs","docsDone","docsToDo","checkAllDocsDone","currentDoc","docWritten","nextDoc","ADAPTER_VERSION","DOC_STORE","BY_SEQ_STORE","ATTACH_STORE","ATTACH_AND_SEQ_STORE","META_STORE","LOCAL_STORE","DETECT_BLOB_SUPPORT_STORE","safeJsonParse","parse","safeJsonStringify","json","idbError","evt","encodeMetadata","deletedOrLocal","decodeMetadata","storedObject","decodeDoc","_doc_id_rev","lastIndexOf","readBlobData","body","asBlob","fetchAttachmentsIfNecessary","txn","fetchAttachment","attObj","objectStore","onsuccess","postProcessAttachments","attNames","resolve","compactRevs","possiblyOrphanedDigests","seqStore","attStore","attAndSeqStore","deleteOrphanedAttachments","countReq","IDBKeyRange","bound","cursor","openCursor","only","event","digestSeq","primaryKey","continue","openTransactionSafely","idb","stores","mode","transaction","idbBulkDocs","docStore","bySeqStore","attachStore","attachAndSeqStore","metaStore","docInfoError","metaDoc","allDocsProcessed","docCountDelta","preconditionErrored","_meta","blobSupport","startTransaction","txnResult","onabort","ontimeout","oncomplete","updateDocCountIfReady","verifyAttachments","fetchExistingDocs","onAllDocsProcessed","idbProcessDocs","revs_limit","docCount","numFetched","readMetadata","verifyAttachment","finish","digests","filename","attErr","isUpdate","hasAttachments","writeAttachments","finishDoc","afterPutDoc","revsToDelete","metadataToStore","metaDataReq","afterPutMetadata","afterPutDocError","preventDefault","stopPropagation","getKeyReq","putReq","insertAttachmentMappings","onerror","collectResults","attachmentSaved","saveAttachment","attsAdded","attsToAdd","newAtt","runBatchedCursor","keyRange","batchSize","onBatch","useGetAll","getAll","getAllKeys","keysBatch","valuesBatch","pseudoCursor","onGetAll","onGetAllKeys","continuePseudoCursor","lastKey","newKeyRange","upper","upperOpen","lowerBound","onCursor","onSuccess","allDocsKeys","createKeyRange","inclusiveEnd","upperBound","idbAllDocs","inclusive_end","keyRangeError","onTxnComplete","docIdRevIndex","updateSeq","getMaxUpdateSeq","maxKey","fetchDocAsynchronously","onGetDoc","allDocsInner","batchValues","batchValue","batchKeys","onResultsReady","returnVal","total_rows","checkBlobSupport","blob$$1","matchedChrome","navigator","userAgent","matchedEdge","countDocs","running","tryCode","applyNext","enqueueTask","action","runAction","runCallback","runNext","docIds","numResults","docIdsToMetadata","winningDocs","metadatas","processMetadataAndWinningDoc","winningDoc","filtered","onBatchDone","fetchWinningDocAndMetadata","onGetMetadata","docIdRev","objectStores","cachedDBs","blobSupportPromise","openReqList","IdbPouch","thisCallback","init","idbGlobalFailureError","enrichCallbackError","createSchema","createObjectStore","keyPath","autoIncrement","createIndex","unique","addDeletedOrLocalIndex","createLocalStoreSchema","migrateLocalStore","localStore","local","seqCursor","addAttachAndSeqStore","migrateAttsAndSeqs","digestMap","migrateMetadata","decodeMetadataCompat","fetchMetadataSeq","metadataSeq","onGetMetadataSeq","instanceId","idb_bulkDocs","reqOpts","idb_get","attachId","attachment","blobData","idb_info","doc_count","idb_attachment_format","idb_allDocs","idbChanges","oldRev","ret","oStore","oldDoc","openReq","indexedDB","deleteDatabase","cached","global","open","onupgradeneeded","oldVersion","currentTarget","migrations","migration","onversionchange","storedMetaDoc","completeSetup","storeMetaDocIfReady","instanceKey","IDBPouch","pool","promiseFactories","doNext","runNextBatch","thisErr","CHANGES_BATCH_SIZE","MAX_SIMULTANEOUS_REVS","CHANGES_TIMEOUT_BUFFER","DEFAULT_HEARTBEAT","supportsBulkGetMap","readAttachmentsAsBlobOrBuffer","encodeDocId","encodeURIComponent","preprocessAttachments$1","hasUrlPrefix","protocol","getHost","substr","user","password","auth","username","genDBUrl","genUrl","pathDel","host","port","paramsToStr","params","shouldCacheBust","ua","isIE","isTrident","isEdge","isGET","HttpPouch","dbUrl","ourFetch","options","headers","credentials","nAuth","token","unescape","now","fetchFun","adapterFun$$1","setup","fetchJSON","response","v","setupPromise","skip_setup","uuid$$1","ping","compact_running","interval","doBulkGet","doBulkGetShim","numBatches","onResult","batchNum","subOpts","supportsBulkGet","fetchAttachments","filenames","fetchData","encodeAttachmentId","typeFieldDescriptor","__proto__","fetchAllAttachments","docOrDocs","contentType","process","browser","paramStr","batch_size","heartbeat","requestTimeout","timeout","leftToFetch","feed","seq_interval","param_name","controller","lastFetchedSeq","aborted","fetchOpts","signal","fetched","raw_results_length","finished","HttpPouch$1","QueryParseError","captureStackTrace","NotFoundError","BuiltInError","promisedCallback","callbackify","fin","finalPromiseFactory","sequentialize","promiseFactory","that","uniq","theSet","mapToKeysArray","createBuiltInError","sum","jLen","jNum","log","evalFunctionWithEval","TaskQueue$1","createViewSignature","reduceFun","createView","sourceDB","temporary","localDocName","viewSignature","cachedViews","_cachedViews","promiseForView","depDbName","diffFunction","fullViewName","depDbs","lastSeqDoc","persistentQueues","tempViewQueue","CHANGES_BATCH_SIZE$1","parseViewName","isGenOne","emitError","createAbstractMapReduce","mapper","reducer","ddocValidator","tryMap","tryReduce","rereduce","output","sortByKeyThenValue","y","keyCompare","sliceResults","rowToDocId","postprocessAttachments","addHttpParam","paramName","asJson","coerceInteger","integerCandidate","asNumber","Number","coerceOptions","group_level","checkPositiveInteger","number","checkQueryParseError","startkeyName","endkeyName","group","optionName","httpQuery","MAX_URL_LENGTH","keysAsString","customQuery","_query","customViewCleanup","_viewCleanup","defaultsTo","getDocsToPersist","docIdsToChangesAndEmits","metaDocId","defaultMetaDoc","docData","indexableKeysToKeyValues","getMetaDoc","getKeyValueDocs","processKeyValueDocs","kvDocsRes","kvDocs","oldKeys","keyValue","newKeys","kvDoc","saveKeyValues","seqDocId","listOfDocsToPersist","docsToPersist","getQueue","updateView","updateViewInQueue","mapResults","currentSeq","indexed_docs","progress","processNextBatch","changes_batch_size","createDocIdsToChangesAndEmits","results_count","createIndexableKeysToKeyValues","emittedKeyValue","complexKey","reduceView","shouldGroup","groups","lvl","POSITIVE_INFINITY","last","groupKey","reduceTry","queryView","queryViewInQueue","totalRows","shouldReduce","fetchFromView","viewOpts","expectedKeys","parsedKeyAndDocId","onMapResultsReady","finalResults","allDocsRes","docIdsToDocs","fetchPromises","keyStart","keyEnd","httpViewCleanup","localViewCleanup","docsToViews","designDocName","viewsToStatus","ddocName","viewDBNames","statusIsGood","viewDBName","dbsToDelete","destroyPromises","queryPromised","updateViewOpts","view_update_changes_batch_size","createViewPromise","stale","abstractQuery","abstractViewCleanup","viewCleanup","builtInReduce","_sum","_count","_stats","sumsqr","_sumsqr","getBuiltIn","reduceFunString","origMap","builtIn","abstract","mapreduce","isGenOne$1","fileHasChanged","remoteDoc","getDocAttachments","getDocAttachmentsFromTargetOrSource","src","doCheckForLocalAttachments","createBulkGetOpts","diffs","missingRevs","missingRev","getDocs","state","resultDocs","getAllDocs","bulkGetOpts","bulkGetResponse","bulkGetInfo","Boolean","hasConflicts","fetchRevisionOneDocs","getRevisionOneDocs","returnResult","CHECKPOINT_VERSION","REPLICATOR","CHECKPOINT_HISTORY_SIZE","LOWEST_SEQ","updateCheckpoint","checkpoint","session","returnValue","session_id","replicator","unshift","Checkpointer","writeCheckpoint","updateTarget","updateSource","writeTargetCheckpoint","writeSourceCheckpoint","isForbiddenError","comparisons","targetDoc","sourceDoc","compareReplicationLogs","getCheckpoint","srcDoc","tgtDoc","compareReplicationHistory","sourceHistory","targetHistory","S","sourceRest","T","targetRest","sourceId","hasSessionId","sessionId","props","rest","floor","STARTING_BACK_OFF","backOff","retry","back_off_function","backOffSet","backoffTimeSet","current_back_off","removeBackOffSetter","removeBackOffTimeSet","sortObjectPropertiesByKey","queryParams","generateReplicationId","filterViewName","queryData","md5sum","replicate","batches","currentBatch","pendingBatch","writingCheckpoint","changesCompleted","replicationCompleted","batches_limit","changesPending","repId","checkpointer","changedDocs","start_time","docs_read","docs_written","doc_write_failures","errors","initCheckpointer","checkpointOpts","writeDocs","bulkOpts","completeReplication","errorsById","create","errorsNo","errorName","finishBatch","outResult","getChanges","onCheckpointError","getDiffs","getBatchDocs","got","startNextBatch","processPendingBatch","abortReplication","immediate$$1","fatalError","end_time","onChangesComplete","onChangesError","abortChanges","_abortChanges","startChanges","_addedListeners","Replication","_readyCalled","cleanup","toPouch","PouchConstructor","replicateWrapper","replicateRet","srcPouch","targetPouch","Sync","sync","canceled","optsPush","optsPull","pull","pushPaused","pullPaused","pullChange","direction","pushChange","pushDenied","pullDenied","pushActive","pullActive","removed","removeAll","isChange","isDenied","isPaused","isActive","addOneListener","listener","out","success","replication","replicateMethods","other"],"sources":["/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/node_modules/pouchdb-browser/lib/index.es.js"],"sourcesContent":["import immediate from 'immediate';\nimport { v4 } from 'uuid';\nimport Md5 from 'spark-md5';\nimport vuvuzela from 'vuvuzela';\nimport getArguments from 'argsarray';\nimport inherits from 'inherits';\nimport EE from 'events';\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.keys = function () {\n  return Object.keys(this._store).map(k => unmangle(k));\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date && isFinite(object)) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new Promise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return Promise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return Promise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new Promise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nvar hasLocal;\n\ntry {\n  localStorage.setItem('_pouch_check_localstorage', 1);\n  hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n} catch (e) {\n  hasLocal = false;\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n\ninherits(Changes, EE);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (hasLocalStorage()) {\n    addEventListener(\"storage\", function (e) {\n      self.emit(e.key);\n    });\n  }\n}\n\nfunction Changes() {\n  EE.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary', 'return_docs'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        immediate(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  EE.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar $inject_Object_assign = assign;\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    var names = Object.getOwnPropertyNames(error);\n    for (var i = 0, len = names.length; i < len; i++) {\n      if (typeof error[names[i]] !== 'function') {\n        this[names[i]] = error[names[i]];\n      }\n    }\n\n    if (this.stack === undefined) {\n      this.stack = (new Error()).stack;\n    }\n\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  if (!('stack' in err)) {\n    err.stack = (new Error()).stack;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(change.doc._attachments, att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 EE.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (Object.prototype.hasOwnProperty.call(scope, key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return db.get(docId)\n    .catch(function (err) {\n      /* istanbul ignore next */\n      if (err.status !== 404) {\n        throw err;\n      }\n      return {};\n    })\n    .then(function (doc) {\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return {updated: false, rev: docRev};\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      return tryAndPut(db, newDoc, diffFun);\n    });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = self.setImmediate || self.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\n/**\n * Creates a new revision string that does NOT include the revision height\n * For example '56649f1b0506c6ca9fda0746eb0cacdf'\n */\nfunction rev$$1(doc, deterministic_revs) {\n  if (!deterministic_revs) {\n    return v4().replace(/-/g, '').toLowerCase();\n  }\n\n  var mutateableDoc = $inject_Object_assign({}, doc);\n  delete mutateableDoc._rev_tree;\n  return stringMd5(JSON.stringify(mutateableDoc));\n}\n\nvar uuid = v4; // mimic old import, only v4 is ever used elsewhere\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\ninherits(Changes$1, EE);\n\nfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change, pending, lastSeq);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$1(db, opts, callback) {\n  EE.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change, pending, lastSeq);\n  };\n\n  var promise = new Promise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$1.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$1.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$1.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.normalize(opts);\n    if (PouchDB._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev});\n    }\n    return rev;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysParse(opts) {\n  var keys =  ('limit' in opts) ?\n    opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n    (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  opts.keys = keys;\n  opts.skip = 0;\n  delete opts.limit;\n  if (opts.descending) {\n    keys.reverse();\n    opts.descending = false;\n  }\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      immediate(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, EE);\n\nfunction AbstractPouchDB() {\n  EE.call(this);\n\n  // re-bind prototyped methods\n  for (var p in AbstractPouchDB.prototype) {\n    if (typeof this[p] === 'function') {\n      this[p] = this[p].bind(this);\n    }\n  }\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev$$1();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev) {\n      addToMissing(id, rev);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev) {\n      if (height[rev] > maxHeight) {\n        candidates.push(rev);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev) !== -1) {\n        revs.push(rev);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    Promise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        /* istanbul ignore if */\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      /* istanbul ignore if */\n      if (!path) {\n        err = new Error('invalid rev tree');\n        err.docId = id;\n        return cb(err);\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev) {\n            return rev.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev) {\n          pos--;\n          return {\n            rev: pos + '-' + rev.id,\n            status: rev.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (Object.prototype.hasOwnProperty.call(doc._attachments, key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      allDocsKeysParse(opts);\n      if (opts.keys.length === 0) {\n        return this._allDocs({limit: 0}, callback);\n      }\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  // By default set return_docs to false if the caller has opts.live = true,\n  // this will prevent us from collecting the set of changes indefinitely\n  // resulting in growing memory\n  opts.return_docs = ('return_docs' in opts) ? opts.return_docs : !opts.live;\n\n  return new Changes$1(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var dbOptions = clone(this.__opts);\n  if (this.__opts.view_adapter) {\n    dbOptions.adapter = this.__opts.view_adapter;\n  }\n\n  var depDB = new this.constructor(dependentDb, dbOptions);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    Promise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB.adapters;\n  var preferredAdapters = PouchDB.preferredAdapters;\n  var prefix = PouchDB.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB, AbstractPouchDB);\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  if (opts.deterministic_revs === undefined) {\n    opts.deterministic_revs = true;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB.adapters[opts.adapter] ||\n      !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  if (opts.view_adapter) {\n    if (!PouchDB.adapters[opts.view_adapter] ||\n        !PouchDB.adapters[opts.view_adapter].valid()) {\n      throw new Error('Invalid View Adapter: ' + opts.view_adapter);\n    }\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue();\n\n  self.adapter = opts.adapter;\n\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\n// AbortController was introduced quite a while after fetch and\n// isnt required for PouchDB to function so polyfill if needed\nvar a = (typeof AbortController !== 'undefined')\n    ? AbortController\n    : function () { return {abort: function () {}}; };\n\nvar f$1 = fetch;\nvar h = Headers;\n\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\n\nPouchDB.prefix = '_pouch_';\n\nvar eventEmitter = new EE();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EE.prototype).forEach(function (key) {\n    if (typeof EE.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB);\n\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\nPouchDB.fetch = function (url, opts) {\n  return f$1(url, opts);\n};\n\n// managed automatically by set-version.js\nvar version = \"7.3.1\";\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (i > 0 && fieldName[i - 1] === '\\\\' && (ch === '$' || ch === '.')) {\n      // escaped delimiter\n      current = current.substring(0, current.length - 1) + ch;\n    } else if (ch === '.') {\n      // When `.` is not escaped (above), it is a field delimiter\n      fields.push(current);\n      current = '';\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n  var first = {$or: true, $nor: true};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        // or, nor\n        if (matcher instanceof Array) {\n          if (first[field]) {\n            first[field] = false;\n            res[field] = matcher;\n            return;\n          }\n\n          var entries = [];\n          res[field].forEach(function (existing) {\n            Object.keys(matcher).forEach(function (key) {\n              var m = matcher[key];\n              var longest = Math.max(Object.keys(existing).length, Object.keys(m).length);\n              var merged = mergeAndedSelectors([existing, m]);\n              if (Object.keys(merged).length <= longest) {\n                // we have a situation like: (a :{$eq :1} || ...) && (a {$eq: 2} || ...)\n                // merging would produce a $eq 2 when actually we shouldn't ever match against these merged conditions\n                // merged should always contain more values to be valid\n                return;\n              }\n              entries.push(merged);\n            });\n          });\n          res[field] = entries;\n        } else {\n          // not\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          } else if (operator === \"$regex\") {\n            return mergeRegex(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n// combine $regex values into one array\nfunction mergeRegex(value, fieldMatchers) {\n  if ('$regex' in fieldMatchers) {\n    // a value could match multiple regexes\n    fieldMatchers.$regex.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$regex = [value];\n  }\n}\n\n//#7458: execute function mergeAndedSelectors on nested $and\nfunction mergeAndedSelectorsNested(obj) {\n    for (var prop in obj) {\n        if (Array.isArray(obj)) {\n            for (var i in obj) {\n                if (obj[i]['$and']) {\n                    obj[i] = mergeAndedSelectors(obj[i]['$and']);\n                }\n            }\n        }\n        var value = obj[prop];\n        if (typeof value === 'object') {\n            mergeAndedSelectorsNested(value); // <- recursive call\n        }\n    }\n    return obj;\n}\n\n//#7458: determine id $and is present in selector (at any level)\nfunction isAndInSelector(obj, isAnd) {\n    for (var prop in obj) {\n        if (prop === '$and') {\n            isAnd = true;\n        }\n        var value = obj[prop];\n        if (typeof value === 'object') {\n            isAnd = isAndInSelector(value, isAnd); // <- recursive call\n        }\n    }\n    return isAnd;\n}\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n    //#7458: if $and is present in selector (at any level) merge nested $and\n    if (isAndInSelector(result, false)) {\n        result = mergeAndedSelectorsNested(result);\n        if ('$and' in result) {\n            result = mergeAndedSelectors(result['$and']);\n        }\n        wasAnded = true;\n    }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if (!wasAnded) {\n      // These values must be placed in an array because these operators can be used multiple times on the same field\n      // when $and is used, mergeAndedSelectors takes care of putting them into arrays, otherwise it's done here:\n      if ('$ne' in matcher) {\n        matcher.$ne = [matcher.$ne];\n      }\n      if ('$regex' in matcher) {\n        matcher.$regex = [matcher.$regex];\n      }\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging\n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (Object.prototype.hasOwnProperty.call(origKey, k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        /* eslint-disable no-control-regex */\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n        /* eslint-enable no-control-regex */\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        /* eslint-disable no-control-regex */\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        /* eslint-enable no-control-regex */\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  // is matcher an object, if so continue recursion\n  if (typeof matcher === 'object') {\n    return Object.keys(matcher).every(function (maybeUserOperator) {\n      var userValue = matcher[ maybeUserOperator ];\n      // explicit operator\n      if (maybeUserOperator.indexOf(\"$\") === 0) {\n        return match(maybeUserOperator, doc, userValue, parsedField, docFieldValue);\n      } else {\n        var subParsedField = parseField(maybeUserOperator);\n\n        if (\n          docFieldValue === undefined &&\n          typeof userValue !== \"object\" &&\n          subParsedField.length > 0\n        ) {\n          // the field does not exist, return or getFieldFromDoc will throw\n          return false;\n        }\n\n        var subDocFieldValue = getFieldFromDoc(docFieldValue, subParsedField);\n\n        if (typeof userValue === \"object\") {\n          // field value is an object that might contain more operators\n          return matchSelector(userValue, doc, parsedField, subDocFieldValue);\n        }\n\n        // implicit operator\n        return match(\"$eq\", doc, userValue, subParsedField, subDocFieldValue);\n      }\n    });\n  }\n\n  // no more depth, No need to recurse further\n  return matcher === docFieldValue;\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    /* istanbul ignore next */\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  if (typeof docFieldValue !== \"number\" ||\n    parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  var divisor = userValue[0];\n  var mod = userValue[1];\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.some(function (docFieldValueItem) {\n        return collate(val, docFieldValueItem) === 0;\n      });\n    }\n\n    return collate(val, docFieldValue) === 0;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.some(function (docFieldValueItem) {\n      return collate(val, docFieldValueItem) === 0;\n    });\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object' &&  docFieldValue[0] !== null) {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object' &&  docFieldValue[0] !== null) {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) &&\n      Array.isArray(docFieldValue) &&\n      arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) &&\n      typeof docFieldValue == \"string\" &&\n      userValue.every(function (regexValue) {\n        return regexMatch(docFieldValue, regexValue);\n      });\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB.plugin(applyChangesFilterPlugin);\n\nPouchDB.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_access',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  // replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up in the document\nvar dataWords = toObject([\n  '_access',\n  '_attachments',\n  // replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev) {\n  if (!/^\\d+-/.test(rev)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev.indexOf('-');\n  var left = rev.substring(0, idx);\n  var right = rev.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits, dbOpts) {\n  if (!dbOpts) {\n    dbOpts = {\n      deterministic_revs: true\n    };\n  }\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev$$1(doc, dbOpts.deterministic_revs);\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (Object.prototype.hasOwnProperty.call(docInfo.data._attachments, key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev) && !newEdits) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return Promise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return Promise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new Promise(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits, dbOpts);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  if (batchSize === -1) {\n    batchSize = 1000;\n  }\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction allDocsKeys(keys, docStore, onBatch) {\n  // It's not guaranted to be returned in right order  \n  var valuesBatch = new Array(keys.length);\n  var count = 0;\n  keys.forEach(function (key, index) {\n    docStore.get(key).onsuccess = function (event) {\n      if (event.target.result) {\n        valuesBatch[index] = event.target.result;\n      } else {\n        valuesBatch[index] = {key: key, error: 'not_found'};\n      }\n      count++;\n      if (count === keys.length) {\n        onBatch(keys, valuesBatch, {});\n      }\n    };\n  });\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var keys = 'keys' in opts ? opts.keys : false; \n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange ; \n  var keyRangeError;\n  if (!keys) {\n    keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n    keyRangeError = keyRange && keyRange.error;\n    if (keyRangeError && \n      !(keyRangeError.name === \"DataError\" && keyRangeError.code === 0)) {\n      // DataError with error code 0 indicates start is less than end, so\n      // can just do an empty query. Else need to throw\n      return callback(createError(IDB_ERROR,\n        keyRangeError.name, keyRangeError.message));\n    }\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n  var updateSeq;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  /* istanbul ignore if */\n  if (opts.update_seq) {\n    getMaxUpdateSeq(seqStore, function (e) { \n      if (e.target.result && e.target.result.length > 0) {\n        updateSeq = e.target.result[0];\n      }\n    });\n  }\n\n  function getMaxUpdateSeq(objectStore, onSuccess) {\n    function onCursor(e) {\n      var cursor = e.target.result;\n      var maxKey = undefined;\n      if (cursor && cursor.key) {\n        maxKey = cursor.key;\n      } \n      return onSuccess({\n        target: {\n          result: [maxKey]\n        }\n      });\n    }\n    objectStore.openCursor(null, 'prev').onsuccess = onCursor;\n  }\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result) || {};\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (deleted) {\n      if (keys) {\n        results.push(row);\n        // deleted docs are okay with \"keys\" requests\n        row.value.deleted = true;\n        row.doc = null;\n      }\n    } else if (skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      if (batchValue.error && keys) {\n        // key was not found with \"keys\" requests\n        results.push(batchValue);\n        continue;\n      }\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    var returnVal = {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    };\n    \n    /* istanbul ignore if */\n    if (opts.update_seq && updateSeq !== undefined) {\n      returnVal.update_seq = updateSeq;\n    }\n    callback(null, returnVal);\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (keys) {\n    return allDocsKeys(opts.keys, docStore, onBatch);\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new Promise(function (resolve) {\n    var blob$$1 = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    req.onerror = txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      immediate(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler.addListener(dbName, id, api, opts);\n    changesHandler.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return Promise.reject(filtered);\n      }\n\n      if (!filtered) {\n        return Promise.resolve();\n      }\n      numResults++;\n      if (opts.return_docs) {\n        results.push(change);\n      }\n      // process the attachment immediately\n      // for the benefit of live listeners\n      if (opts.attachments && opts.include_docs) {\n        return new Promise(function (resolve) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              resolve(change);\n            });\n          });\n        });\n      } else {\n        return Promise.resolve(change);\n      }\n    }\n\n    function onBatchDone() {\n      var promises = [];\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        promises.push(processMetadataAndWinningDoc(metadata, winningDoc));\n      }\n\n      Promise.all(promises).then(function (changes) {\n        for (var i = 0, len = changes.length; i < len; i++) {\n          if (changes[i]) {\n            opts.onChange(changes[i]);\n          }\n        }\n      }).catch(opts.complete);\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  var idbGlobalFailureError = null;\n  api._meta = null;\n\n  function enrichCallbackError(callback) {\n    return function (error, result) {\n      if (error && error instanceof Error && !error.reason) {\n        if (idbGlobalFailureError) {\n          error.reason = idbGlobalFailureError;\n        }\n      }\n\n      callback(error, result);\n    };\n  }\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, enrichCallbackError(callback));\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev;\n      if (!opts.rev) {\n        rev = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, enrichCallbackError(callback));\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev = pos + '-' + revHash;\n        if (revs.indexOf(rev) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return immediate(function () {\n      callback(null, api);\n    });\n  }\n\n  var req = indexedDB.open(dbName, ADAPTER_VERSION);\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idbGlobalFailureError = e.target.error;\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n    txn.onabort = idbError(callback);\n  };\n\n  req.onerror = function (e) {\n    var msg = e.target.error && e.target.error.message;\n\n    if (!msg) {\n      msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    } else if (msg.indexOf(\"stored database is a higher version\") !== -1) {\n      msg = new Error('This DB was created with the newer \"indexeddb\" adapter, but you are trying to open it with the older \"idb\" adapter');\n    }\n\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Following #7085 buggy idb versions (typically Safari < 10.1) are\n  // considered valid.\n\n  // On Firefox SecurityError is thrown while referencing indexedDB if cookies\n  // are not allowed. `typeof indexedDB` also triggers the error.\n  try {\n    // some outdated implementations of IDB that appear on Samsung\n    // and HTC Android devices <4.4 are missing IDBKeyRange\n    return typeof indexedDB !== 'undefined' && typeof IDBKeyRange !== 'undefined';\n  } catch (e) {\n    return false;\n  }\n};\n\nfunction IDBPouch (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new Promise(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\n\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var doc = row.doc || row.ok;\n  var atts = doc && doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$1(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return Promise.resolve();\n  }\n\n  return Promise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new Promise(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n  var protocol = parseUri(opts.prefix).protocol;\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    // Ensure prefix has a trailing slash\n    var prefix = opts.prefix.replace(/\\/?$/, '/');\n    name = prefix + encodeURIComponent(dbName);\n  }\n\n  var uri = parseUri(name);\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\nfunction shouldCacheBust(opts) {\n  var ua = (typeof navigator !== 'undefined' && navigator.userAgent) ?\n      navigator.userAgent.toLowerCase() : '';\n  var isIE = ua.indexOf('msie') !== -1;\n  var isTrident = ua.indexOf('trident') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n  var isGET = !('method' in opts) || opts.method === 'GET';\n  return (isIE || isTrident || isEdge) && isGET;\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n\n  var ourFetch = function (url, options) {\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    options.credentials = 'include';\n\n    if (opts.auth || host.auth) {\n      var nAuth = opts.auth || host.auth;\n      var str = nAuth.username + ':' + nAuth.password;\n      var token = thisBtoa(unescape(encodeURIComponent(str)));\n      options.headers.set('Authorization', 'Basic ' + token);\n    }\n\n    var headers = opts.headers || {};\n    Object.keys(headers).forEach(function (key) {\n      options.headers.append(key, headers[key]);\n    });\n\n    /* istanbul ignore if */\n    if (shouldCacheBust(options)) {\n      url += (url.indexOf('?') === -1 ? '?' : '&') + '_nonce=' + Date.now();\n    }\n\n    var fetchFun = opts.fetch || f$1;\n    return fetchFun(url, options);\n  };\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    })).bind(api);\n  }\n\n  function fetchJSON(url, options, callback) {\n\n    var result = {};\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    if (!options.headers.get('Content-Type')) {\n      options.headers.set('Content-Type', 'application/json');\n    }\n    if (!options.headers.get('Accept')) {\n      options.headers.set('Accept', 'application/json');\n    }\n\n    return ourFetch(url, options).then(function (response) {\n      result.ok = response.ok;\n      result.status = response.status;\n      return response.json();\n    }).then(function (json) {\n      result.data = json;\n      if (!result.ok) {\n        result.data.status = result.status;\n        var err = generateErrorFromResponse(result.data);\n        if (callback) {\n          return callback(err);\n        } else {\n          throw err;\n        }\n      }\n\n      if (Array.isArray(result.data)) {\n        result.data = result.data.map(function (v) {\n          if (v.error || v.missing) {\n            return generateErrorFromResponse(v);\n          } else {\n            return v;\n          }\n        });\n      }\n\n      if (callback) {\n        callback(null, result.data);\n      } else {\n        return result;\n      }\n    });\n  }\n\n  var setupPromise;\n\n  function setup() {\n    if (opts.skip_setup) {\n      return Promise.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    setupPromise = fetchJSON(dbUrl).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return fetchJSON(dbUrl, {method: 'PUT'});\n      } else {\n        return Promise.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return Promise.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  immediate(function () {\n    callback(null, api);\n  });\n\n  api._remote = true;\n\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ourFetch(genUrl(host, '')).then(function (response) {\n      return response.json();\n    }).catch(function () {\n      return {};\n    }).then(function (result) {\n      // Bad response or missing `uuid` should not prevent ID generation.\n      var uuid$$1 = (result && result.uuid) ?\n          (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    fetchJSON(genDBUrl(host, '_compact'), {method: 'POST'}).then(function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      fetchJSON(genDBUrl(host, '_bulk_get' + paramsToStr(params)), {\n        method: 'POST',\n        body: JSON.stringify({ docs: opts.docs})\n      }).then(function (result) {\n        if (opts.attachments && opts.binary) {\n          result.data.results.forEach(function (res) {\n            res.docs.forEach(readAttachmentsAsBlobOrBuffer);\n          });\n        }\n        cb(null, result.data);\n      }).catch(cb);\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'binary', 'latest']);\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      return ourFetch(genDBUrl(host, ''));\n    }).then(function (response) {\n      return response.json();\n    }).then(function (info) {\n      info.host = genDBUrl(host, '');\n      callback(null, info);\n    }).catch(callback);\n  };\n\n  api.fetch = function (path, options) {\n    return setup().then(function () {\n      var url = path.substring(0, 1) === '/' ?\n        genUrl(host, path.substring(1)) :\n        genDBUrl(host, path);\n      return ourFetch(url, options);\n    });\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = opts.update_seq;\n    }\n\n    id = encodeDocId(id);\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetchData(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n            '?rev=' + doc._rev;\n        return ourFetch(genDBUrl(host, path)).then(function (response) {\n          if ('buffer' in response) {\n            return response.buffer();\n          } else {\n            /* istanbul ignore next */\n            return response.blob();\n          }\n        }).then(function (blob) {\n          if (opts.binary) {\n            var typeFieldDescriptor = Object.getOwnPropertyDescriptor(blob.__proto__, 'type');\n            if (!typeFieldDescriptor || typeFieldDescriptor.set) {\n              blob.type = att.content_type;\n            }\n            return blob;\n          }\n          return new Promise(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetchData(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return Promise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    var url = genDBUrl(host, id + paramsToStr(params));\n    fetchJSON(url).then(function (res) {\n      return Promise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res.data);\n        }\n      }).then(function () {\n        callback(null, res.data);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove', function (docOrId, optsOrRev, opts, cb) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        cb = optsOrRev;\n        opts = {};\n      } else {\n        cb = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev = (doc._rev || opts.rev);\n    var url = genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev;\n\n    fetchJSON(url, {method: 'DELETE'}, cb).catch(cb);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment = adapterFun$$1('getAttachment', function (docId, attachmentId,\n                                                            opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n        encodeAttachmentId(attachmentId) + params;\n    var contentType;\n    ourFetch(url, {method: 'GET'}).then(function (response) {\n      contentType = response.headers.get('content-type');\n      if (!response.ok) {\n        throw response;\n      } else {\n        if (typeof process !== 'undefined' && !process.browser && typeof response.buffer === 'function') {\n          return response.buffer();\n        } else {\n          /* istanbul ignore next */\n          return response.blob();\n        }\n      }\n    }).then(function (blob) {\n      // TODO: also remove\n      if (typeof process !== 'undefined' && !process.browser) {\n        var typeFieldDescriptor = Object.getOwnPropertyDescriptor(blob.__proto__, 'type');\n        if (!typeFieldDescriptor || typeFieldDescriptor.set) {\n          blob.type = contentType;\n        }\n      }\n      callback(null, blob);\n    }).catch(function (err) {\n      callback(err);\n    });\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =  adapterFun$$1('removeAttachment', function (docId,\n                                                                   attachmentId,\n                                                                   rev,\n                                                                   callback) {\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n                       encodeAttachmentId(attachmentId)) + '?rev=' + rev;\n    fetchJSON(url, {method: 'DELETE'}, callback).catch(callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment = adapterFun$$1('putAttachment', function (docId, attachmentId,\n                                                            rev, blob,\n                                                            type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev;\n      rev = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev) {\n      url += '?rev=' + rev;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    // Add the attachment\n    fetchJSON(url, {\n      headers: new h({'Content-Type': type}),\n      method: 'PUT',\n      body: blob\n    }, callback).catch(callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return Promise.all(req.docs.map(preprocessAttachments$1));\n    }).then(function () {\n      // Update/create the documents\n      return fetchJSON(genDBUrl(host, '_bulk_docs'), {\n        method: 'POST',\n        body: JSON.stringify(req)\n      }, callback);\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$1(doc);\n    }).then(function () {\n      return fetchJSON(genDBUrl(host, encodeDocId(doc._id)), {\n        method: 'PUT',\n        body: JSON.stringify(doc)\n      });\n    }).then(function (result) {\n      callback(null, result.data);\n    }).catch(function (err) {\n      err.docId = doc && doc._id;\n      callback(err);\n    });\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    fetchJSON(genDBUrl(host, '_all_docs' + paramStr), {\n       method: method,\n      body: JSON.stringify(body)\n    }).then(function (result) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        result.data.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, result.data);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = ('timeout' in opts) ? opts.timeout : 30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout &&\n      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    /* istanbul ignore if */\n    if ('heartbeat' in opts && opts.heartbeat &&\n       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.seq_interval) {\n      params.seq_interval = opts.seq_interval;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(opts.query_params, param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {selector: opts.selector };\n    }\n\n    var controller = new a();\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetchData = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Cloudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var url = genDBUrl(host, '_changes' + paramsToStr(params));\n      var fetchOpts = {\n        signal: controller.signal,\n        method: method,\n        body: JSON.stringify(body)\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        return fetchJSON(url, fetchOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        var pending = null;\n        var lastSeq = null;\n        // Attach 'pending' property if server supports it (CouchDB 2.0+)\n        /* istanbul ignore if */\n        if (typeof res.pending === 'number') {\n          pending = res.pending;\n        }\n        if (typeof results.last_seq === 'string' || typeof results.last_seq === 'number') {\n          lastSeq = results.last_seq;\n        }\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (opts.return_docs) {\n              results.results.push(c);\n            }\n            opts.onChange(c, pending, lastSeq);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        immediate(function () { fetchData(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetchData(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        controller.abort();\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    fetchJSON(genDBUrl(host, '_revs_diff'), {\n      method: 'POST',\n      body: JSON.stringify(req)\n    }, callback).catch(callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    fetchJSON(genDBUrl(host, ''), {method: 'DELETE'}).then(function (json) {\n      callback(null, json);\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status === 404) {\n        callback(null, {ok: true});\n      } else {\n        callback(err);\n      }\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nfunction HttpPouch$1 (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n}\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      immediate(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      immediate(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$1() {\n  this.promise = new Promise(function (fulfill) {fulfill(); });\n}\nTaskQueue$1.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$1.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$1();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e, data) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e, data);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e, {fun: fun, doc: doc});\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e, {fun: fun, keys: keys, values: values, rereduce: rereduce});\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n    var ok, status;\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n    addHttpParam('update_seq', opts, params);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.fetch('_design/' + parts[0] + '/_view/' + parts[1] + params, {\n        headers: new h({'Content-Type': 'application/json'}),\n        method: method,\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n        return response.json();\n      }).then(function (result) {\n        if (!ok) {\n          result.status = status;\n          throw generateErrorFromResponse(result);\n        }\n        // fail the entire request if the result contains an error\n        result.rows.forEach(function (row) {\n          /* istanbul ignore if */\n          if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n            throw new Error(row.reason);\n          }\n        });\n        return result;\n      }).then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n\n    return db.fetch('_temp_view' + params, {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n      return response.json();\n    }).then(function (result) {\n      if (!ok) {\n        result.status = status;\n        throw generateErrorFromResponse(result);\n      }\n      return result;\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new Promise(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new Promise(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return Promise.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return Promise.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return Promise.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$1();\n    }\n    return queue;\n  }\n\n  function updateView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view, opts);\n    })();\n  }\n\n  function updateViewInQueue(view, opts) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    let indexed_docs = 0;\n    let progress = {\n      view: view.name,\n      indexed_docs: indexed_docs\n    };\n    view.sourceDB.emit('indexing', progress);\n\n    var queue = new TaskQueue$1();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        return_docs: true,\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: opts.changes_batch_size\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n\n      indexed_docs = indexed_docs + results.length;\n      let progress = {\n        view: view.name,\n        last_seq: response.last_seq,\n        results_count: results.length,\n        indexed_docs: indexed_docs\n      };\n      view.sourceDB.emit('indexing', progress);\n      \n      if (results.length < opts.changes_batch_size) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else if (typeof opts.keys === 'undefined') {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      } else {\n        // support limit, skip for keys query\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: sliceResults(rows,opts.limit,opts.skip)\n        };\n      }\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        finalResults.update_seq = view.seq;\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        /* istanbul ignore if */\n        if (opts.update_seq) {\n          viewOpts.update_seq = true;\n        }\n        return fetchFromView(viewOpts);\n      });\n      return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        viewOpts.update_seq = true;\n      }\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.fetch('_view_cleanup', {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return Promise.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    var updateViewOpts = {\n      changes_batch_size: db.__opts.view_update_changes_batch_size || CHANGES_BATCH_SIZE$1\n    };\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view, updateViewOpts).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              immediate(function () {\n                updateView(view, updateViewOpts);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view, updateViewOpts).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = Promise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n      viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev) {\n  return /^1-/.test(rev);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return Promise.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return Promise.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return Promise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return Promise.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n                   .then(function (attachments) {\n                           var filenames = Object.keys(remoteDoc._attachments);\n                           attachments\n                             .forEach(function (attachment, i) {\n                                        var att = remoteDoc._attachments[filenames[i]];\n                                        delete att.stub;\n                                        delete att.length;\n                                        att.data = attachment;\n                                      });\n\n                                      return remoteDoc;\n                                    });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return Promise.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts || {};\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n      .catch(function (err) {\n        if (isForbiddenError(err)) {\n          self.opts.writeSourceCheckpoint = false;\n          return true;\n        }\n        throw err;\n      });\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n\n  if (self.opts && self.opts.writeSourceCheckpoint && !self.opts.writeTargetCheckpoint) {\n    return self.src.get(self.id).then(function (sourceDoc) {\n      return sourceDoc.last_seq || LOWEST_SEQ;\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        throw err;\n      }\n      return LOWEST_SEQ;\n    });\n  }\n\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.opts && self.opts.writeTargetCheckpoint && !self.opts.writeSourceCheckpoint) {\n      return targetDoc.last_seq || LOWEST_SEQ;\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.opts.writeSourceCheckpoint = false;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  /* istanbul ignore if */\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return Promise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds + selector;\n    return new Promise(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var style = opts.style || 'all_docs';\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date().toISOString(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return Promise.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n      } else {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of\n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n          var errorName = (error.name || '').toLowerCase();\n          if (errorName === 'unauthorized' || errorName === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      // Attach 'pending' property if server supports it (CouchDB 2.0+)\n      /* istanbul ignore if */\n      if (typeof currentBatch.pending === 'number') {\n        outResult.pending = currentBatch.pending;\n        delete currentBatch.pending;\n      }\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      returnValue.emit('checkpoint', { 'checkpoint': currentBatch.seq });\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      returnValue.emit('checkpoint', { 'revs_diff': change });\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    returnValue.emit('checkpoint', { 'start_next_batch': currentBatch.seq });\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate$$1) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate$$1 ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date().toISOString();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n      var errorName = (fatalError.name || '').toLowerCase();\n      if (errorName === 'unauthorized' || errorName === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    // Attach 'pending' property if server supports it (CouchDB 2.0+)\n    /* istanbul ignore if */\n    if (typeof pending === 'number') {\n      pendingBatch.pending = pending;\n    }\n\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq || lastSeq;\n    pendingBatch.changes.push(change);\n    returnValue.emit('checkpoint', { 'pending_batch': pendingBatch.seq });\n    immediate(function () {\n      processPendingBatch(batches.length === 0 && changesOpts.live);\n    });\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.results[changes.results.length - 1].seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: style,\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, EE);\nfunction Replication() {\n  EE.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new Promise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n  self.once('error', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, EE);\nfunction sync(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = Promise.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      if (typeof this.replicateMethods === 'undefined') {\n        this.replicateMethods = {\n          from: function (other, opts, callback) {\n            return self.constructor.replicate(other, self, opts, callback);\n          },\n          to: function (other, opts, callback) {\n            return self.constructor.replicate(self, other, opts, callback);\n          }\n        };\n      }\n      return this.replicateMethods;\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB.plugin(IDBPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\nexport default PouchDB;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}