{"ast":null,"code":"import React__default from 'react';\nimport { T as TextButton, u as useForm, F as Form, H as HeaderText, S as Spacer, E as EmailInput, P as PasswordInput, a as SubmitButton, b as SecondaryButton } from './index.esm-189a9937.js';\nimport { _ as _extends, u as useEasybase } from './index-775190d4.js';\nimport { s as styled, t as toast } from './Auth-25393280.js';\nconst ForgotPassword = styled(TextButton)(props => _extends({\n  marginTop: -53,\n  marginBottom: 53,\n  display: 'flex'\n}, props.theme.forgotPassword ? _extends({}, props.theme.forgotPassword) : {}));\nfunction ForgotPassword$1(props) {\n  return React__default.createElement(ForgotPassword, Object.assign({}, props, {\n    type: \"button\"\n  }));\n}\nfunction SignIn(_ref) {\n  let {\n    setCurrentPage,\n    dictionary\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      isSubmitting\n    }\n  } = useForm();\n  const {\n    signIn\n  } = useEasybase();\n  const onSubmit = async formData => {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    const signInRes = await signIn(formData.email, formData.password);\n    if (!signInRes.success) {\n      if (signInRes.errorCode === \"NoUserExists\") {\n        toast.error(dictionary.errorUserDoesNotExist);\n      } else if (signInRes.errorCode === \"BadFormat\") {\n        reset();\n        toast.error(dictionary.errorBadInputFormat);\n      }\n    } // Will automatically change views\n  };\n\n  return React__default.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit)\n  }, React__default.createElement(HeaderText, null, dictionary.signInHeader), React__default.createElement(Spacer, {\n    size: \"medium\"\n  }), React__default.createElement(EmailInput, {\n    register: () => register(\"email\"),\n    label: dictionary.emailLabel,\n    disabled: isSubmitting\n  }), React__default.createElement(Spacer, {\n    size: \"xlarge\"\n  }), React__default.createElement(PasswordInput, {\n    register: () => register(\"password\"),\n    autoComplete: \"current-password\",\n    disabled: isSubmitting,\n    label: dictionary.passwordLabel\n  }), React__default.createElement(Spacer, {\n    size: \"xlarge\"\n  }), React__default.createElement(ForgotPassword$1, {\n    onClick: _ => setCurrentPage(\"ForgotPassword\"),\n    disabled: isSubmitting\n  }, dictionary.forgotPasswordButton), React__default.createElement(SubmitButton, {\n    disabled: isSubmitting\n  }, dictionary.signInSubmitButton), React__default.createElement(SecondaryButton, {\n    onClick: _ => setCurrentPage(\"SignUp\"),\n    disabled: isSubmitting\n  }, dictionary.noAccountButton));\n}\nexport { SignIn as default };","map":{"version":3,"mappings":";;;;AAIA,MAAMA,cAAc,GAAGC,MAAM,CAACC,UAAD,CAAN,CAAmBC,KAAK;EAC3CC,SAAS,EAAE,CAAC,EAD+B;EAE3CC,YAAY,EAAE,EAF6B;EAG3CC,OAAO,EAAE;AAHkC,GAIvCH,KAAK,CAACI,KAAN,CAAYC,cAAZ,gBAAkCL,KAAK,CAACI,KAAN,CAAYC,cAA9C,IAAiE,EAJ1B,CAAxB,CAAvB;0BAOyBL;EACrB,OACIM,6BAACT,cAAD,oBAAoBG;IAAOO,IAAI,EAAC;IAAhC,CADJ;AAGH;sBCDwB;EAAA;IAAEC,cAAF;IAAkBC;EAAlB;EACrB,MAAM;IAAEC,QAAF;IAAYC,YAAZ;IAA0BC,KAA1B;IAAiCC,SAAS,EAAE;MAAEC;IAAF;EAA5C,IAAiEC,OAAO,EAA9E;EACA,MAAM;IAAEC;EAAF,IAAaC,WAAW,EAA9B;EACA,MAAMC,QAAQ,GAAG,MAAOC,QAAP;IACb,MAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAjC,CAAN;IACA,MAAME,SAAS,GAAG,MAAMP,MAAM,CAACG,QAAQ,CAACK,KAAV,EAAiBL,QAAQ,CAACM,QAA1B,CAA9B;IACA,IAAI,CAACF,SAAS,CAACG,OAAf,EAAwB;MACpB,IAAIH,SAAS,CAACI,SAAV,KAAwB,cAA5B,EAA4C;QACxCC,KAAK,CAACC,KAAN,CAAYpB,UAAU,CAACqB,qBAAvB;MACH,CAFD,MAEO,IAAIP,SAAS,CAACI,SAAV,KAAwB,WAA5B,EAAyC;QAC5Cf,KAAK;QACLgB,KAAK,CAACC,KAAN,CAAYpB,UAAU,CAACsB,mBAAvB;MACH;IACJ;EAEJ,CAZD;;EAcA,OACIzB,6BAAC0B,IAAD;IAAMd,QAAQ,EAAEP,YAAY,CAACO,QAAD;GAA5B,EACIZ,6BAAC2B,UAAD,QAAaxB,UAAU,CAACyB,YAAxB,CADJ,EAEI5B,6BAAC6B,MAAD;IAAQC,IAAI,EAAC;GAAb,CAFJ,EAGI9B,6BAAC+B,UAAD;IACI3B,QAAQ,EAAE,MAAMA,QAAQ,CAAC,OAAD;IACxB4B,KAAK,EAAE7B,UAAU,CAAC8B;IAClBC,QAAQ,EAAE1B;GAHd,CAHJ,EAQIR,6BAAC6B,MAAD;IAAQC,IAAI,EAAC;GAAb,CARJ,EASI9B,6BAACmC,aAAD;IACI/B,QAAQ,EAAE,MAAMA,QAAQ,CAAC,UAAD;IACxBgC,YAAY,EAAC;IACbF,QAAQ,EAAE1B;IACVwB,KAAK,EAAE7B,UAAU,CAACkC;GAJtB,CATJ,EAeIrC,6BAAC6B,MAAD;IAAQC,IAAI,EAAC;GAAb,CAfJ,EAgBI9B,6BAACT,gBAAD;IAAgB+C,OAAO,EAAEC,CAAC,IAAIrC,cAAc,CAAC,gBAAD;IAAoBgC,QAAQ,EAAE1B;GAA1E,EAAyFL,UAAU,CAACqC,oBAApG,CAhBJ,EAiBIxC,6BAACyC,YAAD;IAAcP,QAAQ,EAAE1B;GAAxB,EAAuCL,UAAU,CAACuC,kBAAlD,CAjBJ,EAkBI1C,6BAAC2C,eAAD;IAAiBL,OAAO,EAAEC,CAAC,IAAIrC,cAAc,CAAC,QAAD;IAAYgC,QAAQ,EAAE1B;GAAnE,EAAkFL,UAAU,CAACyC,eAA7F,CAlBJ,CADJ;AAsBH","names":["ForgotPassword","styled","TextButton","props","marginTop","marginBottom","display","theme","forgotPassword","React","type","setCurrentPage","dictionary","register","handleSubmit","reset","formState","isSubmitting","useForm","signIn","useEasybase","onSubmit","formData","Promise","resolve","setTimeout","signInRes","email","password","success","errorCode","toast","error","errorUserDoesNotExist","errorBadInputFormat","Form","HeaderText","signInHeader","Spacer","size","EmailInput","label","emailLabel","disabled","PasswordInput","autoComplete","passwordLabel","onClick","_","forgotPasswordButton","SubmitButton","signInSubmitButton","SecondaryButton","noAccountButton"],"sources":["/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/src/ui/Auth/components/ForgotPassword.tsx","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/src/ui/Auth/pages/SignIn.tsx"],"sourcesContent":["import React from 'react';\nimport TextButton from './internal/TextButton';\nimport styled from 'styled-components';\n\nconst ForgotPassword = styled(TextButton)(props => ({\n    marginTop: -53,\n    marginBottom: 53,\n    display: 'flex',\n    ...(props.theme.forgotPassword ? { ...props.theme.forgotPassword } : {})\n}))\n\nexport default function (props: React.ButtonHTMLAttributes<HTMLButtonElement>) {\n    return (\n        <ForgotPassword {...props} type=\"button\" />\n    )\n}\n","import React from 'react';\nimport Form from '../components/Form';\nimport EmailInput from '../components/EmailInput';\nimport PasswordInput from '../components/PasswordInput';\nimport HeaderText from '../components/HeaderText';\nimport ForgotPassword from '../components/ForgotPassword';\nimport SecondaryButton from '../components/SecondaryButton';\nimport SubmitButton from '../components/SubmitButton';\nimport Spacer from '../components/Spacer';\nimport { useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\nimport { IPage } from '../../uiTypes';\nimport useEasybase from '../../../useEasybase';\n\nexport default function ({ setCurrentPage, dictionary }: IPage) {\n    const { register, handleSubmit, reset, formState: { isSubmitting } } = useForm();\n    const { signIn } = useEasybase();\n    const onSubmit = async (formData: Record<string, string>) => {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        const signInRes = await signIn(formData.email, formData.password);\n        if (!signInRes.success) {\n            if (signInRes.errorCode === \"NoUserExists\") {\n                toast.error(dictionary.errorUserDoesNotExist!)\n            } else if (signInRes.errorCode === \"BadFormat\") {\n                reset();\n                toast.error(dictionary.errorBadInputFormat!)\n            }\n        }\n        // Will automatically change views\n    }\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)}>\n            <HeaderText>{dictionary.signInHeader}</HeaderText>\n            <Spacer size=\"medium\" />\n            <EmailInput\n                register={() => register(\"email\")}\n                label={dictionary.emailLabel}\n                disabled={isSubmitting}\n            />\n            <Spacer size=\"xlarge\" />\n            <PasswordInput\n                register={() => register(\"password\")}\n                autoComplete=\"current-password\"\n                disabled={isSubmitting}\n                label={dictionary.passwordLabel}\n            />\n            <Spacer size=\"xlarge\" />\n            <ForgotPassword onClick={_ => setCurrentPage(\"ForgotPassword\")} disabled={isSubmitting}>{dictionary.forgotPasswordButton}</ForgotPassword>\n            <SubmitButton disabled={isSubmitting}>{dictionary.signInSubmitButton}</SubmitButton>\n            <SecondaryButton onClick={_ => setCurrentPage(\"SignUp\")} disabled={isSubmitting}>{dictionary.noAccountButton}</SecondaryButton>\n        </Form>\n    )\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}