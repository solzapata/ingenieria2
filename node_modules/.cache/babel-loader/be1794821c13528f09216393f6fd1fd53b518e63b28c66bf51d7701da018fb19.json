{"ast":null,"code":"var thisAtob = function (str) {\n  return atob(str);\n};\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {\n    type: type\n  });\n}\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\nfunction typedBuffer() {}\nexport { thisAtob as atob, thisBtoa as btoa, b64ToBluffer as base64StringToBlobOrBuffer, binaryStringToArrayBuffer, binStringToBluffer as binaryStringToBlobOrBuffer, createBlob as blob, blobToBase64 as blobOrBufferToBase64, blobToBinaryString as blobOrBufferToBinaryString, readAsArrayBuffer, readAsBinaryString, typedBuffer };","map":{"version":3,"names":["thisAtob","str","atob","thisBtoa","btoa","createBlob","parts","properties","Blob","e","name","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","i","length","append","getBlob","type","binaryStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","binStringToBluffer","binString","b64ToBluffer","b64","arrayBufferToBinaryString","buffer","binary","bytes","byteLength","String","fromCharCode","readAsBinaryString","blob","callback","reader","FileReader","hasBinaryString","onloadend","result","target","readAsArrayBuffer","blobToBinaryString","blobOrBuffer","blobToBase64","base64","typedBuffer","base64StringToBlobOrBuffer","binaryStringToBlobOrBuffer","blobOrBufferToBase64","blobOrBufferToBinaryString"],"sources":["/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/node_modules/pouchdb-binary-utils/lib/index-browser.es.js"],"sourcesContent":["var thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\nfunction typedBuffer() {\n}\n\nexport { thisAtob as atob, thisBtoa as btoa, b64ToBluffer as base64StringToBlobOrBuffer, binaryStringToArrayBuffer, binStringToBluffer as binaryStringToBlobOrBuffer, createBlob as blob, blobToBase64 as blobOrBufferToBase64, blobToBinaryString as blobOrBufferToBinaryString, readAsArrayBuffer, readAsBinaryString, typedBuffer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}