{"ast":null,"code":"import React from \"react\";\nimport { useFind } from \"use-pouchdb\";\nimport { nanoid } from \"nanoid\";\nimport { categorias } from \"../data/categorias\";\nexport const UseNewRandomId = prefix => {\n  return prefix + nanoid();\n};\n_c = UseNewRandomId;\nconst AddCategoria = (db, data, entity) => {\n  var newId = UseNewRandomId(`${entity}_`);\n  db === null || db === void 0 ? void 0 : db.put({\n    ...data,\n    _id: newId,\n    entity: entity\n  });\n};\n_c2 = AddCategoria;\nexport const firstAddInDatabase = (validacion, db, data, entity, setSentData) => {\n  if (validacion) {\n    try {\n      db === null || db === void 0 ? void 0 : db.put({\n        ...data,\n        _id: entity,\n        entity: entity\n      }).then(() => {\n        categorias === null || categorias === void 0 ? void 0 : categorias.map(e => {\n          return AddCategoria(db, e, \"categoria\");\n        });\n      });\n    } finally {\n      setSentData(prevSentData => !prevSentData);\n    }\n  }\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"UseNewRandomId\");\n$RefreshReg$(_c2, \"AddCategoria\");","map":{"version":3,"names":["React","useFind","nanoid","categorias","UseNewRandomId","prefix","AddCategoria","db","data","entity","newId","put","_id","firstAddInDatabase","validacion","setSentData","then","map","e","prevSentData"],"sources":["/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/src/functions/index.js"],"sourcesContent":["import React from \"react\";\nimport { useFind } from \"use-pouchdb\";\nimport { nanoid } from \"nanoid\";\n\nimport { categorias } from \"../data/categorias\";\n\nexport const UseNewRandomId = (prefix) => {\n  return prefix + nanoid();\n};\n\nconst AddCategoria = (db, data, entity) => {\n  var newId = UseNewRandomId(`${entity}_`);\n\n  db?.put({\n    ...data,\n    _id: newId,\n    entity: entity,\n  });\n};\n\nexport const firstAddInDatabase = (\n  validacion,\n  db,\n  data,\n  entity,\n  setSentData\n) => {\n  if (validacion) {\n    try {\n      db?.put({ ...data, _id: entity, entity: entity }).then(() => {\n        categorias?.map((e) => {\n          return AddCategoria(db, e, \"categoria\");\n        });\n      });\n    } finally {\n      setSentData((prevSentData) => !prevSentData);\n    }\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,MAAM,QAAQ,QAAQ;AAE/B,SAASC,UAAU,QAAQ,oBAAoB;AAE/C,OAAO,MAAMC,cAAc,GAAIC,MAAM,IAAK;EACxC,OAAOA,MAAM,GAAGH,MAAM,EAAE;AAC1B,CAAC;AAAC,KAFWE,cAAc;AAI3B,MAAME,YAAY,GAAG,CAACC,EAAE,EAAEC,IAAI,EAAEC,MAAM,KAAK;EACzC,IAAIC,KAAK,GAAGN,cAAc,CAAE,GAAEK,MAAO,GAAE,CAAC;EAExCF,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEI,GAAG,CAAC;IACN,GAAGH,IAAI;IACPI,GAAG,EAAEF,KAAK;IACVD,MAAM,EAAEA;EACV,CAAC,CAAC;AACJ,CAAC;AAAC,MARIH,YAAY;AAUlB,OAAO,MAAMO,kBAAkB,GAAG,CAChCC,UAAU,EACVP,EAAE,EACFC,IAAI,EACJC,MAAM,EACNM,WAAW,KACR;EACH,IAAID,UAAU,EAAE;IACd,IAAI;MACFP,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEI,GAAG,CAAC;QAAE,GAAGH,IAAI;QAAEI,GAAG,EAAEH,MAAM;QAAEA,MAAM,EAAEA;MAAO,CAAC,CAAC,CAACO,IAAI,CAAC,MAAM;QAC3Db,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEc,GAAG,CAAEC,CAAC,IAAK;UACrB,OAAOZ,YAAY,CAACC,EAAE,EAAEW,CAAC,EAAE,WAAW,CAAC;QACzC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,SAAS;MACRH,WAAW,CAAEI,YAAY,IAAK,CAACA,YAAY,CAAC;IAC9C;EACF;AACF,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}