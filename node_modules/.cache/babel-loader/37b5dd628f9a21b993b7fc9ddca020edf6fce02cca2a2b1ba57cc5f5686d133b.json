{"ast":null,"code":"import React__default, { createContext, Fragment, useState, useRef, useEffect, useContext, lazy, Suspense } from 'react';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction Frame(index) {\n  return [];\n}\nconst c$1 = {\n  configureFrame: _ => ({}),\n  addRecord: async _ => ({}),\n  deleteRecord: async _ => ({}),\n  sync: async () => ({}),\n  updateRecordImage: async _ => ({}),\n  updateRecordVideo: async _ => ({}),\n  updateRecordFile: async _ => ({}),\n  Frame,\n  useFrameEffect: _ => {},\n  fullTableSize: async () => 0,\n  tableTypes: async () => ({}),\n  currentConfiguration: () => ({}),\n  Query: async _ => [],\n  getUserAttributes: async () => ({}),\n  isUserSignedIn: () => false,\n  setUserAttribute: async (_, _2) => ({}),\n  resetUserPassword: async (_, _2) => ({}),\n  signIn: async (_, _2) => ({}),\n  signOut: () => {},\n  signUp: async (_, _2, _3) => ({}),\n  onSignIn: _ => {},\n  db: _ => ({}),\n  dbEventListener: _ => () => {},\n  useReturn: _ => ({}),\n  e: {},\n  setFile: async (_, _2, _3, _4) => ({}),\n  setImage: async (_, _2, _3, _4) => ({}),\n  setVideo: async (_, _2, _3, _4) => ({}),\n  forgotPassword: async (_, _2) => ({}),\n  forgotPasswordConfirm: async (_, _2, _3) => ({}),\n  userID: () => undefined\n};\nvar EasybaseContext = createContext(c$1);\n\n// do not edit .js files directly - edit src/index.jst\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a !== a && b !== b;\n};\nvar POST_TYPES$1;\n(function (POST_TYPES) {\n  POST_TYPES[\"UPLOAD_ATTACHMENT\"] = \"upload_attachment\";\n  POST_TYPES[\"HANDSHAKE\"] = \"handshake\";\n  POST_TYPES[\"VALID_TOKEN\"] = \"valid_token\";\n  POST_TYPES[\"GET_FRAME\"] = \"get_frame\";\n  POST_TYPES[\"TABLE_SIZE\"] = \"table_size\";\n  POST_TYPES[\"COLUMN_TYPES\"] = \"column_types\";\n  POST_TYPES[\"SYNC_STACK\"] = \"sync_stack\";\n  POST_TYPES[\"SYNC_DELETE\"] = \"sync_delete\";\n  POST_TYPES[\"SYNC_INSERT\"] = \"sync_insert\";\n  POST_TYPES[\"GET_QUERY\"] = \"get_query\";\n  POST_TYPES[\"USER_ATTRIBUTES\"] = \"user_attributes\";\n  POST_TYPES[\"SET_ATTRIBUTE\"] = \"set_attribute\";\n  POST_TYPES[\"SIGN_UP\"] = \"sign_up\";\n  POST_TYPES[\"REQUEST_TOKEN\"] = \"request_token\";\n  POST_TYPES[\"EASY_QB\"] = \"easyqb\";\n  POST_TYPES[\"RESET_PASSWORD\"] = \"reset_password\";\n  POST_TYPES[\"FORGOT_PASSWORD_SEND\"] = \"forgot_password_send\";\n  POST_TYPES[\"FORGOT_PASSWORD_CONFIRM\"] = \"forgot_password_confirm\";\n})(POST_TYPES$1 || (POST_TYPES$1 = {}));\nvar DB_STATUS$1;\n(function (DB_STATUS) {\n  DB_STATUS[\"ERROR\"] = \"error\";\n  DB_STATUS[\"PENDING\"] = \"pending\";\n  DB_STATUS[\"SUCCESS\"] = \"success\";\n})(DB_STATUS$1 || (DB_STATUS$1 = {}));\nvar EXECUTE_COUNT$1;\n(function (EXECUTE_COUNT) {\n  EXECUTE_COUNT[\"ALL\"] = \"all\";\n  EXECUTE_COUNT[\"ONE\"] = \"one\";\n})(EXECUTE_COUNT$1 || (EXECUTE_COUNT$1 = {}));\nvar imageExtensions$1 = [\"ase\", \"art\", \"bmp\", \"blp\", \"cd5\", \"cit\", \"cpt\", \"cr2\", \"cut\", \"dds\", \"dib\", \"djvu\", \"egt\", \"exif\", \"gif\", \"gpl\", \"grf\", \"icns\", \"ico\", \"iff\", \"jng\", \"jpeg\", \"jpg\", \"jfif\", \"jp2\", \"jps\", \"lbm\", \"max\", \"miff\", \"mng\", \"msp\", \"nitf\", \"ota\", \"pbm\", \"pc1\", \"pc2\", \"pc3\", \"pcf\", \"pcx\", \"pdn\", \"pgm\", \"PI1\", \"PI2\", \"PI3\", \"pict\", \"pct\", \"pnm\", \"pns\", \"ppm\", \"psb\", \"psd\", \"pdd\", \"psp\", \"px\", \"pxm\", \"pxr\", \"qfx\", \"raw\", \"rle\", \"sct\", \"sgi\", \"rgb\", \"int\", \"bw\", \"tga\", \"tiff\", \"tif\", \"vtf\", \"xbm\", \"xcf\", \"xpm\", \"3dv\", \"amf\", \"ai\", \"awg\", \"cgm\", \"cdr\", \"cmx\", \"dxf\", \"e2d\", \"egt\", \"eps\", \"fs\", \"gbr\", \"odg\", \"svg\", \"stl\", \"vrml\", \"x3d\", \"sxd\", \"v2d\", \"vnd\", \"wmf\", \"emf\", \"art\", \"xar\", \"png\", \"webp\", \"jxr\", \"hdp\", \"wdp\", \"cur\", \"ecw\", \"iff\", \"lbm\", \"liff\", \"nrrd\", \"pam\", \"pcx\", \"pgf\", \"sgi\", \"rgb\", \"rgba\", \"bw\", \"int\", \"inta\", \"sid\", \"ras\", \"sun\", \"tga\"];\nvar videoExtensions$1 = [\"3g2\", \"3gp\", \"aaf\", \"asf\", \"avchd\", \"avi\", \"drc\", \"flv\", \"m2v\", \"m4p\", \"m4v\", \"mkv\", \"mng\", \"mov\", \"mp2\", \"mp4\", \"mpe\", \"mpeg\", \"mpg\", \"mpv\", \"mxf\", \"nsv\", \"ogg\", \"ogv\", \"qt\", \"rm\", \"rmvb\", \"roq\", \"svi\", \"vob\", \"webm\", \"wmv\", \"yuv\"];\nvar GlobalNamespace;\n(function (GlobalNamespace) {})(GlobalNamespace || (GlobalNamespace = {}));\nconst _g = {\n  ...GlobalNamespace\n};\nfunction gFactory(_ref) {\n  let {\n    ebconfig,\n    options\n  } = _ref;\n  const optionsObj = {\n    ...options\n  }; // Forces undefined to empty object\n  const gaTrackingObj = options ? options.googleAnalyticsEventTracking : {};\n  const defaultG = {\n    options: optionsObj,\n    ebconfig: ebconfig,\n    GA_USER_ID_SALT: \"m83WnAPrq\",\n    analyticsEventsToTrack: {\n      login: true,\n      sign_up: true,\n      forgot_password: true,\n      forgot_password_confirm: true,\n      reset_user_password: true,\n      ...gaTrackingObj\n    }\n  };\n  return {\n    ...GlobalNamespace,\n    ...defaultG\n  };\n}\nfunction utilsFactory(globals) {\n  const g = globals || _g;\n  const generateBareUrl = (type, integrationID) => `https://api.easybase.io/${type}/${integrationID}`;\n  const generateAuthBody = () => {\n    const stamp = Date.now();\n    return {\n      token: g.token,\n      token_time: ~~(g.session / (stamp % 64)),\n      now: stamp\n    };\n  };\n  function log() {\n    if (g.options.logging) {\n      for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n        params[_key] = arguments[_key];\n      }\n      console.log(\"EASYBASE â€” \", ...params);\n    }\n  }\n  return {\n    generateAuthBody,\n    generateBareUrl,\n    log\n  };\n}\nvar POST_TYPES;\n(function (POST_TYPES) {\n  POST_TYPES[\"UPLOAD_ATTACHMENT\"] = \"upload_attachment\";\n  POST_TYPES[\"HANDSHAKE\"] = \"handshake\";\n  POST_TYPES[\"VALID_TOKEN\"] = \"valid_token\";\n  POST_TYPES[\"GET_FRAME\"] = \"get_frame\";\n  POST_TYPES[\"TABLE_SIZE\"] = \"table_size\";\n  POST_TYPES[\"COLUMN_TYPES\"] = \"column_types\";\n  POST_TYPES[\"SYNC_STACK\"] = \"sync_stack\";\n  POST_TYPES[\"SYNC_DELETE\"] = \"sync_delete\";\n  POST_TYPES[\"SYNC_INSERT\"] = \"sync_insert\";\n  POST_TYPES[\"GET_QUERY\"] = \"get_query\";\n  POST_TYPES[\"USER_ATTRIBUTES\"] = \"user_attributes\";\n  POST_TYPES[\"SET_ATTRIBUTE\"] = \"set_attribute\";\n  POST_TYPES[\"SIGN_UP\"] = \"sign_up\";\n  POST_TYPES[\"REQUEST_TOKEN\"] = \"request_token\";\n  POST_TYPES[\"EASY_QB\"] = \"easyqb\";\n  POST_TYPES[\"RESET_PASSWORD\"] = \"reset_password\";\n  POST_TYPES[\"FORGOT_PASSWORD_SEND\"] = \"forgot_password_send\";\n  POST_TYPES[\"FORGOT_PASSWORD_CONFIRM\"] = \"forgot_password_confirm\";\n})(POST_TYPES || (POST_TYPES = {}));\nvar DB_STATUS;\n(function (DB_STATUS) {\n  DB_STATUS[\"ERROR\"] = \"error\";\n  DB_STATUS[\"PENDING\"] = \"pending\";\n  DB_STATUS[\"SUCCESS\"] = \"success\";\n})(DB_STATUS || (DB_STATUS = {}));\nvar EXECUTE_COUNT;\n(function (EXECUTE_COUNT) {\n  EXECUTE_COUNT[\"ALL\"] = \"all\";\n  EXECUTE_COUNT[\"ONE\"] = \"one\";\n})(EXECUTE_COUNT || (EXECUTE_COUNT = {}));\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\nfunction createCommonjsModule(fn) {\n  var module = {\n    exports: {}\n  };\n  return fn(module, module.exports), module.exports;\n}\nvar browserPonyfill = createCommonjsModule(function (module, exports) {\n  var global = typeof self !== 'undefined' ? self : commonjsGlobal;\n  var __self__ = function () {\n    function F() {\n      this.fetch = false;\n      this.DOMException = global.DOMException;\n    }\n    F.prototype = global;\n    return new F();\n  }();\n  (function (self) {\n    (function (exports) {\n      var support = {\n        searchParams: 'URLSearchParams' in self,\n        iterable: 'Symbol' in self && 'iterator' in Symbol,\n        blob: 'FileReader' in self && 'Blob' in self && function () {\n          try {\n            new Blob();\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }(),\n        formData: 'FormData' in self,\n        arrayBuffer: 'ArrayBuffer' in self\n      };\n      function isDataView(obj) {\n        return obj && DataView.prototype.isPrototypeOf(obj);\n      }\n      if (support.arrayBuffer) {\n        var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n        var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n          return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n        };\n      }\n      function normalizeName(name) {\n        if (typeof name !== 'string') {\n          name = String(name);\n        }\n        if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n          throw new TypeError('Invalid character in header field name');\n        }\n        return name.toLowerCase();\n      }\n      function normalizeValue(value) {\n        if (typeof value !== 'string') {\n          value = String(value);\n        }\n        return value;\n      }\n\n      // Build a destructive iterator for the value list\n      function iteratorFor(items) {\n        var iterator = {\n          next: function () {\n            var value = items.shift();\n            return {\n              done: value === undefined,\n              value: value\n            };\n          }\n        };\n        if (support.iterable) {\n          iterator[Symbol.iterator] = function () {\n            return iterator;\n          };\n        }\n        return iterator;\n      }\n      function Headers(headers) {\n        this.map = {};\n        if (headers instanceof Headers) {\n          headers.forEach(function (value, name) {\n            this.append(name, value);\n          }, this);\n        } else if (Array.isArray(headers)) {\n          headers.forEach(function (header) {\n            this.append(header[0], header[1]);\n          }, this);\n        } else if (headers) {\n          Object.getOwnPropertyNames(headers).forEach(function (name) {\n            this.append(name, headers[name]);\n          }, this);\n        }\n      }\n      Headers.prototype.append = function (name, value) {\n        name = normalizeName(name);\n        value = normalizeValue(value);\n        var oldValue = this.map[name];\n        this.map[name] = oldValue ? oldValue + ', ' + value : value;\n      };\n      Headers.prototype['delete'] = function (name) {\n        delete this.map[normalizeName(name)];\n      };\n      Headers.prototype.get = function (name) {\n        name = normalizeName(name);\n        return this.has(name) ? this.map[name] : null;\n      };\n      Headers.prototype.has = function (name) {\n        return this.map.hasOwnProperty(normalizeName(name));\n      };\n      Headers.prototype.set = function (name, value) {\n        this.map[normalizeName(name)] = normalizeValue(value);\n      };\n      Headers.prototype.forEach = function (callback, thisArg) {\n        for (var name in this.map) {\n          if (this.map.hasOwnProperty(name)) {\n            callback.call(thisArg, this.map[name], name, this);\n          }\n        }\n      };\n      Headers.prototype.keys = function () {\n        var items = [];\n        this.forEach(function (value, name) {\n          items.push(name);\n        });\n        return iteratorFor(items);\n      };\n      Headers.prototype.values = function () {\n        var items = [];\n        this.forEach(function (value) {\n          items.push(value);\n        });\n        return iteratorFor(items);\n      };\n      Headers.prototype.entries = function () {\n        var items = [];\n        this.forEach(function (value, name) {\n          items.push([name, value]);\n        });\n        return iteratorFor(items);\n      };\n      if (support.iterable) {\n        Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n      }\n      function consumed(body) {\n        if (body.bodyUsed) {\n          return Promise.reject(new TypeError('Already read'));\n        }\n        body.bodyUsed = true;\n      }\n      function fileReaderReady(reader) {\n        return new Promise(function (resolve, reject) {\n          reader.onload = function () {\n            resolve(reader.result);\n          };\n          reader.onerror = function () {\n            reject(reader.error);\n          };\n        });\n      }\n      function readBlobAsArrayBuffer(blob) {\n        var reader = new FileReader();\n        var promise = fileReaderReady(reader);\n        reader.readAsArrayBuffer(blob);\n        return promise;\n      }\n      function readBlobAsText(blob) {\n        var reader = new FileReader();\n        var promise = fileReaderReady(reader);\n        reader.readAsText(blob);\n        return promise;\n      }\n      function readArrayBufferAsText(buf) {\n        var view = new Uint8Array(buf);\n        var chars = new Array(view.length);\n        for (var i = 0; i < view.length; i++) {\n          chars[i] = String.fromCharCode(view[i]);\n        }\n        return chars.join('');\n      }\n      function bufferClone(buf) {\n        if (buf.slice) {\n          return buf.slice(0);\n        } else {\n          var view = new Uint8Array(buf.byteLength);\n          view.set(new Uint8Array(buf));\n          return view.buffer;\n        }\n      }\n      function Body() {\n        this.bodyUsed = false;\n        this._initBody = function (body) {\n          this._bodyInit = body;\n          if (!body) {\n            this._bodyText = '';\n          } else if (typeof body === 'string') {\n            this._bodyText = body;\n          } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n            this._bodyBlob = body;\n          } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n            this._bodyFormData = body;\n          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n            this._bodyText = body.toString();\n          } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n            this._bodyArrayBuffer = bufferClone(body.buffer);\n            // IE 10-11 can't handle a DataView body.\n            this._bodyInit = new Blob([this._bodyArrayBuffer]);\n          } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n            this._bodyArrayBuffer = bufferClone(body);\n          } else {\n            this._bodyText = body = Object.prototype.toString.call(body);\n          }\n          if (!this.headers.get('content-type')) {\n            if (typeof body === 'string') {\n              this.headers.set('content-type', 'text/plain;charset=UTF-8');\n            } else if (this._bodyBlob && this._bodyBlob.type) {\n              this.headers.set('content-type', this._bodyBlob.type);\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n            }\n          }\n        };\n        if (support.blob) {\n          this.blob = function () {\n            var rejected = consumed(this);\n            if (rejected) {\n              return rejected;\n            }\n            if (this._bodyBlob) {\n              return Promise.resolve(this._bodyBlob);\n            } else if (this._bodyArrayBuffer) {\n              return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n            } else if (this._bodyFormData) {\n              throw new Error('could not read FormData body as blob');\n            } else {\n              return Promise.resolve(new Blob([this._bodyText]));\n            }\n          };\n          this.arrayBuffer = function () {\n            if (this._bodyArrayBuffer) {\n              return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n            } else {\n              return this.blob().then(readBlobAsArrayBuffer);\n            }\n          };\n        }\n        this.text = function () {\n          var rejected = consumed(this);\n          if (rejected) {\n            return rejected;\n          }\n          if (this._bodyBlob) {\n            return readBlobAsText(this._bodyBlob);\n          } else if (this._bodyArrayBuffer) {\n            return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n          } else if (this._bodyFormData) {\n            throw new Error('could not read FormData body as text');\n          } else {\n            return Promise.resolve(this._bodyText);\n          }\n        };\n        if (support.formData) {\n          this.formData = function () {\n            return this.text().then(decode);\n          };\n        }\n        this.json = function () {\n          return this.text().then(JSON.parse);\n        };\n        return this;\n      }\n\n      // HTTP methods whose capitalization should be normalized\n      var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n      function normalizeMethod(method) {\n        var upcased = method.toUpperCase();\n        return methods.indexOf(upcased) > -1 ? upcased : method;\n      }\n      function Request(input, options) {\n        options = options || {};\n        var body = options.body;\n        if (input instanceof Request) {\n          if (input.bodyUsed) {\n            throw new TypeError('Already read');\n          }\n          this.url = input.url;\n          this.credentials = input.credentials;\n          if (!options.headers) {\n            this.headers = new Headers(input.headers);\n          }\n          this.method = input.method;\n          this.mode = input.mode;\n          this.signal = input.signal;\n          if (!body && input._bodyInit != null) {\n            body = input._bodyInit;\n            input.bodyUsed = true;\n          }\n        } else {\n          this.url = String(input);\n        }\n        this.credentials = options.credentials || this.credentials || 'same-origin';\n        if (options.headers || !this.headers) {\n          this.headers = new Headers(options.headers);\n        }\n        this.method = normalizeMethod(options.method || this.method || 'GET');\n        this.mode = options.mode || this.mode || null;\n        this.signal = options.signal || this.signal;\n        this.referrer = null;\n        if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n          throw new TypeError('Body not allowed for GET or HEAD requests');\n        }\n        this._initBody(body);\n      }\n      Request.prototype.clone = function () {\n        return new Request(this, {\n          body: this._bodyInit\n        });\n      };\n      function decode(body) {\n        var form = new FormData();\n        body.trim().split('&').forEach(function (bytes) {\n          if (bytes) {\n            var split = bytes.split('=');\n            var name = split.shift().replace(/\\+/g, ' ');\n            var value = split.join('=').replace(/\\+/g, ' ');\n            form.append(decodeURIComponent(name), decodeURIComponent(value));\n          }\n        });\n        return form;\n      }\n      function parseHeaders(rawHeaders) {\n        var headers = new Headers();\n        // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n        // https://tools.ietf.org/html/rfc7230#section-3.2\n        var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n        preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n          var parts = line.split(':');\n          var key = parts.shift().trim();\n          if (key) {\n            var value = parts.join(':').trim();\n            headers.append(key, value);\n          }\n        });\n        return headers;\n      }\n      Body.call(Request.prototype);\n      function Response(bodyInit, options) {\n        if (!options) {\n          options = {};\n        }\n        this.type = 'default';\n        this.status = options.status === undefined ? 200 : options.status;\n        this.ok = this.status >= 200 && this.status < 300;\n        this.statusText = 'statusText' in options ? options.statusText : 'OK';\n        this.headers = new Headers(options.headers);\n        this.url = options.url || '';\n        this._initBody(bodyInit);\n      }\n      Body.call(Response.prototype);\n      Response.prototype.clone = function () {\n        return new Response(this._bodyInit, {\n          status: this.status,\n          statusText: this.statusText,\n          headers: new Headers(this.headers),\n          url: this.url\n        });\n      };\n      Response.error = function () {\n        var response = new Response(null, {\n          status: 0,\n          statusText: ''\n        });\n        response.type = 'error';\n        return response;\n      };\n      var redirectStatuses = [301, 302, 303, 307, 308];\n      Response.redirect = function (url, status) {\n        if (redirectStatuses.indexOf(status) === -1) {\n          throw new RangeError('Invalid status code');\n        }\n        return new Response(null, {\n          status: status,\n          headers: {\n            location: url\n          }\n        });\n      };\n      exports.DOMException = self.DOMException;\n      try {\n        new exports.DOMException();\n      } catch (err) {\n        exports.DOMException = function (message, name) {\n          this.message = message;\n          this.name = name;\n          var error = Error(message);\n          this.stack = error.stack;\n        };\n        exports.DOMException.prototype = Object.create(Error.prototype);\n        exports.DOMException.prototype.constructor = exports.DOMException;\n      }\n      function fetch(input, init) {\n        return new Promise(function (resolve, reject) {\n          var request = new Request(input, init);\n          if (request.signal && request.signal.aborted) {\n            return reject(new exports.DOMException('Aborted', 'AbortError'));\n          }\n          var xhr = new XMLHttpRequest();\n          function abortXhr() {\n            xhr.abort();\n          }\n          xhr.onload = function () {\n            var options = {\n              status: xhr.status,\n              statusText: xhr.statusText,\n              headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n            };\n            options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n            var body = 'response' in xhr ? xhr.response : xhr.responseText;\n            resolve(new Response(body, options));\n          };\n          xhr.onerror = function () {\n            reject(new TypeError('Network request failed'));\n          };\n          xhr.ontimeout = function () {\n            reject(new TypeError('Network request failed'));\n          };\n          xhr.onabort = function () {\n            reject(new exports.DOMException('Aborted', 'AbortError'));\n          };\n          xhr.open(request.method, request.url, true);\n          if (request.credentials === 'include') {\n            xhr.withCredentials = true;\n          } else if (request.credentials === 'omit') {\n            xhr.withCredentials = false;\n          }\n          if ('responseType' in xhr && support.blob) {\n            xhr.responseType = 'blob';\n          }\n          request.headers.forEach(function (value, name) {\n            xhr.setRequestHeader(name, value);\n          });\n          if (request.signal) {\n            request.signal.addEventListener('abort', abortXhr);\n            xhr.onreadystatechange = function () {\n              // DONE (success or failure)\n              if (xhr.readyState === 4) {\n                request.signal.removeEventListener('abort', abortXhr);\n              }\n            };\n          }\n          xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n        });\n      }\n      fetch.polyfill = true;\n      if (!self.fetch) {\n        self.fetch = fetch;\n        self.Headers = Headers;\n        self.Request = Request;\n        self.Response = Response;\n      }\n      exports.Headers = Headers;\n      exports.Request = Request;\n      exports.Response = Response;\n      exports.fetch = fetch;\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      return exports;\n    })({});\n  })(__self__);\n  __self__.fetch.ponyfill = true;\n  // Remove \"polyfill\" property added by whatwg-fetch\n  delete __self__.fetch.polyfill;\n  // Choose between native implementation (global) or custom implementation (__self__)\n  // var ctx = global.fetch ? global : __self__;\n  var ctx = __self__; // this line disable service worker support temporarily\n  exports = ctx.fetch; // To enable: import fetch from 'cross-fetch'\n  exports.default = ctx.fetch; // For TypeScript consumers without esModuleInterop.\n  exports.fetch = ctx.fetch; // To enable: import {fetch} from 'cross-fetch'\n  exports.Headers = ctx.Headers;\n  exports.Request = ctx.Request;\n  exports.Response = ctx.Response;\n  module.exports = exports;\n});\nvar fetch = /*@__PURE__*/getDefaultExportFromCjs(browserPonyfill);\nfunction authFactory(globals) {\n  const g = globals || _g;\n  const {\n    generateBareUrl,\n    generateAuthBody,\n    log\n  } = utilsFactory(g);\n  function _clearTokens() {\n    g.token = \"\";\n    g.refreshToken = \"\";\n    g.newTokenCallback();\n    g.userID = undefined;\n  }\n  const getUserAttributes = async () => {\n    try {\n      const attrsRes = await tokenPost(POST_TYPES.USER_ATTRIBUTES);\n      g.analyticsEnabled && g.analyticsEventsToTrack.get_user_attributes && g.analyticsEvent('get_user_attributes');\n      return attrsRes.data;\n    } catch (error) {\n      log(error);\n      return error;\n    }\n  };\n  const setUserAttribute = async (key, value) => {\n    try {\n      const setAttrsRes = await tokenPost(POST_TYPES.SET_ATTRIBUTE, {\n        key,\n        value\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.set_user_attribute && g.analyticsEvent('set_user_attribute', {\n        key\n      });\n      return {\n        success: setAttrsRes.success,\n        message: JSON.stringify(setAttrsRes.data)\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n  const forgotPassword = async (username, emailTemplate) => {\n    try {\n      const setAttrsRes = await tokenPost(POST_TYPES.FORGOT_PASSWORD_SEND, {\n        username,\n        emailTemplate\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.forgot_password && g.analyticsEvent('forgot_password');\n      return {\n        success: setAttrsRes.success,\n        message: setAttrsRes.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n  const forgotPasswordConfirm = async (code, username, newPassword) => {\n    try {\n      const setAttrsRes = await tokenPost(POST_TYPES.FORGOT_PASSWORD_CONFIRM, {\n        username,\n        code,\n        newPassword\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.forgot_password_confirm && g.analyticsEvent('forgot_password_confirm');\n      return {\n        success: setAttrsRes.success,\n        message: setAttrsRes.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n  const signUp = async (newUserID, password, userAttributes) => {\n    try {\n      const signUpRes = await tokenPost(POST_TYPES.SIGN_UP, {\n        newUserID,\n        password,\n        userAttributes\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.sign_up && g.analyticsEvent('sign_up', {\n        method: \"Easybase\"\n      });\n      return {\n        success: signUpRes.success,\n        message: signUpRes.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n  const signIn = async (userID, password) => {\n    const t1 = Date.now();\n    g.session = Math.floor(100000000 + Math.random() * 900000000);\n    const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n    try {\n      const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n        method: \"POST\",\n        headers: {\n          'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          version: g.ebconfig.version,\n          session: g.session,\n          instance: g.instance,\n          userID,\n          password\n        })\n      });\n      const resData = await res.json();\n      if (resData.token) {\n        g.token = resData.token;\n        g.refreshToken = resData.refreshToken;\n        g.newTokenCallback();\n        g.userID = resData.userID;\n        g.mounted = true;\n        const [validTokenRes, {\n          hash\n        }, {\n          fromUtf8\n        }] = await Promise.all([tokenPost(POST_TYPES.VALID_TOKEN), import('./sha256-e0894fe4.js').then(function (n) {\n          return n.s;\n        }), import('./index-10b0f241.js')]);\n        const elapsed = Date.now() - t1;\n        if (validTokenRes.success) {\n          log(\"Valid auth initiation in \" + elapsed + \"ms\");\n          if (g.analyticsEnabled && g.analyticsEventsToTrack.login) {\n            const hashOut = hash(fromUtf8(g.GA_USER_ID_SALT + resData.userID));\n            const hexHash = Array.prototype.map.call(hashOut, x => ('00' + x.toString(16)).slice(-2)).join('');\n            g.analyticsIdentify(hexHash);\n            g.analyticsEvent('login', {\n              method: \"Easybase\"\n            });\n          }\n          return {\n            success: true,\n            message: \"Successfully signed in user\"\n          };\n        } else {\n          return {\n            success: false,\n            message: \"Could not sign in user\"\n          };\n        }\n      } else {\n        return {\n          success: false,\n          message: \"Could not sign in user\",\n          errorCode: resData.ErrorCode || undefined\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Could not sign in user\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n  const resetUserPassword = async (currentPassword, newPassword) => {\n    if (typeof newPassword !== \"string\" || newPassword.length > 100) {\n      return {\n        success: false,\n        message: \"newPassword must be of type string\"\n      };\n    }\n    if (typeof currentPassword !== \"string\" || currentPassword.length > 100) {\n      return {\n        success: false,\n        message: \"currentPassword must be of type string\"\n      };\n    }\n    try {\n      const setAttrsRes = await tokenPost(POST_TYPES.RESET_PASSWORD, {\n        currentPassword,\n        newPassword\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.reset_user_password && g.analyticsEvent('reset_user_password');\n      return {\n        success: setAttrsRes.success,\n        message: JSON.stringify(setAttrsRes.data)\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n  const userID = () => g.userID || undefined;\n  const signOut = () => {\n    g.token = \"\";\n    g.newTokenCallback();\n    g.userID = undefined;\n  };\n  const initAuth = async () => {\n    const t1 = Date.now();\n    g.session = Math.floor(100000000 + Math.random() * 900000000);\n    log(`Handshaking on${g.instance} instance`);\n    const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n    try {\n      const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n        method: \"POST\",\n        headers: {\n          'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          version: g.ebconfig.version,\n          tt: g.ebconfig.tt,\n          session: g.session,\n          instance: g.instance\n        })\n      });\n      const resData = await res.json();\n      if (resData.token) {\n        g.token = resData.token;\n        g.mounted = true;\n        const validTokenRes = await tokenPost(POST_TYPES.VALID_TOKEN);\n        const elapsed = Date.now() - t1;\n        if (validTokenRes.success) {\n          log(\"Valid auth initiation in \" + elapsed + \"ms\");\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  };\n  const tokenPost = async (postType, body) => {\n    if (!g.mounted) {\n      await initAuth();\n    }\n    const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n    const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n      method: \"POST\",\n      headers: {\n        'Eb-Post-Req': postType,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _auth: generateAuthBody(),\n        ...body\n      })\n    });\n    const resData = await res.json();\n    if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n      if (resData.ErrorCode === \"TokenExpired\") {\n        if (integrationType === \"PROJECT\") {\n          try {\n            const req_res = await tokenPost(POST_TYPES.REQUEST_TOKEN, {\n              refreshToken: g.refreshToken,\n              token: g.token\n            });\n            if (req_res.success) {\n              g.token = req_res.data.token;\n              g.newTokenCallback();\n              return tokenPost(postType, body);\n            } else {\n              throw new Error(req_res.data || \"Error\");\n            }\n          } catch (error) {\n            _clearTokens();\n            return {\n              success: false,\n              data: error.message || error\n            };\n          }\n        } else {\n          await initAuth();\n        }\n        return tokenPost(postType, body);\n      } else {\n        const err = new Error(resData.body || resData.ErrorCode || resData.code || \"Error\");\n        err.errorCode = resData.ErrorCode || resData.code;\n        throw err;\n      }\n    } else {\n      return {\n        success: resData.success,\n        data: resData.body\n      };\n    }\n  };\n  const tokenPostAttachment = async (formData, customHeaders) => {\n    if (!g.mounted) {\n      await initAuth();\n    }\n    const regularAuthbody = generateAuthBody();\n    const attachmentAuth = {\n      'Eb-token': regularAuthbody.token,\n      'Eb-token-time': regularAuthbody.token_time,\n      'Eb-now': regularAuthbody.now\n    };\n    const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n    const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n      method: \"POST\",\n      headers: {\n        'Eb-Post-Req': POST_TYPES.UPLOAD_ATTACHMENT,\n        ...customHeaders,\n        ...attachmentAuth\n      },\n      body: formData\n    });\n    const resData = await res.json();\n    if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n      if (resData.ErrorCode === \"TokenExpired\") {\n        if (integrationType === \"PROJECT\") {\n          try {\n            const req_res = await tokenPost(POST_TYPES.REQUEST_TOKEN, {\n              refreshToken: g.refreshToken,\n              token: g.token\n            });\n            if (req_res.success) {\n              g.token = req_res.data.token;\n              g.newTokenCallback();\n              return tokenPostAttachment(formData, customHeaders);\n            } else {\n              throw new Error(req_res.data || \"Error\");\n            }\n          } catch (error) {\n            _clearTokens();\n            return {\n              success: false,\n              data: error.message || error\n            };\n          }\n        } else {\n          await initAuth();\n        }\n        return tokenPostAttachment(formData, customHeaders);\n      } else {\n        const err = new Error(resData.body || resData.ErrorCode || resData.code || \"Error\");\n        err.errorCode = resData.ErrorCode || resData.code;\n        throw err;\n      }\n    } else {\n      return {\n        success: resData.success,\n        data: resData.body\n      };\n    }\n  };\n  return {\n    initAuth,\n    tokenPost,\n    tokenPostAttachment,\n    signUp,\n    setUserAttribute,\n    getUserAttributes,\n    signIn,\n    signOut,\n    resetUserPassword,\n    forgotPassword,\n    forgotPasswordConfirm,\n    userID\n  };\n}\nfunction tableFactory(globals) {\n  const g = globals || _g;\n  const {\n    tokenPost\n  } = authFactory(g);\n  const Query = async options => {\n    const defaultOptions = {\n      queryName: \"\"\n    };\n    const fullOptions = {\n      ...defaultOptions,\n      ...options\n    };\n    const res = await tokenPost(POST_TYPES.GET_QUERY, fullOptions);\n    if (res.success) {\n      g.analyticsEnabled && g.analyticsEventsToTrack.query && g.analyticsEvent('query', {\n        queryName: fullOptions.queryName,\n        tableName: fullOptions.tableName || undefined\n      });\n      return res.data;\n    } else {\n      return [];\n    }\n  };\n  async function fullTableSize(tableName) {\n    const res = await tokenPost(POST_TYPES.TABLE_SIZE, tableName ? {\n      tableName\n    } : {});\n    if (res.success) {\n      g.analyticsEnabled && g.analyticsEventsToTrack.full_table_size && g.analyticsEvent('full_table_size', {\n        tableName: tableName || undefined\n      });\n      return res.data;\n    } else {\n      return 0;\n    }\n  }\n  async function tableTypes(tableName) {\n    const res = await tokenPost(POST_TYPES.COLUMN_TYPES, tableName ? {\n      tableName\n    } : {});\n    if (res.success) {\n      g.analyticsEnabled && g.analyticsEventsToTrack.table_types && g.analyticsEvent('table_types', {\n        tableName: tableName || undefined\n      });\n      return res.data;\n    } else {\n      return {};\n    }\n  }\n  return {\n    Query,\n    fullTableSize,\n    tableTypes\n  };\n}\n\n/** Returns a function the creates a new context */\nconst createNewContext$1 = defaultContext => {\n  const {\n    parameterize,\n    escape,\n    mapKey,\n    build\n  } = defaultContext;\n  return function () {\n    let inherit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      params = [],\n      unparameterized = false\n    } = inherit;\n    const whr = [];\n    return {\n      // properties set by the EasyQB instance\n      parameterize,\n      escape,\n      mapKey,\n      build,\n      // properties inherited from the parent query\n      params,\n      unparameterized,\n      // properties of the current query\n      type: 'select',\n      // | sql' | 'select' | 'delete' | 'insert' | 'update'\n      target: whr,\n      join: undefined,\n      separator: ' ',\n      sql: [],\n      ret: [],\n      frm: [],\n      whr,\n      grp: [],\n      hav: [],\n      setop: [],\n      ord: [],\n      with: [],\n      set: []\n\n      // properties that may be added dynamically:\n      // userType\n      // distinct\n    };\n  };\n};\n\nvar context = createNewContext$1;\nconst createQueryBuilder = _ref2 => {\n  let {\n    defaultContext,\n    query,\n    e,\n    config\n  } = _ref2;\n  const {\n    queries,\n    methods,\n    properties\n  } = query;\n  const newContext = context(defaultContext);\n  const reducers = createReducers(methods);\n  const updateContext = applyReducers(reducers);\n  reducers.extend = (ctx, args) => {\n    const arr = Array.isArray(args[0]) ? args[0] : args;\n    for (let i = 0; i < arr.length; ++i) {\n      updateContext(arr[i].method, ctx);\n    }\n  };\n  const builder = () => {}; // must not be object literal\n  const chain = createChain$1(builder);\n  const executeProperties = {\n    one: {\n      value: async function () {\n        const ret = await config.oneCallback(this.query, config.tableName, config.userAssociatedRecordsOnly);\n        return ret;\n      }\n    },\n    all: {\n      value: async function () {\n        const ret = await config.allCallback(this.query, config.tableName, config.userAssociatedRecordsOnly);\n        return ret;\n      }\n    },\n    _tableName: {\n      get: function () {\n        return config.tableName;\n      }\n    }\n  };\n\n  // EasyQB no access to from\n  const _methodProperties = methodProperties$1({\n    methods,\n    chain\n  });\n  delete _methodProperties.from;\n  Object.defineProperties(builder, {\n    ...builderProperties$1({\n      chain,\n      newContext,\n      updateContext,\n      queries\n    }),\n    ..._methodProperties,\n    ...executeProperties,\n    ...properties,\n    e: {\n      value: e\n    }\n  });\n  return chain();\n};\n\n/** Creates a new builder instance */\nconst createChain$1 = prototype => {\n  const chain = method => {\n    const fn = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return chain({\n        name: 'express',\n        args,\n        prev: method\n      });\n    };\n    fn.method = method;\n    Object.setPrototypeOf(fn, prototype);\n    return fn;\n  };\n  return chain;\n};\n\n/** Creates an object containing all method reducers */\nconst createReducers = methods => {\n  const reducers = {};\n  for (const name in methods) {\n    const {\n      updateContext,\n      properties = {}\n    } = methods[name];\n    reducers[name] = updateContext;\n    // some methods have subproperties, e.g. .unionAll\n    for (const key in properties) {\n      reducers[`${name}.${key}`] = properties[key];\n    }\n  }\n  return reducers;\n};\n\n/** Follows a method chain, applying each method's reducer, to ctx */\nconst applyReducers = reducers => (method, ctx) => {\n  // follow method links to construct methods array (in reverse)\n  const methods = [];\n  for (; method !== undefined; method = method.prev) {\n    methods.push(method);\n  }\n  // build methods object by processing methods in call order\n  const express = {\n    id: 0\n  };\n  for (let i = methods.length - 1; i >= 0; --i) {\n    const method = methods[i];\n    reducers[method.name](ctx, method.args, express);\n  }\n  return ctx;\n};\n\n/** Default properties of all SQL Query Builders */\nconst builderProperties$1 = _ref3 => {\n  let {\n    newContext,\n    updateContext,\n    queries\n  } = _ref3;\n  return {\n    _build: {\n      value: function (inheritedContext) {\n        const ctx = updateContext(this.method, newContext(inheritedContext));\n        return queries[ctx.type](ctx);\n      }\n    },\n    query: {\n      get: function () {\n        return this._build();\n      }\n    },\n    unparameterized: {\n      get: function () {\n        return this._build({\n          unparameterized: true\n        }).text;\n      }\n    }\n  };\n};\n\n/** Builds object containing a property for every query building method */\nconst methodProperties$1 = _ref4 => {\n  let {\n    methods,\n    chain\n  } = _ref4;\n  const properties = {};\n  for (const name in methods) {\n    const {\n      getter\n    } = methods[name];\n    if (getter) {\n      // add getter methods\n      properties[name] = {\n        get: function () {\n          return chain({\n            name,\n            prev: this.method\n          });\n        }\n      };\n    } else {\n      // add function call methods\n      properties[name] = {\n        value: function () {\n          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n          return chain({\n            name,\n            args,\n            prev: this.method\n          });\n        }\n      };\n    }\n  }\n  return properties;\n};\nvar builderSq = createQueryBuilder;\nconst isTaggedTemplate$5 = _ref5 => {\n  let [strings] = _ref5;\n  return Array.isArray(strings) && strings.raw;\n};\nconst buildTaggedTemplate$5 = (ctx, _ref6) => {\n  let [strings, ...args] = _ref6;\n  let txt = strings[0];\n  for (let i = 0; i < args.length; ++i) {\n    txt += ctx.build(args[i]) + strings[i + 1];\n  }\n  return txt;\n};\nvar tagged_template = {\n  isTaggedTemplate: isTaggedTemplate$5,\n  buildTaggedTemplate: buildTaggedTemplate$5\n};\nconst {\n  isTaggedTemplate: isTaggedTemplate$4,\n  buildTaggedTemplate: buildTaggedTemplate$4\n} = tagged_template;\nconst isObject$6 = arg => arg && arg.constructor.prototype === Object.prototype;\nconst buildCall$8 = callbackfn => (ctx, args) => isTaggedTemplate$4(args) ? buildTaggedTemplate$4(ctx, args) : callbackfn(ctx, args);\nconst mapJoin$8 = function (callbackfn) {\n  let separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ', ';\n  return (ctx, args) => {\n    let txt = '';\n    for (let i = 0; i < args.length; ++i) {\n      if (i !== 0) txt += separator;\n      txt += callbackfn(ctx, args[i]);\n    }\n    return txt;\n  };\n};\nconst mapJoinWrap$1 = function (callbackfn) {\n  let separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ', ';\n  let open = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '(';\n  let close = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ')';\n  return (ctx, args) => {\n    let txt = open;\n    for (let i = 0; i < args.length; ++i) {\n      if (i !== 0) txt += separator;\n      txt += callbackfn(ctx, args[i]);\n    }\n    return txt + close;\n  };\n};\nconst objectMapJoin$5 = function (callbackfn) {\n  let separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ', ';\n  return (ctx, object) => {\n    let txt = '';\n    const keys = Object.keys(object);\n    for (let i = 0; i < keys.length; ++i) {\n      if (i !== 0) txt += separator;\n      const key = keys[i];\n      txt += callbackfn(ctx, key, object[key]);\n    }\n    return txt;\n  };\n};\nvar build_utils = {\n  isObject: isObject$6,\n  buildCall: buildCall$8,\n  mapJoin: mapJoin$8,\n  mapJoinWrap: mapJoinWrap$1,\n  objectMapJoin: objectMapJoin$5\n};\n\n// included to mitigate cost of case conversion\nconst memoize$1 = fn => {\n  const cache = {};\n  return key => cache[key] || (cache[key] = fn(key));\n};\nconst normalKey$3 = given_key => given_key.indexOf('(') === -1 ? given_key.toLowerCase().trim().replace(/ /g, '_') : given_key;\nvar change_case = {\n  memoize: memoize$1,\n  normalKey: normalKey$3\n};\nvar libUtil = {\n  ...build_utils,\n  ...change_case,\n  ...tagged_template\n};\nconst {\n  isTaggedTemplate: isTaggedTemplate$3\n} = libUtil;\nconst createExpressionCompiler = expressionTable => {\n  const callsCompiler = createCallsCompiler(expressionTable);\n  return (ctx, current) => {\n    const calls = buildCalls(current);\n    const text = callsCompiler(ctx, calls);\n    return {\n      text,\n      args: ctx.params,\n      type: 'expression'\n    };\n  };\n};\n\n// TODO: Performance optimization:\n// inline expression building with this method so at most only one array\n// is allocated in total, no array of object containing arrays nonsense\nconst buildCalls = current => {\n  // get call nodes\n  const calls = [];\n  for (; current; current = current.prev) calls.push(current);\n  if (calls.length === 0) throw Error('Error: Empty expression');\n\n  // build expression list\n  let expression = {\n    name: 'arg',\n    args: []\n  };\n  const expressions = [expression];\n  const last = calls.length - 1;\n  for (let i = last; i >= 0; --i) {\n    const {\n      name,\n      args\n    } = calls[i];\n    if (i === last) {\n      if (name) expression.name = name;else pushCall(expression.args, args);\n    } else {\n      if (name) expressions.push(expression = {\n        name,\n        args: [undefined]\n      });else pushCall(expression.args, args);\n    }\n  }\n  return expressions;\n};\nconst pushCall = (array, args) => {\n  if (isTaggedTemplate$3(args)) {\n    array.push({\n      tag: args\n    });\n  } else {\n    if (args.length === 0) throw Error('Error: Expression call requires at least one argument');\n    for (let i = 0; i < args.length; ++i) {\n      array.push({\n        arg: args[i]\n      });\n    }\n  }\n};\nconst createCallsCompiler = expressionTable => (ctx, calls) => {\n  let exp;\n  for (let i = 0; i < calls.length; ++i) {\n    const {\n      name,\n      args\n    } = calls[i];\n    const {\n      build,\n      minArgs,\n      maxArgs\n    } = expressionTable[name];\n    if (i !== 0) args[0] = {\n      exp\n    };\n    const numArgs = args.length;\n    if (numArgs < minArgs) throw Error(`Error: ${name} requires at least ${minArgs} arguments`);\n    if (numArgs > maxArgs) throw Error(`Error: ${name} accepts at most ${maxArgs} arguments`);\n    exp = build(ctx, args);\n  }\n  return exp;\n};\nvar compile = createExpressionCompiler;\nconst {\n  normalKey: normalKey$2\n} = libUtil;\nconst aggregator = op => columnName => `${op}(${normalKey$2(columnName)})`;\nvar builderExpression = _ref7 => {\n  let {\n    defaultContext,\n    expression\n  } = _ref7;\n  const {\n    expressions\n  } = expression;\n  const newContext = createNewContext(defaultContext);\n  const compile$1 = compile(expressions);\n  const builder = () => {}; // must not be object literal\n  const chain = createChain(builder);\n  Object.defineProperties(builder, {\n    ...builderProperties({\n      compile: compile$1,\n      newContext\n    }),\n    ...methodProperties({\n      expressions,\n      chain\n    })\n  });\n  const ret = chain();\n  ret.max = aggregator('max');\n  ret.min = aggregator('min');\n  ret.avg = aggregator('avg');\n  ret.count = aggregator('count');\n  ret.sum = aggregator('sum');\n  return ret;\n};\nconst builderProperties = _ref8 => {\n  let {\n    compile,\n    newContext\n  } = _ref8;\n  return {\n    _build: {\n      value: function (inherit) {\n        return compile(newContext(inherit), this.current);\n      }\n    },\n    query: {\n      get: function () {\n        return this._build();\n      }\n    },\n    unparameterized: {\n      get: function () {\n        return this._build({\n          unparameterized: true\n        }).text;\n      }\n    }\n  };\n};\nconst createNewContext = defaultContext => {\n  const {\n    build,\n    parameterize,\n    escape,\n    mapKey\n  } = defaultContext;\n  return inherit => {\n    const {\n      params = [],\n      unparameterized = false\n    } = inherit || {};\n    return {\n      // EasyQB instance properties\n      build,\n      parameterize,\n      escape,\n      mapKey,\n      // inherited properties\n      params,\n      unparameterized\n    };\n  };\n};\nconst createChain = prototype => {\n  const chain = current => {\n    const fn = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      return chain({\n        prev: current,\n        args\n      });\n    };\n    fn.current = current;\n    Object.setPrototypeOf(fn, prototype);\n    return fn;\n  };\n  return chain;\n};\nconst methodProperties = _ref9 => {\n  let {\n    expressions,\n    chain\n  } = _ref9;\n  const properties = {};\n  for (const name in expressions) {\n    properties[name] = {\n      get: function () {\n        return chain({\n          prev: this.current,\n          name\n        });\n      }\n    };\n  }\n  return properties;\n};\nconst {\n  memoize,\n  normalKey: normalKey$1\n} = libUtil;\n\n/**\n * Creates a version of EasyQB for the given SQL dialect and database adapter.\n *\n * A dialect is variant of the SQL language,\n * while an adapter is the driver that communicates with the database.\n *\n * This design makes it easy to swap drivers, e.g. mysql vs mysql2 or\n * add new databases just by connecting a new adapter to an existing dialect.\n *\n */\n\nconst createSqorn = _ref10 => {\n  let {\n    dialect\n  } = _ref10;\n  return function () {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      query,\n      expression,\n      parameterize,\n      escape\n    } = dialect;\n\n    // 1. Create default context properties passed through build tree\n    const mapKey = memoize(normalKey$1);\n    const defaultContext = {\n      parameterize,\n      escape,\n      mapKey,\n      build: build$1\n    };\n\n    // 2. Create Expression Builder\n    const e = builderExpression({\n      defaultContext,\n      expression\n    });\n\n    // 3. Create Query Builder\n    const sq = builderSq({\n      defaultContext,\n      query,\n      e,\n      config\n    });\n\n    // 4. TODO: Build Executor, Attach e and execute functions\n\n    // 5. TODO: Return { sq, e, transaction, db }\n    return sq;\n  };\n};\nfunction build$1(arg) {\n  if (arg === undefined) throw Error('Error: undefined argument');\n  if (typeof arg === 'function') {\n    if (arg._build) {\n      const {\n        type,\n        text\n      } = arg._build(this);\n      if (type === 'expression') return text;\n      if (type === 'fragment') return text;\n      return `(${text})`;\n    }\n    return arg(this);\n  }\n  return this.unparameterized ? this.escape(arg) : this.parameterize(arg);\n}\nvar libCore = createSqorn;\nconst {\n  normalKey\n} = libUtil;\n\n/** Query building methods */\nconst methods$1 = {\n  with: {\n    updateContext: (ctx, args) => {\n      ctx.with.push(args);\n    }\n  },\n  withRecursive: {\n    updateContext: (ctx, args) => {\n      ctx.recursive = true;\n      ctx.with.push(args);\n    }\n  },\n  from: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push({\n        args,\n        join: ', '\n      });\n    }\n  },\n  where: {\n    updateContext: (ctx, args) => {\n      ctx.whr.push(args);\n      ctx.target = ctx.whr;\n    }\n  },\n  return: {\n    updateContext: (ctx, args) => {\n      ctx.ret.push(Array.isArray(args) ? args.map(normalKey) : args);\n    }\n  },\n  distinct: {\n    getter: true,\n    updateContext: ctx => {\n      ctx.distinct = [];\n    }\n  },\n  groupBy: {\n    updateContext: (ctx, args) => {\n      ctx.grp.push(args);\n    }\n  },\n  having: {\n    updateContext: (ctx, args) => {\n      ctx.hav.push(args);\n      ctx.target = ctx.hav;\n    }\n  },\n  union: {\n    updateContext: (ctx, args) => {\n      ctx.setop.push({\n        type: 'union',\n        args\n      });\n    }\n  },\n  unionAll: {\n    updateContext: (ctx, args) => {\n      ctx.setop.push({\n        type: 'union all',\n        args\n      });\n    }\n  },\n  intersect: {\n    updateContext: (ctx, args) => {\n      ctx.setop.push({\n        type: 'intersect',\n        args\n      });\n    }\n  },\n  intersectAll: {\n    updateContext: (ctx, args) => {\n      ctx.setop.push({\n        type: 'intersect all',\n        args\n      });\n    }\n  },\n  except: {\n    updateContext: (ctx, args) => {\n      ctx.setop.push({\n        type: 'except',\n        args\n      });\n    }\n  },\n  exceptAll: {\n    updateContext: (ctx, args) => {\n      ctx.setop.push({\n        type: 'except all',\n        args\n      });\n    }\n  },\n  orderBy: {\n    updateContext: (ctx, args) => {\n      ctx.ord.push(args);\n    }\n  },\n  limit: {\n    updateContext: (ctx, args) => {\n      ctx.limit = args;\n    }\n  },\n  offset: {\n    updateContext: (ctx, args) => {\n      ctx.offset = args;\n    }\n  },\n  join: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' join '\n      });\n    }\n  },\n  leftJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' left join '\n      });\n    }\n  },\n  rightJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' right join '\n      });\n    }\n  },\n  fullJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' full join '\n      });\n    }\n  },\n  crossJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' cross join '\n      });\n    }\n  },\n  naturalJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' natural join '\n      });\n    }\n  },\n  naturalLeftJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' natural left join '\n      });\n    }\n  },\n  naturalRightJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' natural right join '\n      });\n    }\n  },\n  naturalFullJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' natural full join '\n      });\n    }\n  },\n  on: {\n    updateContext: (ctx, args) => {\n      const {\n        join\n      } = ctx;\n      if (join.on) {\n        join.on.push(args);\n      } else {\n        ctx.target = join.on = [args];\n      }\n    }\n  },\n  using: {\n    updateContext: (ctx, args) => {\n      const {\n        join\n      } = ctx;\n      if (join.using) {\n        join.using.push(args);\n      } else {\n        join.using = [args];\n      }\n    }\n  },\n  delete: {\n    // getter: true,\n    updateContext: ctx => {\n      ctx.type = 'delete';\n    }\n  },\n  insert: {\n    updateContext: (ctx, args) => {\n      ctx.type = 'insert';\n      ctx.insert = args;\n    }\n  },\n  set: {\n    updateContext: (ctx, args) => {\n      ctx.type = 'update';\n      ctx.set.push(args);\n    }\n  },\n  express: {\n    updateContext: (ctx, args, count) => {\n      if (count.id === 0) {\n        count.id++;\n        ctx.frm.push(ctx.join = {\n          type: 'from',\n          args,\n          join: ', '\n        });\n      } else if (count.id === 1) {\n        count.id++;\n        ctx.whr.push(args);\n      } else if (count.id === 2) {\n        count.id++;\n        ctx.ret.push(args);\n      } else throw Error('Invalid express call');\n    }\n  }\n};\nvar methods_1 = methods$1;\nconst {\n  mapJoin: mapJoin$7\n} = libUtil;\nvar values_array = (ctx, array) => {\n  const keys = uniqueKeys(array);\n  return {\n    columns: columns(ctx, keys),\n    values: values(ctx, array, keys)\n  };\n};\n\n// gets unique keys in object array\nconst uniqueKeys = array => {\n  const keys = {};\n  for (const object of array) {\n    for (const key in object) {\n      keys[key] = true;\n    }\n  }\n  return Object.keys(keys);\n};\n\n// gets column string from unique keys of object array\nconst columns = mapJoin$7((ctx, arg) => ctx.mapKey(arg));\n\n// gets values string of object array\nconst values = (ctx, source, keys) => {\n  let txt = 'values ';\n  for (let i = 0; i < source.length; ++i) {\n    if (i !== 0) txt += ', ';\n    txt += '(';\n    const object = source[i];\n    for (let j = 0; j < keys.length; ++j) {\n      if (j !== 0) txt += ', ';\n      txt += value$1(ctx, object[keys[j]]);\n    }\n    txt += ')';\n  }\n  return txt;\n};\nconst value$1 = (ctx, arg) => {\n  if (arg === undefined) return 'default';\n  return ctx.build(arg);\n};\nconst {\n  isObject: isObject$5,\n  buildCall: buildCall$7,\n  mapJoin: mapJoin$6,\n  objectMapJoin: objectMapJoin$4\n} = libUtil;\nvar _with = ctx => {\n  if (ctx.with.length === 0) return;\n  const txt = calls$3(ctx, ctx.with);\n  return txt && `with ${ctx.recursive ? 'recursive ' : ''}${txt}`;\n};\nconst buildArg$4 = (ctx, arg) => {\n  if (isObject$5(arg)) return buildObject$5(ctx, arg);\n  throw Error('Invalid with argument:', arg);\n};\nconst buildProperty$4 = (ctx, key, value) => {\n  if (typeof value === 'function') {\n    return `${ctx.mapKey(key)} ${ctx.build(value)}`;\n  }\n  if (Array.isArray(value)) {\n    const {\n      columns,\n      values\n    } = values_array(ctx, value);\n    return `${ctx.mapKey(key)}(${columns}) (${values})`;\n  }\n  throw Error(`Error: Invalid .with argument`);\n};\nconst buildObject$5 = objectMapJoin$4(buildProperty$4);\nconst calls$3 = mapJoin$6(buildCall$7(mapJoin$6(buildArg$4)));\nconst {\n  isObject: isObject$4,\n  buildCall: buildCall$6,\n  mapJoin: mapJoin$5,\n  objectMapJoin: objectMapJoin$3\n} = libUtil;\nconst buildArg$3 = (ctx, arg) => {\n  if (typeof arg === 'string') return arg;\n  if (isObject$4(arg)) return buildObject$4(ctx, arg);\n  return ctx.build(arg);\n};\nconst buildProperty$3 = (ctx, key, value) => {\n  const expression = typeof value === 'string' ? value : ctx.build(value);\n  return `${expression} ${ctx.mapKey(key)}`;\n};\nconst buildObject$4 = objectMapJoin$3(buildProperty$3);\nvar expressions$1 = mapJoin$5(buildCall$6(mapJoin$5(buildArg$3)));\nvar select$2 = ctx => `select ${buildDistinct(ctx)}${expressions$1(ctx, ctx.ret) || '*'}`;\nconst buildDistinct = ctx => ctx.distinct ? ctx.distinct.length ?\n// TODO: expressions shouldn't be aliasable here\n`distinct on (${expressions$1(ctx, ctx.distinct)})` : 'distinct' : '';\nconst {\n  isTaggedTemplate: isTaggedTemplate$2,\n  buildTaggedTemplate: buildTaggedTemplate$3,\n  isObject: isObject$3,\n  mapJoin: mapJoin$4,\n  objectMapJoin: objectMapJoin$2\n} = libUtil;\nconst buildCall$5 = callbackfn => (ctx, args) => isTaggedTemplate$2(args) ? `(${buildTaggedTemplate$3(ctx, args)})` : callbackfn(ctx, args);\nconst buildArg$2 = (ctx, arg) => isObject$3(arg) ? buildObject$3(ctx, arg) : ctx.build(arg);\nconst valuesList = mapJoin$4((ctx, arg) => ctx.build(arg));\nconst buildProperty$2 = (ctx, key, value) => {\n  const name = ctx.mapKey(key);\n  if (value === null) return `(${name} is null)`;\n  if (Array.isArray(value)) return `(${name} in (${valuesList(ctx, value)}))`;\n  return `(${name} = ${ctx.build(value)})`;\n};\nconst buildObject$3 = objectMapJoin$2(buildProperty$2, ' and ');\nvar conditions = mapJoin$4(buildCall$5(mapJoin$4(buildArg$2, ' and ')), ' and ');\nconst {\n  isObject: isObject$2,\n  buildCall: buildCall$4,\n  mapJoin: mapJoin$3,\n  objectMapJoin: objectMapJoin$1\n} = libUtil;\nvar from_items = function (ctx, items) {\n  let start = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let end = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : items.length;\n  if (end > items.length) end = items.length;\n  let txt = '';\n  for (let i = start; i < end; ++i) {\n    const item = items[i];\n    if (i !== start) txt += item.join;\n    txt += fromItem(ctx, item.args);\n    if (item.on) txt += ` on ${conditions(ctx, item.on)}`;else if (item.using) txt += ` using (${using$1(ctx, item.using)})`;\n  }\n  return txt;\n};\nconst usingArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg;\n  if (typeof arg === 'function') return ctx.build(arg);\n  throw Error('Error: Invalid .using arg');\n};\nconst using$1 = mapJoin$3(buildCall$4(mapJoin$3(usingArg)));\nconst fromArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg;\n  if (typeof arg === 'function') return ctx.build(arg);\n  if (isObject$2(arg)) return buildObject$2(ctx, arg);\n  throw Error('Error: Invalid .from argument:', arg);\n};\nconst buildProperty$1 = (ctx, key, value) => {\n  if (typeof value === 'string') return `${value} ${ctx.mapKey(key)}`;\n  if (typeof value === 'function') return `${ctx.build(value)} ${ctx.mapKey(key)}`;\n  if (Array.isArray(value)) {\n    const {\n      columns,\n      values\n    } = values_array(ctx, value);\n    return `(${values}) ${ctx.mapKey(key)}(${columns})`;\n  }\n  throw Error('Error: Invalid .from argument');\n};\nconst buildObject$2 = objectMapJoin$1(buildProperty$1);\nconst fromItem = buildCall$4(mapJoin$3(fromArg));\nvar from$2 = ctx => {\n  const txt = from_items(ctx, ctx.frm);\n  return txt && `from ${txt}`;\n};\nvar where$2 = ctx => {\n  if (ctx.whr.length === 0) return;\n  const txt = conditions(ctx, ctx.whr);\n  return txt && 'where ' + txt;\n};\nconst {\n  isObject: isObject$1,\n  buildCall: buildCall$3,\n  mapJoin: mapJoin$2,\n  mapJoinWrap\n} = libUtil;\nvar group$2 = ctx => {\n  if (ctx.grp.length === 0) return;\n  const txt = calls$2(ctx, ctx.grp);\n  return txt && `group by ${txt}`;\n};\nconst buildArg$1 = (ctx, arg) => {\n  if (typeof arg === 'string') return arg;\n  if (typeof arg === 'function') return ctx.build(arg);\n  if (Array.isArray(arg)) return buildArrayArg(ctx, arg);\n  if (isObject$1(arg)) return buildObject$1(ctx, arg);\n  throw Error('Invalid order by argument:', arg);\n};\nconst buildArrayArg = mapJoinWrap(buildArg$1);\n\n// postgres only\n// clone of buildArg() without support for object args\nconst buildCubeOrRollupArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg;\n  if (typeof arg === 'function') return ctx.build(arg);\n  if (Array.isArray(arg)) return buildCubeOrRollupArrayArg(ctx, arg);\n  throw Error('Invalid cube/rollup argument');\n};\n\n// postgres only\n// clone of buildArrayArg() without support for object args\nconst buildCubeOrRollupArrayArg = mapJoinWrap(buildCubeOrRollupArg);\n\n// postgres only\nconst buildObject$1 = (ctx, obj) => {\n  const {\n    type,\n    args\n  } = obj;\n  if (type === 'rollup') {\n    return `rollup ${buildCubeOrRollupArg(ctx, args)}`;\n  }\n  if (type === 'cube') {\n    return `cube ${buildCubeOrRollupArg(ctx, args)}`;\n  }\n  if (type === 'grouping sets') {\n    return `grouping sets ${buildArg$1(ctx, args)}`;\n  }\n  throw Error('Invalid group by argument');\n};\nconst calls$2 = mapJoin$2(buildCall$3(mapJoin$2(buildArg$1)));\nvar having$2 = ctx => {\n  if (ctx.hav.length === 0) return;\n  const txt = conditions(ctx, ctx.hav);\n  return txt && 'having ' + txt;\n};\nvar setop$2 = ctx => {\n  if (ctx.setop.length === 0) return;\n  let txt = '';\n  let first = true;\n  const {\n    setop\n  } = ctx;\n  for (let i = 0; i < setop.length; ++i) {\n    const {\n      type,\n      args\n    } = ctx.setop[i];\n    for (let j = 0; j < args.length; ++j) {\n      if (!first) {\n        txt += ' ';\n      } else {\n        first = false;\n      }\n      txt += `${type} ${ctx.build(args[j])}`;\n    }\n  }\n  return txt;\n};\nconst {\n  isObject,\n  buildCall: buildCall$2,\n  mapJoin: mapJoin$1\n} = libUtil;\nvar order$2 = ctx => {\n  if (ctx.ord.length === 0) return;\n  const txt = calls$1(ctx, ctx.ord);\n  return txt && `order by ${txt}`;\n};\nconst buildArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg;\n  if (typeof arg === 'function') return ctx.build(arg);\n  if (isObject(arg)) return buildObject(ctx, arg);\n  throw Error('Invalid order by argument:', arg);\n};\nconst buildObject = (ctx, obj) => {\n  let txt = '';\n  const {\n    by,\n    sort,\n    using,\n    nulls\n  } = obj;\n  // by\n  if (typeof by === 'string') txt += by;else if (typeof by === 'function') txt += ctx.build(by);else throw Error('Invalid order by property \"by\"');\n  // sort\n  if (sort) {\n    if (sort === 'desc') txt += ' desc';else if (sort === 'asc') txt += ' asc';else if (typeof sort === 'string') txt += ` using ${sort}`;else throw Error('Invalid order by property \"sort\"');\n  } else if (using) {\n    if (typeof using === 'string') txt += ` using ${using}`;else throw Error('Invalid order by property \"using\"');\n  }\n  // nulls\n  if (nulls === undefined) ;else if (nulls === 'last') txt += ' nulls last';else if (nulls === 'first') txt += ' nulls first';else throw Error('Invalid order by property \"nulls\"');\n  // return\n  return txt;\n};\nconst calls$1 = mapJoin$1(buildCall$2(mapJoin$1(buildArg)));\nconst {\n  isTaggedTemplate: isTaggedTemplate$1,\n  buildTaggedTemplate: buildTaggedTemplate$2\n} = libUtil;\nvar limit_offset = (ctx, args) => {\n  if (isTaggedTemplate$1(args)) return buildTaggedTemplate$2(ctx, args);\n  const arg = args[0];\n  if (typeof arg === 'number') return ctx.parameterize(arg);\n  if (typeof arg === 'function') return ctx.build(arg);\n  throw Error('Error: Invalid limit/offset argument');\n};\nvar limit$2 = ctx => ctx.limit && `limit ${limit_offset(ctx, ctx.limit)}`;\nvar offset$2 = ctx => ctx.offset && `offset ${limit_offset(ctx, ctx.offset)}`;\nvar _delete = ctx => {\n  const txt = from_items(ctx, ctx.frm);\n  return txt && `delete from ${txt}`;\n};\nvar returning$2 = ctx => {\n  if (!ctx.ret) return;\n  const txt = expressions$1(ctx, ctx.ret);\n  return txt && `returning ${txt}`;\n};\nconst {\n  isTaggedTemplate,\n  buildTaggedTemplate: buildTaggedTemplate$1\n} = libUtil;\nvar insert$1 = ctx => {\n  const table = from_items(ctx, ctx.frm);\n  const values = buildCall$1(ctx, ctx.insert);\n  return `insert into ${table}${values}`;\n};\nconst buildCall$1 = (ctx, args) => {\n  if (isTaggedTemplate(args)) return ' ' + buildTaggedTemplate$1(ctx, args);\n  if (args.length === 1 && args[0] === undefined) return ' default values';\n  if (Array.isArray(args[0])) return buildValuesArray(ctx, args[0]);\n  if (typeof args[0] === 'function') return ' ' + ctx.build(args[0]);\n  return buildValuesArray(ctx, args);\n};\nconst buildValuesArray = (ctx, array) => {\n  const {\n    values,\n    columns\n  } = values_array(ctx, array);\n  return `(${columns}) ${values}`;\n};\nvar update$2 = ctx => {\n  const txt = from_items(ctx, ctx.frm);\n  return txt && `update ${txt}`;\n};\nconst {\n  buildCall,\n  mapJoin,\n  objectMapJoin\n} = libUtil;\nvar set$2 = ctx => {\n  if (!ctx.set) return;\n  const txt = calls(ctx, ctx.set);\n  return txt && 'set ' + txt;\n};\nconst buildProperty = (ctx, key, value) => `${ctx.mapKey(key)} = ${ctx.build(value)}`;\nconst calls = mapJoin(buildCall(mapJoin(objectMapJoin(buildProperty))));\nvar clauses$1 = {\n  wth: _with,\n  select: select$2,\n  from: from$2,\n  where: where$2,\n  group: group$2,\n  having: having$2,\n  setop: setop$2,\n  order: order$2,\n  limit: limit$2,\n  offset: offset$2,\n  del: _delete,\n  returning: returning$2,\n  insert: insert$1,\n  update: update$2,\n  set: set$2\n};\nconst {\n  wth: wth$1,\n  select: select$1,\n  from: from$1,\n  where: where$1,\n  group: group$1,\n  having: having$1,\n  setop: setop$1,\n  order: order$1,\n  limit: limit$1,\n  offset: offset$1,\n  del: del$1,\n  returning: returning$1,\n  insert,\n  update: update$1,\n  set: set$1\n} = clauses$1;\nconst query$2 = function () {\n  for (var _len5 = arguments.length, clauses = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    clauses[_key5] = arguments[_key5];\n  }\n  return ctx => {\n    let text = '';\n    for (const clause of clauses) {\n      const str = clause && clause(ctx);\n      if (str) {\n        if (text) text += ctx.separator;\n        text += str;\n      }\n    }\n    return {\n      text,\n      args: ctx.params,\n      type: ctx.userType || ctx.type\n    };\n  };\n};\nconst queries$2 = {\n  select: query$2(wth$1, select$1, from$1, where$1, group$1, having$1, setop$1, order$1, limit$1, offset$1),\n  update: query$2(wth$1, update$1, set$1, where$1, returning$1),\n  delete: query$2(wth$1, del$1, where$1, returning$1),\n  insert: query$2(wth$1, insert, returning$1)\n};\nvar query_1$1 = {\n  query: query$2,\n  queries: queries$2\n};\nvar common$1 = {\n  conditions,\n  expressions: expressions$1,\n  fromItems: from_items,\n  limitOffset: limit_offset,\n  valuesArray: values_array\n};\nconst {\n  query: query$1,\n  queries: queries$1\n} = query_1$1;\nvar libSq = {\n  methods: methods_1,\n  query: query$1,\n  queries: queries$1,\n  clauses: clauses$1,\n  common: common$1\n};\nconst {\n  methods,\n  queries,\n  query,\n  clauses,\n  common\n} = libSq;\nconst {\n  fromItems,\n  expressions\n} = common;\nconst {\n  wth,\n  from,\n  where,\n  group,\n  having,\n  setop,\n  order,\n  limit,\n  offset,\n  returning,\n  set\n} = clauses;\nconst postgresMethods = {\n  distinctOn: {\n    updateContext: (ctx, args) => {\n      if (ctx.distinct) {\n        ctx.distinct.push(args);\n      } else {\n        ctx.distinct = [args];\n      }\n    }\n  }\n};\n\n// SELECT supports .distinctOn(...expressions)\nconst select = ctx => {\n  let txt = 'select ';\n  if (ctx.distinct) {\n    txt += 'distinct ';\n    if (ctx.distinct.length) {\n      txt += `on (${expressions(ctx, ctx.distinct)}) `;\n    }\n  }\n  txt += expressions(ctx, ctx.ret) || '*';\n  return txt;\n};\n// DELETE: first .from call is used in the DELETE clause\n// subsequent .from calls are used in the USING clause\nconst del = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 0, 1);\n  return txt && `delete from ${txt}`;\n};\nconst using = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 1);\n  return txt && `using ${txt}`;\n};\n// UPDATE: first .from call is used in the UPDATE clause\n// subsequent .from calls are used in the FROM clause\nconst update = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 0, 1);\n  return txt && `update ${txt}`;\n};\nconst updateFrom = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 1);\n  return txt && `from ${txt}`;\n};\nvar query_1 = {\n  methods: {\n    ...methods,\n    ...postgresMethods\n  },\n  queries: {\n    ...queries,\n    select: query(wth, select, from, where, group, having, setop, order, limit, offset),\n    delete: query(wth, del, using, where, returning),\n    update: query(wth, update, set, updateFrom, where, returning)\n  },\n  properties: {\n    rollup: {\n      value: function () {\n        for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          args[_key6] = arguments[_key6];\n        }\n        return {\n          type: 'rollup',\n          args\n        };\n      }\n    },\n    cube: {\n      value: function () {\n        for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n          args[_key7] = arguments[_key7];\n        }\n        return {\n          type: 'cube',\n          args\n        };\n      }\n    },\n    groupingSets: {\n      value: function () {\n        for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n          args[_key8] = arguments[_key8];\n        }\n        return {\n          type: 'grouping sets',\n          args\n        };\n      }\n    }\n  }\n};\nconst {\n  buildTaggedTemplate\n} = libUtil;\nconst dateToYYYYMMDD = d => [d.getFullYear(), ('0' + (d.getMonth() + 1)).slice(-2), ('0' + d.getDate()).slice(-2)].join('-');\nconst build = (ctx, arg) => {\n  // compiled expression string\n  if (arg.exp) return arg.exp;\n  // tagged template argument\n  if (arg.tag) return buildTaggedTemplate(ctx, arg.tag);\n  // expression, subquery or fragment argument\n  return ctx.build(arg.arg);\n};\nconst unaryPre$1 = op => ({\n  minArgs: 1,\n  maxArgs: 1,\n  build: (ctx, args) => `(${op} ${build(ctx, args[0])})`\n});\nconst unaryPost$1 = op => ({\n  minArgs: 1,\n  maxArgs: 1,\n  build: (ctx, args) => `(${build(ctx, args[0])} ${op})`\n});\nconst unaryFunction$1 = op => ({\n  minArgs: 1,\n  maxArgs: 1,\n  build: (ctx, args) => `${op}(${build(ctx, args[0])})`\n});\nconst binary$1 = op => ({\n  minArgs: 2,\n  maxArgs: 2,\n  build: (ctx, args) => `(${build(ctx, args[0])} ${op} ${build(ctx, args[1])})`\n});\nconst dateBinary$1 = op => ({\n  minArgs: 2,\n  maxArgs: 2,\n  build: (ctx, args) => {\n    const inDate = args[1].arg;\n    if (typeof inDate.getMonth === 'function') {\n      args[1].arg = dateToYYYYMMDD(inDate);\n    }\n    return `date(${build(ctx, args[0])}, 'YYYY-MM-DD') ${op} ${build(ctx, args[1])}`;\n  }\n});\nconst ternary$1 = (op1, op2) => ({\n  minArgs: 3,\n  maxArgs: 3,\n  build: (ctx, args) => `(${build(ctx, args[0])} ${op1} ${build(ctx, args[1])} ${op2} ${build(ctx, args[2])})`\n});\nconst nary$1 = op => ({\n  minArgs: 1,\n  maxArgs: Number.MAX_SAFE_INTEGER,\n  build: (ctx, args) => {\n    if (args.length === 1) return build(ctx, args[0]);\n    let txt = '(';\n    for (let i = 0; i < args.length; ++i) {\n      if (i !== 0) txt += ` ${op} `;\n      txt += build(ctx, args[i]);\n    }\n    return txt + ')';\n  }\n});\nconst naryFunction$1 = fn => ({\n  minArgs: 1,\n  maxArgs: Number.MAX_SAFE_INTEGER,\n  build: (ctx, args) => {\n    let txt = `${fn}(`;\n    for (let i = 0; i < args.length; ++i) {\n      if (i !== 0) txt += `, `;\n      txt += build(ctx, args[i]);\n    }\n    return txt + ')';\n  }\n});\nconst oneValue$1 = {\n  minArgs: 1,\n  maxArgs: 1,\n  build: (ctx, args) => build(ctx, args[0])\n};\nconst compositeValue$1 = {\n  minArgs: 1,\n  maxArgs: Number.MAX_SAFE_INTEGER,\n  build: (ctx, args) => {\n    if (args.length === 1) return build(ctx, args[0]);\n    let txt = '';\n    for (let i = 0; i < args.length; ++i) {\n      if (i !== 0) txt += ', ';\n      txt += build(ctx, args[i]);\n    }\n    return args.length > 1 ? `(${txt})` : txt;\n  }\n};\nconst buildValuesList = (ctx, values) => {\n  if (values.length === 0) throw Error('Error: .in operation values list empty');\n  let txt = '(';\n  for (let i = 0; i < values.length; ++i) {\n    if (i !== 0) txt += ', ';\n    txt += ctx.build(values[i]);\n  }\n  return txt + ')';\n};\nconst membership$1 = op => ({\n  minArgs: 2,\n  maxArgs: 2,\n  build: (ctx, _ref11) => {\n    let [arg1, arg2] = _ref11;\n    return `(${build(ctx, arg1)} ${op} ${Array.isArray(arg2.arg) ? buildValuesList(ctx, arg2.arg) : build(ctx, arg2)})`;\n  }\n});\nconst quantifiedComparison$1 = op => ({\n  minArgs: 2,\n  maxArgs: 2,\n  build: (ctx, args) => `(${build(ctx, args[0])} ${op}(${build(ctx, args[1])}))`\n});\nvar util = {\n  build,\n  unaryFunction: unaryFunction$1,\n  unaryPre: unaryPre$1,\n  unaryPost: unaryPost$1,\n  binary: binary$1,\n  ternary: ternary$1,\n  nary: nary$1,\n  naryFunction: naryFunction$1,\n  oneValue: oneValue$1,\n  compositeValue: compositeValue$1,\n  membership: membership$1,\n  quantifiedComparison: quantifiedComparison$1,\n  dateBinary: dateBinary$1\n};\nconst {\n  unaryPre,\n  unaryPost,\n  unaryFunction,\n  binary,\n  ternary,\n  nary,\n  naryFunction,\n  oneValue,\n  compositeValue,\n  membership,\n  quantifiedComparison,\n  dateBinary\n} = util;\n\n// value\nconst value = {\n  arg: compositeValue,\n  row: compositeValue,\n  unknown: oneValue,\n  boolean: oneValue,\n  number: oneValue,\n  string: oneValue,\n  array: oneValue,\n  json: oneValue,\n  table: oneValue\n};\n\n// boolean\nconst boolean = {\n  // logical\n  and: nary('and'),\n  or: nary('or'),\n  not: unaryFunction('not'),\n  // comparison\n  isTrue: unaryPost('is true'),\n  isNotTrue: unaryPost('is not true'),\n  isFalse: unaryPost('is false'),\n  isNotFalse: unaryPost('is not false'),\n  isUnknown: unaryPost('is unknown'),\n  isNotUnknown: unaryPost('is not unknown')\n};\n\n// comparison\nconst comparison = {\n  // binary comparison\n  eq: binary('='),\n  neq: binary('<>'),\n  lt: binary('<'),\n  gt: binary('>'),\n  lte: binary('<='),\n  gte: binary('>='),\n  // misc\n  between: ternary('between', 'and'),\n  isDistinctFrom: binary('is distinct from'),\n  isNotDistinctFrom: binary('is not distinct from'),\n  isNull: unaryPost('is null'),\n  isNotNull: unaryPost('is not null'),\n  in: membership('in'),\n  notIn: membership('not in'),\n  // quantified any\n  eqAny: quantifiedComparison('= any'),\n  neqAny: quantifiedComparison('<> any'),\n  ltAny: quantifiedComparison('< any'),\n  gtAny: quantifiedComparison('> any'),\n  lteAny: quantifiedComparison('<= any'),\n  gteAny: quantifiedComparison('>= any'),\n  // quantified all\n  eqAll: quantifiedComparison('= all'),\n  neqAll: quantifiedComparison('<> all'),\n  ltAll: quantifiedComparison('< all'),\n  gtAll: quantifiedComparison('> all'),\n  lteAll: quantifiedComparison('<= all'),\n  gteAll: quantifiedComparison('>= all')\n};\n\n// dates\nconst dateComparison = {\n  // dateEq: dateBinary('='),\n  // dateNeq: dateBinary('<>'),\n  dateLt: dateBinary('<'),\n  dateGt: dateBinary('>'),\n  dateLte: dateBinary('<='),\n  dateGte: dateBinary('>=')\n};\n\n// math\nconst math = {\n  add: binary('+'),\n  sub: binary('-'),\n  mul: binary('*'),\n  div: binary('/'),\n  mod: binary('%'),\n  exp: binary('%'),\n  sqrt: unaryPre('|/'),\n  cbrt: unaryPre('||/'),\n  fact: unaryPre('!!'),\n  abs: unaryFunction('abs')\n};\n\n// string\nconst string = {\n  like: binary('like'),\n  notLike: binary('not like')\n};\nconst array = {\n  unnest: naryFunction('unnest')\n};\nvar libExpression = {\n  ...value,\n  ...boolean,\n  ...comparison,\n  ...math,\n  ...array,\n  ...dateComparison,\n  ...string\n};\nvar expression = {\n  expressions: libExpression\n};\n\n// parameterizes given argument, function should be attached to ctx\nfunction parameterize$1(arg) {\n  if (arg === undefined) throw Error('Error: parameter is undefined');\n  return `$${this.params.push(arg)}`;\n}\n\n/** Escapes an argument for use in UNPARAMETERIZED queries. NOT SAFE AT ALL. */\nconst escape$1 = arg => {\n  if (arg === undefined) throw Error('Error: parameter is undefined');\n  if (arg === null) return 'null';\n  if (typeof arg === 'string') return escapeLiteral(arg);\n  if (typeof arg === 'number') return '' + arg;\n  if (typeof arg === 'boolean') return '' + arg;\n  if (typeof arg === 'object') {\n    if (Array.isArray(arg)) {\n      return `array[${arg.map(e => escape$1(e)).join(', ')}]`;\n    } else {\n      return escapeLiteral(JSON.stringify(arg));\n    }\n  }\n  throw Error(`Invalid argument SQL argument of type '${typeof arg}'`, arg);\n};\n\n// from https://github.com/brianc/node-postgres/blob/eb076db5d47a29c19d3212feac26cd7b6d257a95/lib/client.js#L351\nconst escapeLiteral = str => {\n  let hasBackslash = false;\n  let escaped = \"'\";\n  for (let i = 0; i < str.length; i++) {\n    const c = str[i];\n    if (c === \"'\") {\n      escaped += c + c;\n    } else if (c === '\\\\') {\n      escaped += c + c;\n      hasBackslash = true;\n    } else {\n      escaped += c;\n    }\n  }\n  escaped += \"'\";\n  if (hasBackslash === true) {\n    escaped = ' E' + escaped;\n  }\n  return escaped;\n};\nvar parameterize_1 = {\n  parameterize: parameterize$1,\n  escape: escape$1\n};\nconst {\n  parameterize,\n  escape\n} = parameterize_1;\nvar dialectPostgres = {\n  query: query_1,\n  expression,\n  parameterize,\n  escape\n};\nconst a$1 = libCore({\n  dialect: dialectPostgres\n});\na$1.from = undefined;\nvar src = a$1;\nvar imageExtensions = [\"ase\", \"art\", \"bmp\", \"blp\", \"cd5\", \"cit\", \"cpt\", \"cr2\", \"cut\", \"dds\", \"dib\", \"djvu\", \"egt\", \"exif\", \"gif\", \"gpl\", \"grf\", \"icns\", \"heic\", \"ico\", \"iff\", \"jng\", \"jpeg\", \"jpg\", \"jfif\", \"jp2\", \"jps\", \"lbm\", \"max\", \"miff\", \"mng\", \"msp\", \"nitf\", \"ota\", \"pbm\", \"pc1\", \"pc2\", \"pc3\", \"pcf\", \"pcx\", \"pdn\", \"pgm\", \"PI1\", \"PI2\", \"PI3\", \"pict\", \"pct\", \"pnm\", \"pns\", \"ppm\", \"psb\", \"psd\", \"pdd\", \"psp\", \"px\", \"pxm\", \"pxr\", \"qfx\", \"raw\", \"rle\", \"sct\", \"sgi\", \"rgb\", \"int\", \"bw\", \"tga\", \"tiff\", \"tif\", \"vtf\", \"xbm\", \"xcf\", \"xpm\", \"3dv\", \"amf\", \"ai\", \"awg\", \"cgm\", \"cdr\", \"cmx\", \"dxf\", \"e2d\", \"egt\", \"eps\", \"fs\", \"gbr\", \"odg\", \"svg\", \"stl\", \"vrml\", \"x3d\", \"sxd\", \"v2d\", \"vnd\", \"wmf\", \"emf\", \"art\", \"xar\", \"png\", \"webp\", \"jxr\", \"hdp\", \"wdp\", \"cur\", \"ecw\", \"iff\", \"lbm\", \"liff\", \"nrrd\", \"pam\", \"pcx\", \"pgf\", \"sgi\", \"rgb\", \"rgba\", \"bw\", \"int\", \"inta\", \"sid\", \"ras\", \"sun\", \"tga\"];\nvar videoExtensions = [\"3g2\", \"3gp\", \"aaf\", \"asf\", \"avchd\", \"avi\", \"drc\", \"flv\", \"m2v\", \"m4p\", \"m4v\", \"mkv\", \"mng\", \"mov\", \"mp2\", \"mp4\", \"mpe\", \"mpeg\", \"mpg\", \"mpv\", \"mxf\", \"nsv\", \"ogg\", \"ogv\", \"qt\", \"rm\", \"rmvb\", \"roq\", \"svi\", \"vob\", \"webm\", \"wmv\", \"yuv\"];\nfunction dbFactory(globals) {\n  const g = globals || _g;\n  const {\n    tokenPost,\n    tokenPostAttachment\n  } = authFactory(g);\n  let _listenerIndex = 0;\n  const _listeners = {};\n  function _runListeners() {\n    for (const cb of Object.values(_listeners)) {\n      cb(...arguments);\n    }\n  }\n  const dbEventListener = callback => {\n    const currKey = '' + _listenerIndex++;\n    _listeners[currKey] = callback;\n    return () => {\n      delete _listeners[currKey];\n    };\n  };\n  const allCallback = async (trx, tableName, userAssociatedRecordsOnly) => {\n    trx.count = \"all\";\n    trx.tableName = tableName;\n    if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n    _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n    try {\n      const res = await tokenPost(POST_TYPES.EASY_QB, trx);\n      if (res.success) {\n        g.analyticsEnabled && g.analyticsEventsToTrack.db_all && g.analyticsEvent('db_all', {\n          tableName: tableName !== \"untable\" ? tableName : undefined,\n          type: trx.type\n        });\n        _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null, res.data);\n        return res.data;\n      } else {\n        _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n        return res;\n      }\n    } catch (error) {\n      console.warn(error);\n      _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n      return [];\n    }\n  };\n  const oneCallback = async (trx, tableName, userAssociatedRecordsOnly) => {\n    trx.count = \"one\";\n    trx.tableName = tableName;\n    if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n    _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n    try {\n      const res = await tokenPost(POST_TYPES.EASY_QB, trx);\n      if (res.success) {\n        g.analyticsEnabled && g.analyticsEventsToTrack.db_one && g.analyticsEvent('db_one', {\n          tableName: tableName !== \"untable\" ? tableName : undefined,\n          type: trx.type\n        });\n        _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null, res.data);\n        return res.data;\n      } else {\n        _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n        return res;\n      }\n    } catch (error) {\n      console.warn(error);\n      _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n      return {};\n    }\n  };\n  const db = (tableName, userAssociatedRecordsOnly) => {\n    if (tableName && typeof tableName === \"string\") {\n      return src({\n        allCallback,\n        oneCallback,\n        userAssociatedRecordsOnly,\n        tableName: tableName.toUpperCase()\n      })(tableName.replace(/[^0-9a-zA-Z]/g, '_').toUpperCase());\n    } else {\n      return src({\n        allCallback,\n        oneCallback,\n        userAssociatedRecordsOnly,\n        tableName: \"untable\"\n      })(\"untable\");\n    }\n  };\n  const _setAttachment = async _ref12 => {\n    let {\n      recordKey,\n      columnName,\n      attachment,\n      tableName,\n      type\n    } = _ref12;\n    const ext = attachment.name.split(\".\").pop().toLowerCase();\n    // Similar pattern as db() naming\n    let fixedTableName;\n    if (tableName && typeof tableName === \"string\") {\n      fixedTableName = tableName.toUpperCase();\n    } else {\n      fixedTableName = \"untable\";\n    }\n    if (type === \"image\" && !imageExtensions.includes(ext)) {\n      return {\n        success: false,\n        message: \"Image files must have a proper image extension in the file name\"\n      };\n    }\n    if (type === \"video\" && !videoExtensions.includes(ext)) {\n      return {\n        success: false,\n        message: \"Video files must have a proper video extension in the file name\"\n      };\n    }\n    const formData = new FormData();\n    formData.append(\"file\", attachment);\n    formData.append(\"name\", attachment.name);\n    const customHeaders = {\n      'Eb-upload-type': type,\n      'Eb-column-name': columnName,\n      'Eb-record-id': recordKey,\n      'Eb-table-name': fixedTableName\n    };\n    try {\n      const res = await tokenPostAttachment(formData, customHeaders);\n      if (res.success) {\n        g.analyticsEnabled && g.analyticsEventsToTrack.db_one && g.analyticsEvent('db_one', {\n          tableName: fixedTableName !== \"untable\" ? fixedTableName : undefined,\n          type: \"update\"\n        });\n        _runListeners(DB_STATUS.SUCCESS, \"update\", EXECUTE_COUNT.ONE, fixedTableName !== \"untable\" ? fixedTableName : null, res.data);\n      } else {\n        _runListeners(DB_STATUS.ERROR, \"update\", EXECUTE_COUNT.ONE, fixedTableName !== \"untable\" ? fixedTableName : null);\n      }\n      return {\n        message: res.data,\n        success: res.success\n      };\n    } catch (error) {\n      console.warn(error);\n      _runListeners(DB_STATUS.ERROR, \"update\", EXECUTE_COUNT.ONE, fixedTableName !== \"untable\" ? fixedTableName : null);\n      return {\n        message: \"\",\n        success: false\n      };\n    }\n  };\n  const setImage = async (recordKey, columnName, image, tableName) => _setAttachment({\n    recordKey,\n    columnName,\n    tableName,\n    attachment: image,\n    type: \"image\"\n  });\n  const setVideo = async (recordKey, columnName, video, tableName) => _setAttachment({\n    recordKey,\n    columnName,\n    tableName,\n    attachment: video,\n    type: \"video\"\n  });\n  const setFile = async (recordKey, columnName, file, tableName) => _setAttachment({\n    recordKey,\n    columnName,\n    tableName,\n    attachment: file,\n    type: \"file\"\n  });\n  return {\n    db,\n    dbEventListener,\n    e: src().e,\n    setImage,\n    setFile,\n    setVideo\n  };\n}\nfunction t() {\n  const t = this[d],\n    e = t.target;\n  let o, r, n;\n  for (e.reverse(), o = 0, r = e.length; o < r; o++) if ((n = e[o]) && \"object\" == typeof n) {\n    const i = n[d];\n    i && (i.ownKey = o);\n  }\n  var s = [new O(h, [], void 0, void 0, this)];\n  return j(t, s), this;\n}\nfunction e(t) {\n  const e = this[d],\n    o = e.target;\n  let r, n, s;\n  for (o.sort(t), r = 0, n = o.length; r < n; r++) if ((s = o[r]) && \"object\" == typeof s) {\n    const i = s[d];\n    i && (i.ownKey = r);\n  }\n  return t = [new O(a, [], void 0, void 0, this)], j(e, t), this;\n}\nfunction o(t, n, s) {\n  const i = this[d],\n    h = i.target,\n    a = [],\n    e = h.length,\n    l = h.slice(0);\n  if (n = void 0 === n ? 0 : n < 0 ? Math.max(e + n, 0) : Math.min(n, e), s = void 0 === s ? e : s < 0 ? Math.max(e + s, 0) : Math.min(s, e), n < e && n < s) {\n    h.fill(t, n, s);\n    let r;\n    for (let t = n, e, o; t < s; t++) e = h[t], h[t] = m(e, t, i), t in l ? (o = l[t], o && \"object\" == typeof o && (r = o[d], r && (o = r.detach())), a.push(new O(v, [t], h[t], o, this))) : a.push(new O(w, [t], h[t], void 0, this));\n    j(i, a);\n  }\n  return this;\n}\nfunction r(n, t, e) {\n  const s = this[d],\n    i = s.target,\n    o = i.length;\n  n = n < 0 ? Math.max(o + n, 0) : n, t = void 0 === t ? 0 : t < 0 ? Math.max(o + t, 0) : Math.min(t, o), e = void 0 === e ? o : e < 0 ? Math.max(o + e, 0) : Math.min(e, o);\n  var h = Math.min(e - t, o - n);\n  if (n < o && n !== t && 0 < h) {\n    const a = i.slice(0),\n      l = [];\n    i.copyWithin(n, t, e);\n    for (let t = n, e, o, r; t < n + h; t++) e = i[t], e && \"object\" == typeof e && (e = m(e, t, s), i[t] = e), o = a[t], o && \"object\" == typeof o && (r = o[d], r && (o = r.detach())), \"object\" != typeof e && e === o || l.push(new O(v, [t], e, o, this));\n    j(s, l);\n  }\n  return this;\n}\nconst w = \"insert\",\n  v = \"update\",\n  g = \"delete\",\n  h = \"reverse\",\n  a = \"shuffle\",\n  d = Symbol.for(\"object-observer-meta-key-0\"),\n  n = {\n    async: 1\n  },\n  s = {\n    observe: {\n      value: function (e, t) {\n        if (\"function\" != typeof e) throw new Error(`observer MUST be a function, got '${e}'`);\n        const o = this[d].observers;\n        o.some(t => t[0] === e) ? console.warn(\"observer may be bound to an observable only once; will NOT rebind\") : o.push([e, (t => {\n          if (!t || \"object\" != typeof t) return null;\n          const e = {},\n            o = [];\n          for (var [r, n] of Object.entries(t)) if (\"path\" === r) {\n            if (\"string\" != typeof n || \"\" === n) throw new Error('\"path\" option, if/when provided, MUST be a non-empty string');\n            e[r] = n;\n          } else if (\"pathsOf\" === r) {\n            if (t.path) throw new Error('\"pathsOf\" option MAY NOT be specified together with \"path\" option');\n            if (\"string\" != typeof n) throw new Error('\"pathsOf\" option, if/when provided, MUST be a string (MAY be empty)');\n            e[r] = t.pathsOf.split(\".\").filter(Boolean);\n          } else if (\"pathsFrom\" === r) {\n            if (t.path || t.pathsOf) throw new Error('\"pathsFrom\" option MAY NOT be specified together with \"path\"/\"pathsOf\" option/s');\n            if (\"string\" != typeof n || \"\" === n) throw new Error('\"pathsFrom\" option, if/when provided, MUST be a non-empty string');\n            e[r] = n;\n          } else o.push(r);\n          if (o.length) throw new Error(`'${o.join(\", \")}' is/are not a valid observer option/s`);\n          return e;\n        })(t)]);\n      }\n    },\n    unobserve: {\n      value: function () {\n        const o = this[d].observers;\n        let r = o.length;\n        if (r) {\n          let e = arguments.length;\n          if (e) for (; e--;) {\n            let t = r;\n            for (; t--;) o[t][0] === arguments[e] && (o.splice(t, 1), r--);\n          } else o.splice(0);\n        }\n      }\n    }\n  },\n  i = (t, e) => {\n    const o = Object.defineProperties({}, s);\n    o[d] = e;\n    for (const r in t) o[r] = m(t[r], r, e);\n    return o;\n  },\n  l = (e, o) => {\n    var r = e.length;\n    const n = Object.defineProperties(new Array(r), s);\n    n[d] = o;\n    for (let t = 0; t < r; t++) n[t] = m(e[t], t, o);\n    return n;\n  },\n  f = (t, e) => (Object.defineProperties(t, s), t[d] = e, t),\n  c = (t, e) => {\n    if (!t) return e;\n    let o = e;\n    if (t.path) {\n      const r = t.path;\n      o = e.filter(t => t.path.join(\".\") === r);\n    } else if (t.pathsOf) {\n      const n = t.pathsOf,\n        s = n.join(\".\");\n      o = e.filter(t => (t.path.length === n.length + 1 || t.path.length === n.length && (t.type === h || t.type === a)) && t.path.join(\".\").startsWith(s));\n    } else if (t.pathsFrom) {\n      const i = t.pathsFrom;\n      o = e.filter(t => t.path.join(\".\").startsWith(i));\n    }\n    return o;\n  },\n  p = (e, o) => {\n    try {\n      e(o);\n    } catch (t) {\n      console.error(`failed to notify listener ${e} with ` + o, t);\n    }\n  },\n  u = function () {\n    var t,\n      e,\n      o = this.batches;\n    this.batches = null;\n    for ([t, e] of o) p(t, e);\n  },\n  j = (t, e) => {\n    let o = t,\n      r,\n      n,\n      s,\n      i,\n      h;\n    var a = e.length;\n    do {\n      for (r = o.observers, h = r.length; h--;) if ([n, s] = r[h], (i = c(s, e)).length) if (o.options.async) {\n        o.batches || (o.batches = [], queueMicrotask(u.bind(o)));\n        let t;\n        for (const l of o.batches) if (l[0] === n) {\n          t = l;\n          break;\n        }\n        t || (t = [n, []], o.batches.push(t)), Array.prototype.push.apply(t[1], i);\n      } else p(n, i);\n      if (o.parent) {\n        const f = new Array(a);\n        for (let t = 0; t < a; t++) f[t] = {\n          ...e[t]\n        }, f[t].path = [o.ownKey, ...f[t].path];\n        e = f, o = o.parent;\n      } else o = null;\n    } while (o);\n  },\n  m = (t, e, o) => t && \"object\" == typeof t ? Array.isArray(t) ? new A({\n    target: t,\n    ownKey: e,\n    parent: o\n  }).proxy : ArrayBuffer.isView(t) ? new K({\n    target: t,\n    ownKey: e,\n    parent: o\n  }).proxy : t instanceof Date ? t : new M({\n    target: t,\n    ownKey: e,\n    parent: o\n  }).proxy : t,\n  y = {\n    pop: function () {\n      const t = this[d],\n        e = t.target,\n        o = e.length - 1;\n      let r = e.pop();\n      if (r && \"object\" == typeof r) {\n        const s = r[d];\n        s && (r = s.detach());\n      }\n      var n = [new O(g, [o], void 0, r, this)];\n      return j(t, n), r;\n    },\n    push: function () {\n      const e = this[d],\n        o = e.target,\n        r = arguments.length,\n        n = new Array(r),\n        s = o.length;\n      for (let t = 0; t < r; t++) n[t] = m(arguments[t], s + t, e);\n      var t = Reflect.apply(o.push, o, n);\n      const i = [];\n      for (let t = s, e = o.length; t < e; t++) i[t - s] = new O(w, [t], o[t], void 0, this);\n      return j(e, i), t;\n    },\n    shift: function () {\n      const t = this[d],\n        e = t.target;\n      let o, r, n, s, i;\n      for (o = e.shift(), o && \"object\" == typeof o && (i = o[d], i && (o = i.detach())), r = 0, n = e.length; r < n; r++) (s = e[r]) && \"object\" == typeof s && (i = s[d], i && (i.ownKey = r));\n      var h = [new O(g, [0], void 0, o, this)];\n      return j(t, h), o;\n    },\n    unshift: function () {\n      const e = this[d],\n        r = e.target,\n        o = arguments.length,\n        n = new Array(o);\n      for (let t = 0; t < o; t++) n[t] = m(arguments[t], t, e);\n      var t = Reflect.apply(r.unshift, r, n);\n      for (let t = 0, e = r.length, o; t < e; t++) if ((o = r[t]) && \"object\" == typeof o) {\n        const h = o[d];\n        h && (h.ownKey = t);\n      }\n      var s = n.length;\n      const i = new Array(s);\n      for (let t = 0; t < s; t++) i[t] = new O(w, [t], r[t], void 0, this);\n      return j(e, i), t;\n    },\n    reverse: t,\n    sort: e,\n    fill: o,\n    copyWithin: r,\n    splice: function () {\n      const e = this[d],\n        o = e.target,\n        r = arguments.length,\n        n = new Array(r),\n        t = o.length;\n      for (let t = 0; t < r; t++) n[t] = m(arguments[t], t, e);\n      const s = 0 === r ? 0 : n[0] < 0 ? t + n[0] : n[0],\n        i = r < 2 ? t - s : n[1],\n        h = Math.max(r - 2, 0),\n        a = Reflect.apply(o.splice, o, n),\n        l = o.length;\n      let f;\n      for (let t = 0, e; t < l; t++) (e = o[t]) && \"object\" == typeof e && (f = e[d], f && (f.ownKey = t));\n      let c, p, u;\n      for (c = 0, p = a.length; c < p; c++) (u = a[c]) && \"object\" == typeof u && (f = u[d], f && (a[c] = f.detach()));\n      const y = [];\n      let b;\n      for (b = 0; b < i; b++) b < h ? y.push(new O(v, [s + b], o[s + b], a[b], this)) : y.push(new O(g, [s + b], void 0, a[b], this));\n      for (; b < h; b++) y.push(new O(w, [s + b], o[s + b], void 0, this));\n      return j(e, y), a;\n    }\n  },\n  b = {\n    reverse: t,\n    sort: e,\n    fill: o,\n    copyWithin: r,\n    set: function (t, e) {\n      const o = this[d],\n        r = o.target,\n        n = t.length,\n        s = r.slice(0);\n      e = e || 0, r.set(t, e);\n      const i = new Array(n);\n      for (let t = e; t < n + e; t++) i[t - e] = new O(v, [t], r[t], s[t], this);\n      j(o, i);\n    }\n  };\nclass O {\n  constructor(t, e, o, r, n) {\n    this.type = t, this.path = e, this.value = o, this.oldValue = r, this.object = n;\n  }\n}\nclass x {\n  constructor(t, e) {\n    var {\n      target: o,\n      parent: r,\n      ownKey: n\n    } = t;\n    r && void 0 !== n ? (this.parent = r, this.ownKey = n) : (this.parent = null, this.ownKey = null);\n    o = e(o, this);\n    this.observers = [], this.revocable = Proxy.revocable(o, this), this.proxy = this.revocable.proxy, this.target = o, this.options = this.processOptions(t.options);\n  }\n  processOptions(t) {\n    if (t) {\n      if (\"object\" != typeof t) throw new Error(`Observable options if/when provided, MAY only be an object, got '${t}'`);\n      const e = Object.keys(t).filter(t => !(t in n));\n      if (e.length) throw new Error(`'${e.join(\", \")}' is/are not a valid Observable option/s`);\n      return Object.assign({}, t);\n    }\n    return {};\n  }\n  detach() {\n    return this.parent = null, this.target;\n  }\n  set(t, e, o) {\n    let r = t[e];\n    if (o !== r) {\n      o = m(o, e, this);\n      if (t[e] = o, r && \"object\" == typeof r) {\n        const n = r[d];\n        n && (r = n.detach());\n      }\n      o = void 0 === r ? [new O(w, [e], o, void 0, this.proxy)] : [new O(v, [e], o, r, this.proxy)];\n      j(this, o);\n    }\n    return !0;\n  }\n  deleteProperty(t, e) {\n    let o = t[e];\n    if (delete t[e], o && \"object\" == typeof o) {\n      const r = o[d];\n      r && (o = r.detach());\n    }\n    e = [new O(g, [e], void 0, o, this.proxy)];\n    return j(this, e), !0;\n  }\n}\nclass M extends x {\n  constructor(t) {\n    super(t, i);\n  }\n}\nclass A extends x {\n  constructor(t) {\n    super(t, l);\n  }\n  get(t, e) {\n    return y[e] || t[e];\n  }\n}\nclass K extends x {\n  constructor(t) {\n    super(t, f);\n  }\n  get(t, e) {\n    return b[e] || t[e];\n  }\n}\nconst E = Object.freeze({\n  from: (t, e) => {\n    if (t && \"object\" == typeof t) {\n      if (t[d]) return t;\n      if (Array.isArray(t)) return new A({\n        target: t,\n        ownKey: null,\n        parent: null,\n        options: e\n      }).proxy;\n      if (ArrayBuffer.isView(t)) return new K({\n        target: t,\n        ownKey: null,\n        parent: null,\n        options: e\n      }).proxy;\n      if (t instanceof Date) throw new Error(t + \" found to be one of a non-observable types\");\n      return new M({\n        target: t,\n        ownKey: null,\n        parent: null,\n        options: e\n      }).proxy;\n    }\n    throw new Error(\"observable MAY ONLY be created from a non-null object\");\n  },\n  isObservable: t => !(!t || !t[d])\n});\nconst cache = require(\"./cache\");\nlet _isFrameInitialized = true;\nlet _frameConfiguration = {\n  offset: 0,\n  limit: 0\n};\nlet _effect = () => () => {};\nlet _signInCallback;\nconst _observedChangeStack = [];\nlet _recordIdMap = new WeakMap();\nlet _proxyRecordMap = new WeakMap();\nconst EasybaseProvider = _ref13 => {\n  let {\n    children,\n    ebconfig,\n    options\n  } = _ref13;\n  if (typeof ebconfig !== 'object' || ebconfig === null || ebconfig === undefined) {\n    console.error(\"No ebconfig object passed. do `import ebconfig from \\\"./ebconfig.js\\\"` and pass it to the Easybase provider\");\n    return React__default.createElement(Fragment, null, children);\n  } else if (!ebconfig.integration) {\n    console.error(\"Invalid ebconfig object passed. Download ebconfig.json from Easybase.io and try again.\");\n    return React__default.createElement(Fragment, null, children);\n  }\n  const [mounted, setMounted] = useState(false);\n  const [isSyncing, setIsSyncing] = useState(false);\n  const [userSignedIn, setUserSignedIn] = useState(false);\n  const [_frame, _setFrame] = useState([]);\n  const [_observableFrame, _setObservableFrame] = useState({\n    observe: () => {},\n    unobserve: () => {}\n  });\n  const _ranSignInCallback = useRef(false); // TODO: useRef vs useState({})\n\n  const g = useRef(gFactory({\n    ebconfig,\n    options\n  })).current;\n  const {\n    initAuth,\n    tokenPost,\n    tokenPostAttachment,\n    signUp,\n    setUserAttribute,\n    getUserAttributes,\n    resetUserPassword,\n    signIn,\n    signOut,\n    forgotPassword,\n    forgotPasswordConfirm,\n    userID\n  } = useRef(authFactory(g)).current;\n  const {\n    log\n  } = useRef(utilsFactory(g)).current;\n  const {\n    Query,\n    fullTableSize,\n    tableTypes\n  } = useRef(tableFactory(g)).current;\n  const {\n    db,\n    dbEventListener,\n    e,\n    setFile,\n    setImage,\n    setVideo\n  } = useRef(dbFactory(g)).current;\n  useEffect(() => {\n    const mount = async () => {\n      // eslint-disable-next-line dot-notation\n      const isIE = typeof document !== 'undefined' && !!document['documentMode'];\n      if (isIE) {\n        console.error(\"EASYBASE â€” easybase-react does not support Internet Explorer. Please use a different browser.\");\n      }\n      g.instance = typeof navigator !== 'undefined' && navigator.product === 'ReactNative' ? \"React Native\" : \"React\";\n      if (options != null && options.googleAnalyticsId) {\n        if (options.googleAnalyticsId.startsWith(\"G-\")) {\n          if (g.instance === \"React\") {\n            const {\n              GA4React\n            } = await import('./ga-4-react.esm-a020cb83.js');\n            const ga4ReactLoader = new GA4React(options.googleAnalyticsId);\n            try {\n              const ga4React = await ga4ReactLoader.initialize();\n              g.analyticsEvent = (eventTitle, params) => ga4React.gtag('event', eventTitle, params);\n              g.analyticsIdentify = hashedUserId => ga4React.gtag('config', options.googleAnalyticsId, {\n                user_id: hashedUserId\n              });\n              g.analyticsEnabled = true;\n              if (window.location.hash) {\n                // Using hash router - https://github.com/unrealmanu/ga-4-react/issues/15\n                window.onhashchange = () => {\n                  ga4React.pageview(window.location.hash);\n                };\n              }\n            } catch (error) {\n              log(\"Analytics initialization error: \", error);\n            }\n          } else if (g.instance === \"React Native\") {\n            if (options.googleAnalyticsSecret) {\n              const genUUID = () => {\n                // https://www.w3resource.com/javascript-exercises/javascript-math-exercise-23.php\n                let dt = new Date().getTime();\n                const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                  const r = (dt + Math.random() * 16) % 16 | 0;\n                  dt = Math.floor(dt / 16);\n                  return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n                });\n                return uuid;\n              };\n              let _userIdHash;\n              const _mockDeviceId = genUUID(); // Mocking a 'pageview'\n\n              fetch(`https://www.google-analytics.com/mp/collect?measurement_id=${options.googleAnalyticsId}&api_secret=${options.googleAnalyticsSecret}`, {\n                method: \"POST\",\n                body: JSON.stringify({\n                  client_id: _mockDeviceId,\n                  events: [{\n                    name: 'select_content'\n                  }]\n                })\n              });\n              g.analyticsEvent = (eventTitle, params) => fetch(`https://www.google-analytics.com/mp/collect?measurement_id=${options.googleAnalyticsId}&api_secret=${options.googleAnalyticsSecret}`, {\n                method: \"POST\",\n                body: JSON.stringify({\n                  client_id: _mockDeviceId,\n                  user_id: _userIdHash,\n                  events: [{\n                    name: eventTitle,\n                    params\n                  }]\n                })\n              });\n              g.analyticsIdentify = hashedUserId => {\n                _userIdHash = hashedUserId;\n              };\n              g.analyticsEnabled = true;\n            } else {\n              console.error(\"EASYBASE â€” React Native analytics requires the presence of 'googleAnalyticsSecret'. To create a new secret, navigate in the Google Analytics UI to: Admin > Data Streams > choose your stream > Measurement Protocol > Create\");\n            }\n          }\n        } else if (options.googleAnalyticsId.startsWith(\"UA-\")) {\n          console.error(\"EASYBASE â€” Detected Universal Analytics tag in googleAnalyticsId parameter. This version is not supported â€“Â please update to Google Analytics 4.\\nhttps://support.google.com/analytics/answer/9744165?hl=en\");\n        } else {\n          console.error(\"EASYBASE â€” Unknown googleAnalyticsId version parameter. Please use Google Analytics 4.\\nhttps://support.google.com/analytics/answer/9744165?hl=en\");\n        }\n      }\n      if (g.ebconfig.tt && g.ebconfig.integration.split(\"-\")[0].toUpperCase() !== \"PROJECT\") {\n        const t1 = Date.now();\n        log(\"mounting...\");\n        await initAuth();\n        const res = await tokenPost(POST_TYPES$1.VALID_TOKEN);\n        const elapsed = Date.now() - t1;\n        if (res.success) {\n          log(\"Valid auth initiation in \" + elapsed + \"ms\");\n          setMounted(true);\n        }\n      } else {\n        g.mounted = true; // Bypass initAuth()\n\n        const cookieName = g.ebconfig.integration.slice(-10);\n        const {\n          cacheToken,\n          cacheRefreshToken,\n          cacheSession\n        } = await cache.getCacheTokens(cookieName);\n        if (cacheRefreshToken) {\n          g.token = cacheToken;\n          g.refreshToken = cacheRefreshToken;\n          g.session = +cacheSession;\n          const fallbackMount = setTimeout(() => {\n            setMounted(true);\n          }, 2500);\n          const [refreshTokenRes, {\n            hash\n          }, {\n            fromUtf8\n          }] = await Promise.all([tokenPost(POST_TYPES$1.REQUEST_TOKEN, {\n            refreshToken: g.refreshToken,\n            token: g.token,\n            getUserID: true\n          }), import('./sha256-e0894fe4.js').then(function (n) {\n            return n.s;\n          }), import('./index-10b0f241.js')]);\n          if (refreshTokenRes.success) {\n            clearTimeout(fallbackMount);\n            g.token = refreshTokenRes.data.token;\n            g.userID = refreshTokenRes.data.userID;\n            if (g.analyticsEnabled && g.analyticsEventsToTrack.login) {\n              const hashOut = hash(fromUtf8(g.GA_USER_ID_SALT + refreshTokenRes.data.userID));\n              const hexHash = Array.prototype.map.call(hashOut, x => ('00' + x.toString(16)).slice(-2)).join('');\n              g.analyticsIdentify(hexHash);\n              g.analyticsEvent('login', {\n                method: \"Easybase\"\n              });\n            }\n            await cache.setCacheTokens(g, cookieName);\n            setUserSignedIn(true);\n          } else {\n            cache.clearCacheTokens(cookieName);\n          }\n        }\n        setMounted(true);\n      }\n    };\n    mount();\n  }, []);\n  const useFrameEffect = effect => {\n    _effect = effect;\n  };\n  useEffect(() => {\n    if (userSignedIn === true && _ranSignInCallback.current === false && _signInCallback !== undefined) {\n      _signInCallback();\n      _ranSignInCallback.current = true;\n    }\n  }, [userSignedIn]);\n  const onSignIn = callback => {\n    _signInCallback = callback;\n    if (userSignedIn === true && _ranSignInCallback.current === false && _signInCallback !== undefined) {\n      _signInCallback();\n      _ranSignInCallback.current = true;\n    }\n  };\n  useEffect(() => {\n    _observableFrame.observe(allChanges => {\n      allChanges.forEach(change => {\n        _observedChangeStack.push({\n          type: change.type,\n          path: change.path,\n          value: change.value,\n          _id: _recordIdMap.get(_frame[Number(change.path[0])]) // Not bringing change.object or change.oldValue\n        });\n\n        log(JSON.stringify({\n          type: change.type,\n          path: change.path,\n          value: change.value,\n          _id: _recordIdMap.get(_frame[Number(change.path[0])]) // Not bringing change.object or change.oldValue\n        }));\n      });\n    });\n\n    _proxyRecordMap = new WeakMap();\n    _frame.forEach((_, i) => _proxyRecordMap.set(_observableFrame[i], \"\" + i));\n    _effect(); // call useFrameEffect\n  }, [_observableFrame]);\n  useEffect(() => {\n    _observableFrame.unobserve();\n    _setObservableFrame(E.from(_frame));\n  }, [_frame]);\n  function Frame(index) {\n    if (typeof index === \"number\") {\n      return _observableFrame[index];\n    } else {\n      return _observableFrame;\n    }\n  }\n  const _recordIDExists = record => !!_recordIdMap.get(record) || !!_recordIdMap.get(_getRawRecordFromProxy(record) || {});\n  const _getRawRecordFromProxy = proxyRecord => _proxyRecordMap.get(proxyRecord) ? _frame[+_proxyRecordMap.get(proxyRecord)] : undefined;\n  const configureFrame = options => {\n    _frameConfiguration = _extends({}, _frameConfiguration);\n    if (options.limit !== undefined) _frameConfiguration.limit = options.limit;\n    if (options.offset !== undefined && options.offset >= 0) _frameConfiguration.offset = options.offset;\n    if (options.tableName !== undefined) _frameConfiguration.tableName = options.tableName;\n    _isFrameInitialized = false;\n    return {\n      message: \"Successfully configured frame. Run sync() for changes to be shown in frame\",\n      success: true\n    };\n  };\n  const currentConfiguration = () => _extends({}, _frameConfiguration);\n  const addRecord = async options => {\n    const defaultValues = {\n      insertAtEnd: false,\n      newRecord: {},\n      tableName: undefined\n    };\n    const fullOptions = _extends({}, defaultValues, options);\n    try {\n      const res = await tokenPost(POST_TYPES$1.SYNC_INSERT, fullOptions);\n      return {\n        message: res.data,\n        success: res.success\n      };\n    } catch (err) {\n      console.error(\"Easybase Error: addRecord failed \", err);\n      return {\n        message: \"Easybase Error: addRecord failed \" + err,\n        success: false,\n        errorCode: err\n      };\n    }\n  };\n  const deleteRecord = async options => {\n    const _frameRecord = _getRawRecordFromProxy(options.record) || _frame.find(ele => fastDeepEqual(ele, options.record));\n    if (_frameRecord && _recordIdMap.get(_frameRecord)) {\n      const res = await tokenPost(POST_TYPES$1.SYNC_DELETE, {\n        _id: _recordIdMap.get(_frameRecord),\n        tableName: options.tableName\n      });\n      return {\n        success: res.success,\n        message: res.data\n      };\n    } else {\n      try {\n        const res = await tokenPost(POST_TYPES$1.SYNC_DELETE, {\n          record: options.record,\n          tableName: options.tableName\n        });\n        return {\n          success: res.success,\n          message: res.data\n        };\n      } catch (error) {\n        console.error(\"Easybase Error: deleteRecord failed \", error);\n        return {\n          success: false,\n          message: \"Easybase Error: deleteRecord failed \" + error,\n          errorCode: error.errorCode || undefined\n        };\n      }\n    }\n  }; // Only allow the deletion of one element at a time\n  // First handle shifting of the array size. Then iterate\n\n  const sync = async () => {\n    const _realignFrames = newData => {\n      let isNewDataTheSame = true;\n      if (newData.length !== _frame.length) {\n        isNewDataTheSame = false;\n      } else {\n        for (let i = 0; i < newData.length; i++) {\n          const newDataNoId = _extends({}, newData[i]);\n          delete newDataNoId._id;\n          if (!fastDeepEqual(newDataNoId, _frame[i])) {\n            isNewDataTheSame = false;\n            break;\n          }\n        }\n      }\n      if (!isNewDataTheSame) {\n        _recordIdMap = new WeakMap();\n        _frame.length = newData.length;\n        newData.forEach((currNewEle, i) => {\n          _frame[i] = currNewEle;\n          _recordIdMap.set(currNewEle, currNewEle._id);\n          delete currNewEle._id;\n        });\n        _setFrame([..._frame]);\n      }\n    };\n    if (isSyncing) {\n      return {\n        success: false,\n        message: \"Easybase Error: the provider is currently syncing, use 'await sync()' before calling sync() again\"\n      };\n    }\n    setIsSyncing(true);\n    if (_isFrameInitialized) {\n      if (_observedChangeStack.length > 0) {\n        log(\"Stack change: \", _observedChangeStack);\n        const res = await tokenPost(POST_TYPES$1.SYNC_STACK, _extends({\n          stack: _observedChangeStack\n        }, _frameConfiguration));\n        if (res.success) {\n          _observedChangeStack.length = 0;\n        }\n      }\n    }\n    try {\n      const res = await tokenPost(POST_TYPES$1.GET_FRAME, _frameConfiguration); // Check if the array received from db is the same as frame\n      // If not, update it and send useFrameEffect\n\n      if (res.success === false) {\n        console.error(res.data);\n        setIsSyncing(false);\n        return {\n          success: false,\n          message: \"\" + res.data\n        };\n      } else {\n        _isFrameInitialized = true;\n        _realignFrames(res.data);\n        setIsSyncing(false);\n        return {\n          message: 'Success. Call frame for data',\n          success: true\n        };\n      }\n    } catch (error) {\n      console.error(\"Easybase Error: get failed \", error);\n      setIsSyncing(false);\n      return {\n        success: false,\n        message: \"Easybase Error: get failed \" + error,\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n  const updateRecordImage = async options => {\n    const res = await _updateRecordAttachment(options, \"image\");\n    return res;\n  };\n  const updateRecordVideo = async options => {\n    const res = await _updateRecordAttachment(options, \"video\");\n    return res;\n  };\n  const updateRecordFile = async options => {\n    const res = await _updateRecordAttachment(options, \"file\");\n    return res;\n  };\n  const _updateRecordAttachment = async (options, type) => {\n    const _frameRecord = _getRawRecordFromProxy(options.record) || _frame.find(ele => fastDeepEqual(ele, options.record));\n    if (_frameRecord === undefined || !_recordIDExists(_frameRecord)) {\n      log(\"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\");\n      return {\n        success: false,\n        message: \"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\"\n      };\n    }\n    const ext = options.attachment.name.split(\".\").pop().toLowerCase();\n    log(ext);\n    if (type === \"image\" && !imageExtensions$1.includes(ext)) {\n      return {\n        success: false,\n        message: \"Image files must have a proper image extension in the file name\"\n      };\n    }\n    if (type === \"video\" && !videoExtensions$1.includes(ext)) {\n      return {\n        success: false,\n        message: \"Video files must have a proper video extension in the file name\"\n      };\n    }\n    function isFileFromURI(f) {\n      return f.uri !== undefined;\n    }\n    const formData = new FormData();\n    if (isFileFromURI(options.attachment)) {\n      formData.append(\"file\", options.attachment);\n      formData.append(\"name\", options.attachment.name);\n    } else {\n      formData.append(\"file\", options.attachment);\n      formData.append(\"name\", options.attachment.name);\n    }\n    const customHeaders = {\n      'Eb-upload-type': type,\n      'Eb-column-name': options.columnName,\n      'Eb-record-id': _recordIdMap.get(_frameRecord),\n      'Eb-table-name': options.tableName\n    };\n    const res = await tokenPostAttachment(formData, customHeaders);\n    await sync();\n    return {\n      message: res.data,\n      success: res.success\n    };\n  };\n  const isUserSignedIn = () => userSignedIn;\n  g.newTokenCallback = () => {\n    const cookieName = g.ebconfig.integration.slice(-10);\n    if (!g.token) {\n      // User signed out\n      cache.clearCacheTokens(cookieName).then(_ => {\n        setUserSignedIn(false);\n        _ranSignInCallback.current = false;\n      });\n    } else {\n      // User signed in or refreshed token\n      cache.setCacheTokens(g, cookieName).then(_ => {\n        setUserSignedIn(true);\n      });\n    }\n  };\n  const useReturn = (dbInstance, deps) => {\n    // eslint-disable-next-line no-extra-parens\n    const [unsubscribe, setUnsubscribe] = useState(() => () => {});\n    const [frame, setFrame] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [dead, setDead] = useState(false);\n    const doFetch = async () => {\n      setLoading(true);\n      try {\n        const res = await dbInstance().all();\n        if (Array.isArray(res)) {\n          setFrame(res);\n        }\n      } catch (error) {\n        setError(error);\n      }\n      setLoading(false);\n    };\n    useEffect(() => {\n      let isAlive = true;\n      if (!dead) {\n        const _instanceTableName = dbInstance()._tableName;\n        unsubscribe(\"true\");\n        const _listener = dbEventListener((status, queryType, executeCount, tableName, returned) => {\n          if (!isAlive) {\n            return;\n          }\n          log(_instanceTableName, status, queryType, executeCount, tableName);\n          if (tableName === null && _instanceTableName === \"untable\" || tableName === _instanceTableName) {\n            if (status === DB_STATUS$1.SUCCESS && queryType !== \"select\") {\n              if (typeof returned === \"number\" && returned > 0) {\n                doFetch();\n              } else if (Array.isArray(returned) && typeof returned[0] === \"number\" && returned[0] > 0) {\n                doFetch();\n              }\n            }\n          }\n        });\n        setUnsubscribe(() => stayAlive => {\n          _listener();\n          stayAlive !== \"true\" && setDead(true);\n        });\n        doFetch();\n      }\n      return () => {\n        isAlive = false;\n      };\n    }, deps || []);\n    return {\n      frame,\n      unsubscribe,\n      error,\n      manualFetch: doFetch,\n      loading\n    };\n  };\n  const c = {\n    configureFrame,\n    addRecord,\n    deleteRecord,\n    sync,\n    updateRecordImage,\n    updateRecordVideo,\n    updateRecordFile,\n    Frame,\n    useFrameEffect,\n    fullTableSize,\n    tableTypes,\n    currentConfiguration,\n    Query,\n    signIn,\n    signOut,\n    isUserSignedIn,\n    signUp,\n    setUserAttribute,\n    getUserAttributes,\n    resetUserPassword,\n    onSignIn,\n    db,\n    dbEventListener,\n    e,\n    setFile,\n    setImage,\n    setVideo,\n    useReturn,\n    forgotPassword,\n    forgotPasswordConfirm,\n    userID\n  };\n  return React__default.createElement(EasybaseContext.Provider, {\n    value: c\n  }, mounted && children);\n};\nconst useEasybase = () => {\n  const easybase = useContext(EasybaseContext);\n  return easybase;\n};\nconst Auth = lazy(() => import('./Auth-25393280.js').then(function (n) {\n  return n.A;\n}));\nfunction index(props) {\n  return React__default.createElement(Suspense, {\n    fallback: React__default.createElement(Fragment, null)\n  }, React__default.createElement(Auth, Object.assign({}, props)));\n}\n/**\r\n * Note that this wrapper component exists to force code-splitting\r\n */\n\nexport { EasybaseProvider as E, _extends as _, commonjsGlobal as a, createCommonjsModule as c, getDefaultExportFromCjs as g, index as i, useEasybase as u };","map":{"version":3,"mappings":"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","names":["Frame","index","c","configureFrame","_","addRecord","deleteRecord","sync","updateRecordImage","updateRecordVideo","updateRecordFile","useFrameEffect","fullTableSize","tableTypes","currentConfiguration","Query","getUserAttributes","isUserSignedIn","setUserAttribute","_2","resetUserPassword","signIn","signOut","signUp","_3","onSignIn","db","dbEventListener","useReturn","e","setFile","_4","setImage","setVideo","forgotPassword","forgotPasswordConfirm","userID","undefined","createContext","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","POST_TYPES","DB_STATUS","EXECUTE_COUNT","GlobalNamespace","_g","gFactory","ebconfig","options","optionsObj","gaTrackingObj","googleAnalyticsEventTracking","defaultG","GA_USER_ID_SALT","analyticsEventsToTrack","login","sign_up","forgot_password","forgot_password_confirm","reset_user_password","utilsFactory","globals","g","generateBareUrl","type","integrationID","generateAuthBody","stamp","Date","now","token","token_time","session","log","logging","params","console","global","self","this","__self__","F","fetch","DOMException","exports","support","searchParams","iterable","Symbol","blob","Blob","formData","arrayBuffer","isDataView","obj","DataView","isPrototypeOf","viewClasses","isArrayBufferView","ArrayBuffer","isView","indexOf","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","Headers","headers","map","forEach","append","header","getOwnPropertyNames","oldValue","get","has","set","callback","thisArg","push","values","entries","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","fromCharCode","join","bufferClone","slice","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","Error","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","url","credentials","mode","signal","referrer","clone","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","module","authFactory","_clearTokens","refreshToken","newTokenCallback","attrsRes","tokenPost","USER_ATTRIBUTES","analyticsEnabled","get_user_attributes","analyticsEvent","data","setAttrsRes","SET_ATTRIBUTE","set_user_attribute","success","stringify","errorCode","username","emailTemplate","FORGOT_PASSWORD_SEND","code","newPassword","FORGOT_PASSWORD_CONFIRM","newUserID","password","userAttributes","signUpRes","SIGN_UP","t1","Math","floor","random","integrationType","integration","res","HANDSHAKE","version","instance","resData","mounted","validTokenRes","hash","fromUtf8","all","VALID_TOKEN","elapsed","hashOut","hexHash","x","analyticsIdentify","ErrorCode","currentPassword","RESET_PASSWORD","initAuth","tt","postType","_auth","req_res","REQUEST_TOKEN","tokenPostAttachment","customHeaders","regularAuthbody","attachmentAuth","UPLOAD_ATTACHMENT","tableFactory","defaultOptions","queryName","fullOptions","GET_QUERY","query","tableName","TABLE_SIZE","full_table_size","COLUMN_TYPES","table_types","createNewContext","defaultContext","parameterize","escape","mapKey","build","inherit","unparameterized","whr","target","separator","sql","ret","frm","grp","hav","setop","ord","with","createQueryBuilder","config","queries","properties","newContext","reducers","createReducers","updateContext","applyReducers","extend","args","arr","builder","chain","createChain","executeProperties","one","oneCallback","userAssociatedRecordsOnly","allCallback","_tableName","_methodProperties","methodProperties","from","defineProperties","builderProperties","fn","prev","setPrototypeOf","express","id","_build","inheritedContext","getter","isTaggedTemplate","strings","raw","buildTaggedTemplate","txt","require$$0","isObject","arg","buildCall","callbackfn","mapJoin","mapJoinWrap","close","objectMapJoin","object","memoize","cache","normalKey","given_key","buildUtils","changeCase","taggedTemplate","createExpressionCompiler","expressionTable","callsCompiler","createCallsCompiler","current","calls","buildCalls","expression","expressions","last","pushCall","array","tag","exp","minArgs","maxArgs","numArgs","aggregator","op","columnName","compile","max","min","avg","count","sum","createSqorn","dialect","createExpressionBuilder","sq","withRecursive","recursive","where","return","distinct","groupBy","having","union","unionAll","intersect","intersectAll","except","exceptAll","orderBy","limit","offset","leftJoin","rightJoin","fullJoin","crossJoin","naturalJoin","naturalLeftJoin","naturalRightJoin","naturalFullJoin","on","using","delete","insert","uniqueKeys","columns","j","buildArg","buildObject","buildProperty","valuesArray","buildDistinct","valuesList","start","end","item","fromItem","conditions","usingArg","fromArg","fromItems","buildArrayArg","buildCubeOrRollupArg","buildCubeOrRollupArrayArg","first","by","sort","nulls","limitOffset","table","buildValuesArray","wth","select","require$$1","require$$2","require$$3","group","require$$4","require$$5","require$$6","order","require$$7","require$$8","require$$9","del","require$$10","returning","require$$11","require$$12","update","require$$13","require$$14","clauses","clause","str","userType","common","postgresMethods","distinctOn","updateFrom","rollup","cube","groupingSets","dateToYYYYMMDD","d","getFullYear","getMonth","getDate","unaryPre","unaryPost","unaryFunction","binary","dateBinary","inDate","ternary","op1","op2","nary","Number","MAX_SAFE_INTEGER","naryFunction","oneValue","compositeValue","buildValuesList","membership","arg1","arg2","quantifiedComparison","row","unknown","boolean","number","string","and","or","not","isTrue","isNotTrue","isFalse","isNotFalse","isUnknown","isNotUnknown","comparison","eq","neq","lt","gt","lte","gte","between","isDistinctFrom","isNotDistinctFrom","isNull","isNotNull","in","notIn","eqAny","neqAny","ltAny","gtAny","lteAny","gteAny","eqAll","neqAll","ltAll","gtAll","lteAll","gteAll","dateComparison","dateLt","dateGt","dateLte","dateGte","math","add","sub","mul","div","mod","sqrt","cbrt","fact","abs","like","notLike","unnest","escapeLiteral","hasBackslash","escaped","core","dbFactory","_listenerIndex","_listeners","_runListeners","cb","currKey","trx","PENDING","ALL","EASY_QB","db_all","SUCCESS","ERROR","warn","ONE","db_one","easyqb","_setAttachment","recordKey","attachment","ext","pop","fixedTableName","imageExtensions","includes","videoExtensions","image","video","file","t","o","r","n","reverse","ownKey","s","O","h","l","fill","m","detach","v","w","copyWithin","for","async","observe","observers","some","path","pathsOf","filter","Boolean","unobserve","arguments","splice","f","startsWith","pathsFrom","p","u","batches","queueMicrotask","bind","apply","parent","A","proxy","K","M","y","Reflect","unshift","revocable","Proxy","processOptions","assign","deleteProperty","E","freeze","isObservable","require","_isFrameInitialized","_frameConfiguration","_effect","_signInCallback","_observedChangeStack","_recordIdMap","WeakMap","_proxyRecordMap","EasybaseProvider","children","React","Fragment","setMounted","useState","isSyncing","setIsSyncing","userSignedIn","setUserSignedIn","_frame","_setFrame","_observableFrame","_setObservableFrame","_ranSignInCallback","useRef","useEffect","mount","isIE","document","navigator","product","googleAnalyticsId","GA4React","ga4ReactLoader","ga4React","initialize","eventTitle","gtag","hashedUserId","user_id","window","onhashchange","pageview","googleAnalyticsSecret","genUUID","dt","getTime","uuid","_userIdHash","_mockDeviceId","client_id","events","cookieName","cacheToken","cacheRefreshToken","cacheSession","getCacheTokens","fallbackMount","setTimeout","refreshTokenRes","getUserID","clearTimeout","setCacheTokens","clearCacheTokens","effect","allChanges","change","_id","Observable","_recordIDExists","record","_getRawRecordFromProxy","proxyRecord","defaultValues","insertAtEnd","newRecord","SYNC_INSERT","_frameRecord","find","ele","deepEqual","SYNC_DELETE","_realignFrames","newData","isNewDataTheSame","newDataNoId","currNewEle","SYNC_STACK","GET_FRAME","_updateRecordAttachment","isFileFromURI","uri","dbInstance","deps","unsubscribe","setUnsubscribe","frame","setFrame","setError","loading","setLoading","dead","setDead","doFetch","isAlive","_instanceTableName","_listener","queryType","executeCount","returned","stayAlive","manualFetch","EasybaseContext","Provider","useEasybase","easybase","useContext","Auth","lazy","props","Suspense","fallback"],"sources":["/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/src/EasybaseContext.tsx","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/fast-deep-equal/index.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/src/types/types.tsx","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easybasejs/src/EasybaseProvider/g.ts","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easybasejs/src/EasybaseProvider/utils.ts","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easybasejs/src/EasybaseProvider/types.ts","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/cross-fetch/dist/browser-ponyfill.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easybasejs/src/EasybaseProvider/auth.ts","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easybasejs/src/EasybaseProvider/table.ts","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/builder-sq/context.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/builder-sq/index.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-util/tagged_template.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-util/build_utils.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-util/change_case.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-util/index.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/builder-expression/compile.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/builder-expression/index.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-core/index.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/methods.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/common/values_array.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/with.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/common/expressions.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/select.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/common/conditions.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/common/from_items.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/from.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/where.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/group.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/having.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/setop.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/order.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/common/limit_offset.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/limit.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/offset.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/delete.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/returning.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/insert.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/update.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/set.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/clauses/index.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/query.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/common/index.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-sq/index.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/dialect-postgres/query.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-expression/util.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/lib-expression/index.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/dialect-postgres/expression.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/dialect-postgres/parameterize.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/dialect-postgres/index.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easyqb/src/index.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/easybasejs/src/EasybaseProvider/db.ts","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/node_modules/object-observer/dist/object-observer.min.js","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/src/EasybaseProvider.tsx","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/src/useEasybase.tsx","/home/sol/Documentos/AUS/3ro segundo cuatri/ing 2/URV/front/node_modules/easybase-react/src/ui/Auth/index.tsx"],"sourcesContent":["import { createContext } from \"react\";\nimport {\n    ContextValue,\n    UseReturnValue,\n    ConfigureFrameOptions,\n    StatusResponse,\n    AddRecordOptions,\n    UpdateRecordAttachmentOptions,\n    FrameConfiguration,\n    QueryOptions,\n    EmailTemplate,\n    FileFromURI\n} from \"./types/types\";\nimport { SQW } from \"easyqb/types/sq\";\nimport { NewExpression } from \"easyqb/types/expression\";\n\nfunction Frame(): Record<string, any>[];\nfunction Frame(index: number): Record<string, any>;\nfunction Frame(index?: number): Record<string, any>[] | Record<string, any> {\n    return [];\n}\n\nconst c: ContextValue = {\n    configureFrame: (_: ConfigureFrameOptions) => ({}) as StatusResponse,\n    addRecord: async (_: AddRecordOptions) => ({}) as StatusResponse,\n    deleteRecord: async (_: Record<string, any>) => ({}) as StatusResponse,\n    sync: async () => ({}) as StatusResponse,\n    updateRecordImage: async (_: UpdateRecordAttachmentOptions) => ({}) as StatusResponse,\n    updateRecordVideo: async (_: UpdateRecordAttachmentOptions) => ({}) as StatusResponse,\n    updateRecordFile: async (_: UpdateRecordAttachmentOptions) => ({}) as StatusResponse,\n    Frame,\n    useFrameEffect: (_: React.EffectCallback) => {},\n    fullTableSize: async () => 0,\n    tableTypes: async() => ({}) as Record<string, any>,\n    currentConfiguration: () => ({}) as FrameConfiguration,\n    Query: async (_: QueryOptions) => ([]),\n    getUserAttributes: async() => ({}) as Record<string, string>,\n    isUserSignedIn: () => false,\n    setUserAttribute: async (_: string, _2: string) => ({}) as StatusResponse,\n    resetUserPassword: async (_: string, _2: string) => ({}) as StatusResponse,\n    signIn: async (_: string, _2: string) => ({}) as StatusResponse,\n    signOut: () => {},\n    signUp: async (_: string, _2: string, _3?: Record<string, string>) => ({}) as StatusResponse,\n    onSignIn: (_: () => void) => {},\n    db: (_?: string) => ({}) as SQW,\n    dbEventListener: (_: () => void) => () => {},\n    useReturn: <T, >(_: () => SQW) => ({}) as UseReturnValue<T>,\n    e: ({}) as NewExpression,\n    setFile: async (_: string, _2: string, _3: File | FileFromURI, _4?: string) => ({}) as StatusResponse,\n    setImage: async (_: string, _2: string, _3: File | FileFromURI, _4?: string) => ({}) as StatusResponse,\n    setVideo: async (_: string, _2: string, _3: File | FileFromURI, _4?: string) => ({}) as StatusResponse,\n    forgotPassword: async (_: string, _2?: EmailTemplate) => ({}) as StatusResponse,\n    forgotPasswordConfirm: async (_: string, _2: string, _3: string) => ({}) as StatusResponse,\n    userID: () => undefined\n}\n\nexport default createContext(c);\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/* eslint-disable camelcase */\nimport React from \"react\";\nimport { SQW } from \"easyqb/types/sq\";\nimport { NewExpression } from \"easyqb/types/expression\";\n\nexport interface GoogleAnalyticsEvents {\n    login?: boolean;\n    sign_up?: boolean;\n    forgot_password?: boolean;\n    forgot_password_confirm?: boolean;\n    reset_user_password?: boolean;\n    get_user_attributes?: boolean;\n    set_user_attribute?: boolean;\n    query?: boolean;\n    full_table_size?: boolean;\n    table_types?: boolean;\n    db_one?: boolean;\n    db_all?: boolean;\n}\n\nexport interface EasybaseProviderPropsOptions {\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** Log Easybase react status and events to console. */\n    logging?: boolean;\n    /** Google Analytics 4 Measurement ID for activity reporting */\n    googleAnalyticsId?: string;\n    /** **Only Required for React Native** â€“ Google Analytics 4 Measurement Protocol Secret ID for activity reporting. To create a new secret, navigate in the Google Analytics UI to: Admin > Data Streams > choose your stream > Measurement Protocol > Create */\n    googleAnalyticsSecret?: string;\n    /**\n     * Specify which extra events are tracked in Google Analytics\n     * \n     * **default**:\n     *  * Page Mount\n     *  * login\n     *  * sign_up\n     *  * forgot_password\n     *  * forgot_password_confirm\n     *  * reset_user_password\n     *  \n    */\n    googleAnalyticsEventTracking?: GoogleAnalyticsEvents;\n}\n\nexport interface EasybaseProviderProps {\n    /** React elements */\n    children: JSX.Element[] | JSX.Element;\n    /** Easybase ebconfig object. Can be downloaded in the integration drawer next to 'React Token'. This is automatically generated.  */\n    ebconfig: Ebconfig;\n    /** Optional configuration parameters. */\n    options?: EasybaseProviderPropsOptions\n}\n\nexport interface UseReturnValue<T> {\n    /** Stateful frame that responds to local calls to `.update`, `.delete`, and `.set` */\n    frame: T[];\n    /** Call this function to unsubscribe to future events */\n    unsubscribe(): void;\n    /** Errors that occur in the useReturn workflow */\n    error: any;\n    /**\n     * @async\n     * Manually refresh the data in `frame`\n     */\n    manualFetch(): Promise<void>;\n    /** Is the frame awaiting a response from server to be set to */\n    loading: boolean;\n}\n\nexport interface ContextValue {\n    /**\n     * Pass a callback function to run when a user signs in. This callback function will run after either successfully\n     * signing in with the signIn() function OR after a user is automatically signed in via valid tokens saved to the browser from a \n     * previous instance. This is best placed with useEffect(() => {}, []);\n     * @param callback callback function to run on sign in event\n     */\n    onSignIn(callback: () => void): void;\n    /**\n     * Check if a user is currently signed in.\n     * @return {boolean} Is a user signed in.\n     */\n    isUserSignedIn(): boolean;\n    /**\n     * Sign out the current user and invalidate their cached tokens.\n     */\n    signOut(): void;\n    /**\n     * Retrieve the currently signed in users attribute object.\n     * @async\n     * @return {Promise<Record<string, string>>} Promise<Record<string, string>>\n     */\n    getUserAttributes(): Promise<Record<string, string>>;\n    /**\n     * Set a single attribute of the currently signed in user. Can also be updated visually in the Easybase 'Users' tab.\n     * @async\n     * @param key Object key. Can be a new key or existing key.\n     * @param value attribute value.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    setUserAttribute(key: string, value: string): Promise<StatusResponse>;\n    /**\n     * Reset the currently signed-in user's password to a new string.\n     * @async\n     * @param {string} currentPassword Signed-in user's current password\n     * @param {string} newPassword New password for user's account\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    resetUserPassword(currentPassword: string, newPassword: string): Promise<StatusResponse>;\n    /**\n     * Sign in a user that already exists for a project. This will save authentication tokens to a user's browser so that \n     * they will be automatically authenticated when they return to the application. These authentication tokens will become invalid\n     * when a user signs out or after 24 hours.\n     * @async\n     * @param userID unique identifier for new user. Usually an email or phone number.\n     * @param password user password.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    signIn(userID: string, password: string): Promise<StatusResponse>;\n    /**\n     * Create a new user for your project. You must still call signIn() after signing up.\n     * @async\n     * @param newUserID unique identifier for new user. Usually an email or phone number.\n     * @param password user password. Must be at least 8 characters long.\n     * @param userAttributes Optional object to store user attributes. Can also be edited visually in the Easybase 'Users' tab.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    signUp(newUserID: string, password: string, userAttributes?: Record<string, string>): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use `db` instead - https://easybase.github.io/EasyQB/\n     * \n     * This hook runs when the Frame changes. This can be triggered by calling sync().\n     * @param {React.EffectCallback} effect Callback function that executes when Frame changes.\n     */\n    useFrameEffect(effect: React.EffectCallback): void;\n    /**\n     * **DEPRECATED**: Use `db` instead - https://easybase.github.io/EasyQB/\n     * @deprecated Use `db` instead - https://easybase.github.io/EasyQB/\n     * @param {ConfigureFrameOptions} options ConfigureFrameOptions\n     * @return {StatusResponse} StatusResponse\n     */\n    configureFrame(options: ConfigureFrameOptions): StatusResponse;\n    /**\n     * **DEPRECATED**: Use `db().insert()` instead - https://easybase.github.io/EasyQB/docs/insert_queries.html\n     * @deprecated Use `db().insert()` instead - https://easybase.github.io/EasyQB/docs/insert_queries.html\n     * @async\n     * @param {AddRecordOptions} options AddRecordOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    addRecord(options: AddRecordOptions): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use `db().delete()` instead - https://easybase.github.io/EasyQB/docs/delete_queries.html\n     * @deprecated Use `db().delete()` instead - https://easybase.github.io/EasyQB/docs/delete_queries.html\n     * @async\n     * @param {Record<string, any>} record \n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    deleteRecord(options: DeleteRecordOptions): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use `db` instead - https://easybase.github.io/EasyQB/\n     * @deprecated Use `db` instead - https://easybase.github.io/EasyQB/\n     * @async\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    sync(): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use the `setImage` function instead.\n     * @deprecated Use the `setImage` function instead.\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordImage(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use the `setVideo` function instead.\n     * @deprecated Use the `setVideo` function instead.\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordVideo(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use the `setFile` function instead.\n     * @deprecated Use the `setFile` function instead.\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordFile(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * Upload an image to your backend and attach it to a specific record. columnName must reference a column of type 'image'.\n     * The file must have a valid image extension (png, jpg, heic, etc). \n     * @async\n     * @param {string} recordKey The '_key' of the record to attach this image to. Can be retrieved like: `db().return(\"_key\").where({ title: \"The Lion King\" }).one()`\n     * @param {string} columnName The name of the column that is of type image to attach.\n     * @param {File | FileFromURI} image Either an HTML File element or a FileFromURI object for React Native instances. For React Native, use libraries such as react-native-image-picker and react-native-document-picker. The file name must have a valid image file extension.\n     * @param {string} [tableName] Table to post attachment to. (Projects only)\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    setImage(recordKey: string, columnName: string, image: File | FileFromURI, tableName?: string): Promise<StatusResponse>;\n    /**\n     * Upload a video to your backend and attach it to a specific record. columnName must reference a column of type 'video'.\n     * The file must have a valid video extension (webm, mp4, mov, etc). \n     * @async\n     * @param {string} recordKey The '_key' of the record to attach this image to. Can be retrieved like: `db().return(\"_key\").where({ title: \"The Lion King\" }).one()`\n     * @param {string} columnName The name of the column that is of type video to attach.\n     * @param {File | FileFromURI} video Either an HTML File element or a FileFromURI object for React Native instances. For React Native, use libraries such as react-native-image-picker and react-native-document-picker. The file name must have a valid video file extension.\n     * @param {string} [tableName] Table to post attachment to. (Projects only)\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    setVideo(recordKey: string, columnName: string, video: File | FileFromURI, tableName?: string): Promise<StatusResponse>;\n    /**\n     * Upload a file to your backend and attach it to a specific record. columnName must reference a column of type 'file'.\n     * @async\n     * @param {string} recordKey The '_key' of the record to attach this image to. Can be retrieved like: `db().return(\"_key\").where({ title: \"The Lion King\" }).one()`\n     * @param {string} columnName The name of the column that is of type file to attach.\n     * @param {File | FileFromURI} file Either an HTML File element or a FileFromURI object for React Native instances. For React Native, use libraries such as react-native-image-picker and react-native-document-picker.\n     * @param {string} [tableName] Table to post attachment to. (Projects only)\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    setFile(recordKey: string, columnName: string, file: File | FileFromURI, tableName?: string): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use `db` instead - https://easybase.github.io/EasyQB/\n     * @deprecated Use `db` instead - https://easybase.github.io/EasyQB/\n     * @return {Record<string, any>[]} Array of records corresponding to the current frame. Call sync() to push changes that you have made to this array.\n     */\n    Frame(): Record<string, any>[];\n    /**\n     * **DEPRECATED**: Use `db` instead - https://easybase.github.io/EasyQB/\n     * @deprecated Use `db` instead - https://easybase.github.io/EasyQB/\n     * @param {number} [index] Passing an index will only return the object at that index in your Frame, rather than the entire array. This is useful for editing single objects based on an index.\n     * @return {Record<string, any>} Single record corresponding to that object within the current frame. Call sync() to push changes that you have made to this object.\n     */\n    Frame(index: number): Record<string, any>;\n    /**\n     * Gets the number of records in your table.\n     * @async\n     * @returns {Promise<number>} The the number of records in your table.\n     */\n    fullTableSize(): Promise<number>;\n    /**\n     * Gets the number of records in your table.\n     * @async\n     * @param {string} [tableName] Name of table to get the sizes of. (Projects only)\n     * @returns {Promise<number>} The the number of records in your table.\n     */\n    fullTableSize(tableName: string): Promise<number>;\n    /**\n     * Retrieve an object detailing the columns in your table mapped to their corresponding type.\n     * @async\n     * @returns {Promise<Record<string, any>>} Object detailing the columns in your table mapped to their corresponding type.\n     */\n    tableTypes(): Promise<Record<string, any>>;\n    /**\n     * Retrieve an object detailing the columns in your table mapped to their corresponding type.\n     * @async\n     * @param {string} [tableName] Name of table to get the types of. (Projects only)\n     * @returns {Promise<Record<string, any>>} Object detailing the columns in your table mapped to their corresponding type.\n     */\n    tableTypes(tableName: string): Promise<Record<string, any>>;\n    /**\n     * View your frames current configuration\n     * @returns {Record<string, any>} Object contains the `offset` and `length` of your current frame.\n     */\n    currentConfiguration(): FrameConfiguration;\n    /**\n     * @async\n     * View a query by name. This returns an isolated array that has no effect on your frame or frame configuration. sync() and Frame() have no \n     * relationship with a Query(). An edited Query cannot be synced with your database, use Frame() for realtime \n     * database array features.\n     * @param {QueryOptions} options QueryOptions\n     * @return {Promise<Record<string, any>[]>} Isolated array of records in the same form as Frame(). Editing this array has no effect and cannot be synced with your database. Use Frame() for realtime database features.\n     */\n    Query(options: QueryOptions): Promise<Record<string, any>[]>;\n    /**\n     * Instantiate EasyQB instance for dynamic CRUD query building: https://easybase.github.io/EasyQB/\n     * @param {string} [tableName] Name of your table.\n     * @param {boolean} [userAssociatedRecordsOnly] **PROJECTS ONLY** Operations will only be performed on records already associated to the currently signed-in user. Inserted records will automatically be associate to the user.\n     * @returns {SQW} EasyQB object for dynamic querying: https://easybase.github.io/EasyQB/\n     */\n    db(tableName?: string, userAssociatedRecordsOnly?: boolean): SQW;\n    /**\n     * Subscribe to db events, invoked by calling `.all` or `.one`: https://easybase.github.io/EasyQB/\n     * @param {function(status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any):void} [callback] Callback function to execute on db operations.\n     * @returns {function():void} Calling this function unsubscribes your callback function from events.\n     */\n    dbEventListener(callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void): () => void;\n    /**\n     * Expressions and operations builder for `.db()`, used to create complex conditions, aggregators, and clauses. https://easybase.github.io/EasyQB/docs/operations.html\n     */\n    e: NewExpression;\n    /**\n     * Custom stateful hook to an instance of `db().return`. Other local changes will automatically re-fetch the query \n     * as detailed in the passed-in db.\n     * \n     * ```\n     * \n     * const { frame } = useReturn(() => db('MYTABLE').return().where(e.gt('rating', ratingState)).limit(10), [ratingState])\n     * \n     * const onButtonClick = (_key) => {\n     *   db('MYTABLE').delete().where({ _key }).all();\n     * }\n     * \n     * // Stays fresh after call to `.delete()`\n     * return (<div>{ frame.map(ele => <Card {...ele} />) }</div>)\n     * \n     * ```\n     * \n     * @param {function():SQW} dbInstance Function returning an instance of `db().return` without having called `.all` or `.one`\n     * @param {React.DependencyList} deps If present, instance will be reloaded if the values in the list change.\n     * @return {UseReturnValue} Object with the required values to statefully access an array that is subscribed to local executions to the corresponding db instance.\n     */\n    useReturn<T = Record<string, any>>(dbInstance: () => SQW, deps?: React.DependencyList): UseReturnValue<T>;\n    /**\n     * @async\n     * Trigger an email to the given username with a verification code to reset the user's password. This verification \n     * code is used in the `forgotPasswordConfirm` function, along with a new password. **The username must be the user's email address**.\n     * @param {string} username A username which must also be a valid email address\n     * @param {EmailTemplate} emailTemplate Optional details for the formatting & content of the verification email\n     * @return {Promise<StatusResponse>} A StatusResponse corresponding to the successful sending of a verification code email\n     */\n    forgotPassword(username: string, emailTemplate?: EmailTemplate): Promise<StatusResponse>\n    /**\n     * @async\n     * Confirm the resetting of an unauthenticated users password. This function is invoked after `forgotPassword` is used to trigger\n     * an email containing a verification code to the given username [*which must also be an email*]. The user's randomly generated\n     * verification code from their email is passed in the first parameter. \n     * @param {string} code Verification code found in the email sent from the `forgotPassword` function\n     * @param {string} username The same username (email) used in the `forgotPassword` function\n     * @param {string} newPassword The new password for the corresponding verified user\n     * @return {Promise<StatusResponse>} A StatusResponse corresponding to the successful setting of a new password\n     */\n    forgotPasswordConfirm(code: string, username: string, newPassword: string): Promise<StatusResponse>\n    /**\n     * Retrieve the currently signed-in user's ID.\n     * @return {string | undefined} The currently signed-in user's ID (username), otherwise undefined.\n     */\n    userID(): string | undefined;\n}\n\n/**\n * JS TYPES: ++++++++++++++++++\n */\n\nexport interface ConfigureFrameOptions {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit?: number | null;\n    /** Table to sync frame with. (Projects only) */\n    tableName?: string;\n}\n\nexport interface FrameConfiguration {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit: number | null;\n    /** Table to sync frame with. (Projects only) */\n    tableName?: string;\n}\n\nexport interface Ebconfig {\n    tt?: string,\n    integration: string,\n    version: string\n}\n\nexport interface AddRecordOptions {\n    /** If true, record will be inserted at the end of the collection rather than the front. Overwrites absoluteIndex. */\n    insertAtEnd?: boolean;\n    /** Values to post to EasyBase collection. Format is { column name: value } */\n    newRecord: Record<string, any>;\n    /** Table to post new record to. (Projects only) */\n    tableName?: string;\n}\n\nexport interface DeleteRecordOptions {\n    record: Record<string, any>;\n    /** Table to delete record from. (Projects only) */\n    tableName?: string;\n}\n\nexport interface QueryOptions {\n    /** Name of the query saved in Easybase's Visual Query Builder */\n    queryName: string;\n    /** If you would like to sort the order of your query by a column. Pass the name of that column here */\n    sortBy?: string;\n    /** By default, columnToSortBy will sort your query by ascending value (1, 2, 3...). To sort by descending set this to true */\n    descending?: boolean;\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Can be used in combination with offset. */\n    limit?: number;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. Read more: https://easybase.io/about/2020/09/15/Customizing-query-values/ */\n    customQuery?: Record<string, any>;\n    /** Table to query. (Projects only) */\n    tableName?: string;\n}\n\nexport interface FileFromURI {\n    /** Path on local device to the attachment. Usually received from react-native-image-picker or react-native-document-picker */\n    uri: string,\n    /** Name of the file with proper extension */\n    name: string,\n    /** File MIME type */\n    type: string\n}\n\nexport interface UpdateRecordAttachmentOptions {\n    /** EasyBase Record to attach this attachment to */\n    record: Record<string, any>;\n    /** The name of the column that is of type file/image/video */\n    columnName: string;\n    /** Either an HTML File element containing the correct type of attachment or a FileFromURI object for React Native instances.\n     * For React Native use libraries such as react-native-image-picker and react-native-document-picker.\n     * The file name must have a proper file extension corresponding to the attachment. \n     */\n    attachment: File | FileFromURI;\n    /** Table to post attachment to. (Projects only) */\n    tableName?: string;\n}\n\nexport interface StatusResponse {\n    /** Returns true if the operation was successful */\n    success: boolean;\n    /** Readable description of the the operation's status */\n    message: string;\n    /** Will represent a corresponding error if an error was thrown during the operation. */\n    errorCode?: string;\n}\n\nexport interface EmailTemplate {\n    /** Optional header of email that will be sent to user with verification code */\n    greeting?: string;\n    /** Optional name of application for placement within email */\n    appName?: string;\n    /** Optional footer of verification email often used for disclaimers. Can be a valid HTML string */\n    footer?: string;\n}\n\nexport enum POST_TYPES {\n    UPLOAD_ATTACHMENT = \"upload_attachment\",\n    HANDSHAKE = \"handshake\",\n    VALID_TOKEN = \"valid_token\",\n    GET_FRAME = \"get_frame\",\n    TABLE_SIZE = \"table_size\",\n    COLUMN_TYPES = \"column_types\",\n    SYNC_STACK = \"sync_stack\",\n    SYNC_DELETE = \"sync_delete\",\n    SYNC_INSERT = \"sync_insert\",\n    GET_QUERY = \"get_query\",\n    USER_ATTRIBUTES = \"user_attributes\",\n    SET_ATTRIBUTE = \"set_attribute\",\n    SIGN_UP = \"sign_up\",\n    REQUEST_TOKEN = \"request_token\",\n    EASY_QB = \"easyqb\",\n    RESET_PASSWORD = \"reset_password\",\n    FORGOT_PASSWORD_SEND = \"forgot_password_send\",\n    FORGOT_PASSWORD_CONFIRM = \"forgot_password_confirm\"\n}\n\nexport enum DB_STATUS {\n    ERROR = \"error\",\n    PENDING = \"pending\",\n    SUCCESS = \"success\"\n}\n\nexport enum EXECUTE_COUNT {\n    ALL = \"all\",\n    ONE = \"one\"\n}\n\nexport interface AuthPostResponse {\n    success: boolean;\n    data: any;\n}\n\nexport interface Globals {\n    ebconfig: Ebconfig;\n    token: string;\n    refreshToken: string;\n    session: number;\n    options: EasybaseProviderPropsOptions;\n    instance: \"Node\" | \"React\" | \"React Native\";\n    mounted: boolean;\n    newTokenCallback(): void;\n    userID: string | undefined;\n    analyticsEnabled: boolean;\n    analyticsEventsToTrack: GoogleAnalyticsEvents;\n    analyticsEvent(eventTitle: string, params?: Record<string, any>): void;\n    analyticsIdentify(hashedUserId: string): void;\n    GA_USER_ID_SALT: string; // https://support.google.com/analytics/answer/6366371?hl=en#hashed\n}\n","import { Ebconfig, EasybaseProviderPropsOptions, Globals, EasybaseProviderProps, GoogleAnalyticsEvents } from \"./types\";\n\nnamespace GlobalNamespace {\n    export let ebconfig: Ebconfig;\n    export let token: string;\n    export let refreshToken: string;\n    export let session: number;\n    export let options: EasybaseProviderPropsOptions;\n    export let instance: \"Node\" | \"React\" | \"React Native\";\n    export let mounted: boolean;\n    export let newTokenCallback: () => {};\n    export let userID: string;\n    export let analyticsEnabled: boolean;\n    export let analyticsEventsToTrack: GoogleAnalyticsEvents;\n    export let analyticsEvent: () => {};\n    export let analyticsIdentify: () => {};\n    export let GA_USER_ID_SALT: string; // https://support.google.com/analytics/answer/6366371?hl=en#hashed\n}\n\nconst _g: Globals = { ...GlobalNamespace };\n\nexport default _g;\n\nexport function gFactory({ ebconfig, options }: EasybaseProviderProps): Globals {\n    const optionsObj = { ...options }; // Forces undefined to empty object\n    const gaTrackingObj = options ? options.googleAnalyticsEventTracking : {};\n    const defaultG = {\n        options: optionsObj,\n        ebconfig: ebconfig,\n        GA_USER_ID_SALT: \"m83WnAPrq\",\n        analyticsEventsToTrack: {\n            login: true,\n            sign_up: true,\n            forgot_password: true,\n            forgot_password_confirm: true,\n            reset_user_password: true,\n            ...gaTrackingObj\n        }\n    }\n    return { ...GlobalNamespace, ...defaultG } as Globals;\n}\n","import _g from \"./g\";\nimport { Globals } from \"./types\";\n\nexport default function utilsFactory(globals?: Globals): any {\n    const g = globals || _g;\n\n    const generateBareUrl = (type: string, integrationID: string): string => `https://api.easybase.io/${type}/${integrationID}`;\n\n    const generateAuthBody = (): any => {\n        const stamp = Date.now();\n        return {\n            token: g.token,\n            token_time: ~~(g.session / (stamp % 64)),\n            now: stamp\n        }\n    }\n    \n    function log(...params: any): void {\n        if (g.options.logging) {\n            console.log(\"EASYBASE â€” \", ...params);\n        }\n    }\n\n    return {\n        generateAuthBody,\n        generateBareUrl,\n        log\n    }\n}\n","import { SQW } from \"easyqb/types/sq\";\nimport { NewExpression } from \"easyqb/types/expression\";\n\nexport interface ConfigureFrameOptions {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit?: number | null;\n    /** Table to sync frame with. (Projects only) */\n    tableName?: string;\n}\n\nexport interface GoogleAnalyticsEvents {\n    login?: boolean;\n    sign_up?: boolean;\n    forgot_password?: boolean;\n    forgot_password_confirm?: boolean;\n    reset_user_password?: boolean;\n    get_user_attributes?: boolean;\n    set_user_attribute?: boolean;\n    query?: boolean;\n    full_table_size?: boolean;\n    table_types?: boolean;\n    db_one?: boolean;\n    db_all?: boolean;\n}\n\nexport interface EasybaseProviderPropsOptions {\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** Log Easybase react status and events to console. */\n    logging?: boolean;\n    /** Google Analytics 4 Measurement ID for activity reporting */\n    googleAnalyticsId?: string;\n    /** **Only Required for React Native** â€“ Google Analytics 4 Measurement Protocol Secret ID for activity reporting. To create a new secret, navigate in the Google Analytics UI to: Admin > Data Streams > choose your stream > Measurement Protocol > Create */\n    googleAnalyticsSecret?: string;\n    /**\n     * Specify which extra events are tracked in Google Analytics\n     * \n     * **default**:\n     *  * Page Mount\n     *  * login\n     *  * sign_up\n     *  * forgot_password\n     *  * forgot_password_confirm\n     *  * reset_user_password\n     *  \n    */\n    googleAnalyticsEventTracking?: GoogleAnalyticsEvents;\n}\n\n\nexport interface EasybaseProviderProps {\n    /** Easybase ebconfig object. Can be downloaded in the integration drawer next to 'React Token'. This is automatically generated.  */\n    ebconfig: Ebconfig;\n    /** Optional configuration parameters. */\n    options?: EasybaseProviderPropsOptions\n}\n\nexport interface FrameConfiguration {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit: number | null;\n    /** Table to sync frame with. (Projects only) */\n    tableName?: string;\n}\n\nexport interface Ebconfig {\n    tt?: string,\n    integration: string,\n    version: string\n}\n\nexport interface AddRecordOptions {\n    /** If true, record will be inserted at the end of the collection rather than the front. Overwrites absoluteIndex. */\n    insertAtEnd?: boolean;\n    /** Values to post to Easybase collection. Format is { column name: value } */\n    newRecord: Record<string, any>;\n    /** Table to post new record to. (Projects only) */\n    tableName?: string;\n}\n\nexport interface DeleteRecordOptions {\n    record: Record<string, any>;\n    /** Table to delete record from. (Projects only) */\n    tableName?: string;\n}\n\nexport interface QueryOptions {\n    /** Name of the query saved in Easybase's Visual Query Builder */\n    queryName: string;\n    /** If you would like to sort the order of your query by a column. Pass the name of that column here */\n    sortBy?: string;\n    /** By default, columnToSortBy will sort your query by ascending value (1, 2, 3...). To sort by descending set this to true */\n    descending?: boolean;\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Can be used in combination with offset. */\n    limit?: number;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. Read more: https://easybase.io/about/2020/09/15/Customizing-query-values/ */\n    customQuery?: Record<string, any>;\n    /** Table to query. (Projects only) */\n    tableName?: string;\n}\n\nexport interface FileFromURI {\n    /** Path on local device to the attachment. Usually received from react-native-image-picker or react-native-document-picker */\n    uri: string,\n    /** Name of the file with proper extension */\n    name: string,\n    /** File MIME type */\n    type: string\n}\n\nexport interface UpdateRecordAttachmentOptions {\n    /** Easybase Record to attach this attachment to */\n    record: Record<string, any>;\n    /** The name of the column that is of type file/image/video */\n    columnName: string;\n    /** Either an HTML File element containing the correct type of attachment or a FileFromURI object for React Native instances.\n     * For React Native use libraries such as react-native-image-picker and react-native-document-picker.\n     * The file name must have a proper file extension corresponding to the attachment. \n     */\n    attachment: File | FileFromURI;\n    /** Table to post attachment to. (Projects only) */\n    tableName?: string;\n}\n\nexport interface StatusResponse {\n    /** Returns true if the operation was successful */\n    success: boolean;\n    /** Readable description of the the operation's status */\n    message: string;\n    /** Will represent a corresponding error if an error was thrown during the operation. */\n    errorCode?: string;\n}\n\nexport interface EmailTemplate {\n    /** Optional header of email that will be sent to user with verification code */\n    greeting?: string;\n    /** Optional name of application for placement within email */\n    appName?: string;\n    /** Optional footer of verification email often used for disclaimers. Can be a valid HTML string */\n    footer?: string;\n}\n\nexport enum POST_TYPES {\n    UPLOAD_ATTACHMENT = \"upload_attachment\",\n    HANDSHAKE = \"handshake\",\n    VALID_TOKEN = \"valid_token\",\n    GET_FRAME = \"get_frame\",\n    TABLE_SIZE = \"table_size\",\n    COLUMN_TYPES = \"column_types\",\n    SYNC_STACK = \"sync_stack\",\n    SYNC_DELETE = \"sync_delete\",\n    SYNC_INSERT = \"sync_insert\",\n    GET_QUERY = \"get_query\",\n    USER_ATTRIBUTES = \"user_attributes\",\n    SET_ATTRIBUTE = \"set_attribute\",\n    SIGN_UP = \"sign_up\",\n    REQUEST_TOKEN = \"request_token\",\n    EASY_QB = \"easyqb\",\n    RESET_PASSWORD = \"reset_password\",\n    FORGOT_PASSWORD_SEND = \"forgot_password_send\",\n    FORGOT_PASSWORD_CONFIRM = \"forgot_password_confirm\"\n}\n\nexport enum DB_STATUS {\n    ERROR = \"error\",\n    PENDING = \"pending\",\n    SUCCESS = \"success\"\n}\n\nexport enum EXECUTE_COUNT {\n    ALL = \"all\",\n    ONE = \"one\"\n}\n\nexport interface AuthPostResponse {\n    success: boolean;\n    data: any;\n}\n\nexport interface ContextValue {\n    /**\n     * Signs out the current user.\n     */\n    signOut(): void;\n    /**\n     * Retrieve the currently signed in users attribute object.\n     * @async\n     * @return {Promise<Record<string, string>>} Promise<Record<string, string>>\n     */\n    getUserAttributes(): Promise<Record<string, string>>;\n    /**\n     * Set a single attribute of the currently signed in user. Can also be updated visually in the Easybase 'Users' tab.\n     * @async\n     * @param key Object key. Can be a new key or existing key.\n     * @param value attribute value.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    setUserAttribute(key: string, value: string): Promise<StatusResponse>;\n    /**\n     * Reset the currently signed-in user's password to a new string.\n     * @async\n     * @param {string} currentPassword Signed-in user's current password\n     * @param {string} newPassword New password for user's account\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    resetUserPassword(currentPassword: string, newPassword: string): Promise<StatusResponse>;\n    /**\n     * Sign in a user that already exists for a project.\n     * @async\n     * @param userID unique identifier for new user. Usually an email or phone number.\n     * @param password user password.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    signIn(userID: string, password: string): Promise<StatusResponse>;\n    /**\n     * Create a new user for your project. You must still call signIn() after signing up.\n     * @async\n     * @param newUserID unique identifier for new user. Usually an email or phone number.\n     * @param password user password. Must be at least 8 characters long.\n     * @param userAttributes Optional object to store user attributes. Can also be edited visually in the Easybase 'Users' tab.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    signUp(newUserID: string, password: string, userAttributes?: Record<string, string>): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use `db` instead - https://easybase.github.io/EasyQB/\n     * @deprecated Use `db` instead - https://easybase.github.io/EasyQB/\n     * @param {ConfigureFrameOptions} options ConfigureFrameOptions\n     * @return {StatusResponse} StatusResponse\n     */\n    configureFrame(options: ConfigureFrameOptions): StatusResponse;\n    /**\n     * **DEPRECATED**: Use `db().insert()` instead - https://easybase.github.io/EasyQB/docs/insert_queries.html\n     * @deprecated Use `db().insert()` instead - https://easybase.github.io/EasyQB/docs/insert_queries.html\n     * @async\n     * @param {AddRecordOptions} options AddRecordOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    addRecord(options: AddRecordOptions): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use `db().delete()` instead - https://easybase.github.io/EasyQB/docs/delete_queries.html\n     * @deprecated Use `db().delete()` instead - https://easybase.github.io/EasyQB/docs/delete_queries.html\n     * @async\n     * @param {Record<string, any>} record \n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    deleteRecord(options: DeleteRecordOptions): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use `db` instead - https://easybase.github.io/EasyQB/\n     * @deprecated Use `db` instead - https://easybase.github.io/EasyQB/\n     * @async\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    sync(): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use the `setImage` function instead.\n     * @deprecated Use the `setImage` function instead.\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordImage(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use the `setVideo` function instead.\n     * @deprecated Use the `setVideo` function instead.\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordVideo(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use the `setFile` function instead.\n     * @deprecated Use the `setFile` function instead.\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordFile(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * Upload an image to your backend and attach it to a specific record. columnName must reference a column of type 'image'.\n     * The file must have a valid image extension (png, jpg, heic, etc). \n     * @async\n     * @param {string} recordKey The '_key' of the record to attach this image to. Can be retrieved like: `db().return(\"_key\").where({ title: \"The Lion King\" }).one()`\n     * @param {string} columnName The name of the column that is of type image to attach.\n     * @param {File | FileFromURI} image Either an HTML File element or a FileFromURI object for React Native instances. For React Native, use libraries such as react-native-image-picker and react-native-document-picker. The file name must have a valid image file extension.\n     * @param {string} [tableName] Table to post attachment to. (Projects only)\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    setImage(recordKey: string, columnName: string, image: File | FileFromURI, tableName?: string): Promise<StatusResponse>;\n    /**\n     * Upload a video to your backend and attach it to a specific record. columnName must reference a column of type 'video'.\n     * The file must have a valid video extension (webm, mp4, mov, etc). \n     * @async\n     * @param {string} recordKey The '_key' of the record to attach this image to. Can be retrieved like: `db().return(\"_key\").where({ title: \"The Lion King\" }).one()`\n     * @param {string} columnName The name of the column that is of type video to attach.\n     * @param {File | FileFromURI} video Either an HTML File element or a FileFromURI object for React Native instances. For React Native, use libraries such as react-native-image-picker and react-native-document-picker. The file name must have a valid video file extension.\n     * @param {string} [tableName] Table to post attachment to. (Projects only)\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    setVideo(recordKey: string, columnName: string, video: File | FileFromURI, tableName?: string): Promise<StatusResponse>;\n    /**\n     * Upload a file to your backend and attach it to a specific record. columnName must reference a column of type 'file'.\n     * @async\n     * @param {string} recordKey The '_key' of the record to attach this image to. Can be retrieved like: `db().return(\"_key\").where({ title: \"The Lion King\" }).one()`\n     * @param {string} columnName The name of the column that is of type file to attach.\n     * @param {File | FileFromURI} file Either an HTML File element or a FileFromURI object for React Native instances. For React Native, use libraries such as react-native-image-picker and react-native-document-picker.\n     * @param {string} [tableName] Table to post attachment to. (Projects only)\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    setFile(recordKey: string, columnName: string, file: File | FileFromURI, tableName?: string): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use `db` instead - https://easybase.github.io/EasyQB/\n     * @deprecated Use `db` instead - https://easybase.github.io/EasyQB/\n     * @return {Record<string, any>[]} Array of records corresponding to the current frame. Call sync() to push changes that you have made to this array.\n     */\n    Frame(): Record<string, any>[];\n    /**\n     * **DEPRECATED**: Use `db` instead - https://easybase.github.io/EasyQB/\n     * @deprecated Use `db` instead - https://easybase.github.io/EasyQB/\n     * @param {number} [index] Passing an index will only return the object at that index in your Frame, rather than the entire array. This is useful for editing single objects based on an index.\n     * @return {Record<string, any>} Single record corresponding to that object within the current frame. Call sync() to push changes that you have made to this object.\n     */\n    Frame(index: number): Record<string, any>;\n    /**\n     * Gets the number of records in your table.\n     * @async\n     * @returns {Promise<number>} The the number of records in your table.\n     */\n    fullTableSize(): Promise<number>;\n    /**\n     * Gets the number of records in your table.\n     * @async\n     * @param {string} [tableName] Name of table to get the sizes of. (Projects only)\n     * @returns {Promise<number>} The the number of records in your table.\n     */\n    fullTableSize(tableName: string): Promise<number>;\n    /**\n     * Retrieve an object detailing the columns in your table mapped to their corresponding type.\n     * @async\n     * @returns {Promise<Record<string, any>>} Object detailing the columns in your table mapped to their corresponding type.\n     */\n    tableTypes(): Promise<Record<string, any>>;\n    /**\n     * Retrieve an object detailing the columns in your table mapped to their corresponding type.\n     * @async\n     * @param {string} [tableName] Name of table to get the types of. (Projects only)\n     * @returns {Promise<Record<string, any>>} Object detailing the columns in your table mapped to their corresponding type.\n     */\n    tableTypes(tableName: string): Promise<Record<string, any>>;\n    /**\n     * View your frames current configuration\n     * @returns {Record<string, any>} Object contains the `offset` and `length` of your current frame.\n     */\n    currentConfiguration(): FrameConfiguration;\n    /**\n     * @async\n     * View a query by name. This returns an isolated array that has no effect on your frame or frame configuration. sync() and Frame() have no \n     * relationship with a Query(). An edited Query cannot be synced with your database, use Frame() for realtime \n     * database array features.\n     * @param {QueryOptions} options QueryOptions\n     * @return {Promise<Record<string, any>[]>} Isolated array of records in the same form as Frame(). Editing this array has no effect and cannot be synced with your database. Use Frame() for realtime database features.\n     */\n    Query(options: QueryOptions): Promise<Record<string, any>[]>;\n    /**\n     * Instantiate EasyQB instance for dynamic CRUD query building: https://easybase.github.io/EasyQB/\n     * @param {string} [tableName] Name of your table.\n     * @param {boolean} [userAssociatedRecordsOnly] **PROJECTS ONLY** Operations will only be performed on records already associated to the currently signed-in user. Inserted records will automatically be associate to the user.\n     * @returns {SQW} EasyQB object for dynamic querying: https://easybase.github.io/EasyQB/\n     */\n    db(tableName?: string, userAssociatedRecordsOnly?: boolean): SQW;\n    /**\n     * Subscribe to db events, invoked by calling `.all` or `.one`: https://easybase.github.io/EasyQB/\n     * @param {function(status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any):void} [callback] Callback function to execute on db operations.\n     * @returns {function():void} Calling this function unsubscribes your callback function from events.\n     */\n    dbEventListener(callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void): () => void;\n    /**\n     * Expressions and operations builder for `.db()`, used to create complex conditions, aggregators, and clauses. https://easybase.github.io/EasyQB/docs/operations.html\n     */\n    e: NewExpression;\n    /**\n     * @async\n     * Trigger an email to the given username with a verification code to reset the user's password. This verification \n     * code is used in the `forgotPasswordConfirm` function, along with a new password. **The username must be the user's email address**.\n     * @param {string} username A username which must also be a valid email address\n     * @param {EmailTemplate} emailTemplate Optional details for the formatting & content of the verification email\n     * @return {Promise<StatusResponse>} A StatusResponse corresponding to the successful sending of a verification code email\n     */\n    forgotPassword(username: string, emailTemplate?: EmailTemplate): Promise<StatusResponse>\n    /**\n     * @async\n     * Confirm the resetting of an unauthenticated users password. This function is invoked after `forgotPassword` is used to trigger\n     * an email containing a verification code to the given username [*which must also be an email*]. The user's randomly generated\n     * verification code from their email is passed in the first parameter. \n     * @param {string} code Verification code found in the email sent from the `forgotPassword` function\n     * @param {string} username The same username (email) used in the `forgotPassword` function\n     * @param {string} newPassword The new password for the corresponding verified user\n     * @return {Promise<StatusResponse>} A StatusResponse corresponding to the successful setting of a new password\n     */\n    forgotPasswordConfirm(code: string, username: string, newPassword: string): Promise<StatusResponse>\n    /**\n     * Retrieve the currently signed-in user's ID.\n     * @return {string | undefined} The currently signed-in user's ID (username), otherwise undefined.\n     */\n    userID(): string | undefined;\n}\n\nexport interface Globals {\n    ebconfig: Ebconfig;\n    token: string;\n    refreshToken: string;\n    session: number;\n    options: EasybaseProviderPropsOptions;\n    instance: \"Node\" | \"React\" | \"React Native\";\n    mounted: boolean;\n    newTokenCallback(): void;\n    userID: string | undefined;\n    analyticsEnabled: boolean;\n    analyticsEventsToTrack: GoogleAnalyticsEvents;\n    analyticsEvent(eventTitle: string, params?: Record<string, any>): void;\n    analyticsIdentify(hashedUserId: string): void;\n    GA_USER_ID_SALT: string; // https://support.google.com/analytics/answer/6366371?hl=en#hashed\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","import { POST_TYPES, AuthPostResponse, Globals, StatusResponse, EmailTemplate } from \"./types\";\nimport _g from \"./g\";\nimport utilsFactory from \"./utils\";\nimport fetch from 'cross-fetch';\n\nexport default function authFactory(globals?: Globals): any {\n    const g = globals || _g;\n\n    const { generateBareUrl, generateAuthBody, log } = utilsFactory(g);\n\n    function _clearTokens() {\n        g.token = \"\";\n        g.refreshToken = \"\";\n        g.newTokenCallback();\n        g.userID = undefined;\n    }\n\n    const getUserAttributes = async (): Promise<Record<string, string>> => {\n        try {\n            const attrsRes = await tokenPost(POST_TYPES.USER_ATTRIBUTES);\n            g.analyticsEnabled && g.analyticsEventsToTrack.get_user_attributes && g.analyticsEvent('get_user_attributes');\n            return attrsRes.data;\n        } catch (error) {\n            log(error)\n            return error;\n        }\n    }\n\n    const setUserAttribute = async (key: string, value: string): Promise<StatusResponse> => {\n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.SET_ATTRIBUTE, {\n                key,\n                value\n            });\n            g.analyticsEnabled && g.analyticsEventsToTrack.set_user_attribute && g.analyticsEvent('set_user_attribute', { key });\n            return {\n                success: setAttrsRes.success,\n                message: JSON.stringify(setAttrsRes.data)\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const forgotPassword = async (username: string, emailTemplate?: EmailTemplate): Promise<StatusResponse> => {\n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.FORGOT_PASSWORD_SEND, {\n                username,\n                emailTemplate\n            });\n            g.analyticsEnabled && g.analyticsEventsToTrack.forgot_password && g.analyticsEvent('forgot_password');\n            return {\n                success: setAttrsRes.success,\n                message: setAttrsRes.data\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const forgotPasswordConfirm = async (code: string, username: string, newPassword: string): Promise<StatusResponse> => {\n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.FORGOT_PASSWORD_CONFIRM, {\n                username,\n                code,\n                newPassword\n            });\n            g.analyticsEnabled && g.analyticsEventsToTrack.forgot_password_confirm && g.analyticsEvent('forgot_password_confirm');\n            return {\n                success: setAttrsRes.success,\n                message: setAttrsRes.data\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const signUp = async (newUserID: string, password: string, userAttributes?: Record<string, string>): Promise<StatusResponse> => {\n        try {\n            const signUpRes = await tokenPost(POST_TYPES.SIGN_UP, {\n                newUserID,\n                password,\n                userAttributes\n            });\n            g.analyticsEnabled && g.analyticsEventsToTrack.sign_up && g.analyticsEvent('sign_up', { method: \"Easybase\" });\n            return {\n                success: signUpRes.success,\n                message: signUpRes.data\n            }\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            }\n        }\n    }\n\n    const signIn = async (userID: string, password: string): Promise<StatusResponse> => {\n        const t1 = Date.now();\n        g.session = Math.floor(100000000 + Math.random() * 900000000);\n\n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        try {\n            const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n                method: \"POST\",\n                headers: {\n                    'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    version: g.ebconfig.version,\n                    session: g.session,\n                    instance: g.instance,\n                    userID,\n                    password\n                })\n            });\n\n            const resData = await res.json();\n\n            if (resData.token) {\n                g.token = resData.token;\n                g.refreshToken = resData.refreshToken;\n                g.newTokenCallback();\n                g.userID = resData.userID;\n                g.mounted = true;\n                const [validTokenRes, { hash }, { fromUtf8 }] = await Promise.all([tokenPost(POST_TYPES.VALID_TOKEN), import('fast-sha256'), import('@aws-sdk/util-utf8-browser')])\n                const elapsed = Date.now() - t1;\n                if (validTokenRes.success) {\n                    log(\"Valid auth initiation in \" + elapsed + \"ms\");\n                    if (g.analyticsEnabled && g.analyticsEventsToTrack.login) {\n                        const hashOut = hash(fromUtf8(g.GA_USER_ID_SALT + resData.userID));\n                        const hexHash = Array.prototype.map.call(hashOut, x => ('00' + x.toString(16)).slice(-2)).join('');\n                        g.analyticsIdentify(hexHash);\n                        g.analyticsEvent('login', { method: \"Easybase\" });\n                    }\n                    return {\n                        success: true,\n                        message: \"Successfully signed in user\"\n                    };\n                } else {\n                    return {\n                        success: false,\n                        message: \"Could not sign in user\"\n                    };\n                }\n            } else {\n                return {\n                    success: false,\n                    message: \"Could not sign in user\",\n                    errorCode: resData.ErrorCode || undefined\n                };\n            }\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Could not sign in user\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const resetUserPassword = async (currentPassword: string, newPassword: string): Promise<StatusResponse> => {\n        if (typeof newPassword !== \"string\" || newPassword.length > 100) {\n            return {\n                success: false,\n                message: \"newPassword must be of type string\"\n            };\n        }\n\n        if (typeof currentPassword !== \"string\" || currentPassword.length > 100) {\n            return {\n                success: false,\n                message: \"currentPassword must be of type string\"\n            };\n        }\n\n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.RESET_PASSWORD, { currentPassword, newPassword });\n            g.analyticsEnabled && g.analyticsEventsToTrack.reset_user_password && g.analyticsEvent('reset_user_password');\n            return {\n                success: setAttrsRes.success,\n                message: JSON.stringify(setAttrsRes.data)\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const userID = (): string | undefined => g.userID || undefined;\n\n    const signOut = (): void => {\n        g.token = \"\";\n        g.newTokenCallback();\n        g.userID = undefined;\n    }\n\n    const initAuth = async (): Promise<boolean> => {\n        const t1 = Date.now();\n        g.session = Math.floor(100000000 + Math.random() * 900000000);\n\n        log(`Handshaking on${g.instance} instance`);\n\n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        try {\n            const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n                method: \"POST\",\n                headers: {\n                    'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    version: g.ebconfig.version,\n                    tt: g.ebconfig.tt,\n                    session: g.session,\n                    instance: g.instance\n                })\n            });\n\n            const resData = await res.json();\n\n            if (resData.token) {\n                g.token = resData.token;\n                g.mounted = true;\n                const validTokenRes = await tokenPost(POST_TYPES.VALID_TOKEN);\n                const elapsed = Date.now() - t1;\n                if (validTokenRes.success) {\n                    log(\"Valid auth initiation in \" + elapsed + \"ms\");\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        } catch (error) {\n            console.error(error);\n            return false;\n        }\n    }\n\n    const tokenPost = async (postType: POST_TYPES, body?: {}): Promise<AuthPostResponse> => {\n        if (!g.mounted) {\n            await initAuth();\n        }\n\n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n            method: \"POST\",\n            headers: {\n                'Eb-Post-Req': postType,\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                _auth: generateAuthBody(),\n                ...body\n            })\n        });\n\n        const resData = await res.json();\n\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n            if (resData.ErrorCode === \"TokenExpired\") {\n                if (integrationType === \"PROJECT\") {\n                    try {\n                        const req_res = await tokenPost(POST_TYPES.REQUEST_TOKEN, {\n                            refreshToken: g.refreshToken,\n                            token: g.token\n                        });\n                        if (req_res.success) {\n                            g.token = req_res.data.token\n                            g.newTokenCallback();\n                            return tokenPost(postType, body);\n                        } else {\n                            throw new Error(req_res.data || \"Error\");\n                        }\n                    } catch (error) {\n                        _clearTokens();\n                        return {\n                            success: false,\n                            data: error.message || error\n                        }\n                    }\n                } else {\n                    await initAuth();\n                }\n                return tokenPost(postType, body);\n            } else {\n                const err = new Error(resData.body || resData.ErrorCode || resData.code || \"Error\");\n                (err as any).errorCode = resData.ErrorCode || resData.code;\n                throw err;\n            }\n        } else {\n            return {\n                success: resData.success,\n                data: resData.body\n            }\n        }\n    }\n\n    const tokenPostAttachment = async (formData: FormData, customHeaders: {}): Promise<AuthPostResponse> => {\n        if (!g.mounted) {\n            await initAuth();\n        }\n\n        const regularAuthbody = generateAuthBody();\n\n        const attachmentAuth = {\n            'Eb-token': regularAuthbody.token,\n            'Eb-token-time': regularAuthbody.token_time,\n            'Eb-now': regularAuthbody.now\n        };\n\n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n            method: \"POST\",\n            headers: {\n                'Eb-Post-Req': POST_TYPES.UPLOAD_ATTACHMENT,\n                ...customHeaders,\n                ...attachmentAuth\n            },\n            body: formData\n        });\n\n        const resData = await res.json();\n\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n            if (resData.ErrorCode === \"TokenExpired\") {\n                if (integrationType === \"PROJECT\") {\n                    try {\n                        const req_res = await tokenPost(POST_TYPES.REQUEST_TOKEN, {\n                            refreshToken: g.refreshToken,\n                            token: g.token\n                        });\n\n                        if (req_res.success) {\n                            g.token = req_res.data.token\n                            g.newTokenCallback();\n                            return tokenPostAttachment(formData, customHeaders);\n                        } else {\n                            throw new Error(req_res.data || \"Error\");\n                        }\n                    } catch (error) {\n                        _clearTokens();\n                        return {\n                            success: false,\n                            data: error.message || error\n                        }\n                    }\n                } else {\n                    await initAuth();\n                }\n                return tokenPostAttachment(formData, customHeaders);\n            } else {\n                const err = new Error(resData.body || resData.ErrorCode || resData.code || \"Error\");\n                (err as any).errorCode = resData.ErrorCode || resData.code;\n                throw err;\n            }\n        } else {\n            return {\n                success: resData.success,\n                data: resData.body\n            }\n        }\n    }\n\n    return {\n        initAuth,\n        tokenPost,\n        tokenPostAttachment,\n        signUp,\n        setUserAttribute,\n        getUserAttributes,\n        signIn,\n        signOut,\n        resetUserPassword,\n        forgotPassword,\n        forgotPasswordConfirm,\n        userID\n    }\n}\n","import {\n    POST_TYPES,\n    QueryOptions,\n    Globals\n} from \"./types\";\nimport _g from \"./g\";\n\nimport authFactory from \"./auth\";\n\nexport default function tableFactory(globals?: Globals): any {\n\n    const g = globals || _g;\n\n    const { tokenPost } = authFactory(g);\n\n    const Query = async (options: QueryOptions): Promise<Record<string, any>[]> => {\n        const defaultOptions: QueryOptions = {\n            queryName: \"\"\n        }\n    \n        const fullOptions: QueryOptions = { ...defaultOptions, ...options };\n\n        const res = await tokenPost(POST_TYPES.GET_QUERY, fullOptions);\n        if (res.success) {\n            g.analyticsEnabled && g.analyticsEventsToTrack.query && g.analyticsEvent('query', { queryName: fullOptions.queryName, tableName: fullOptions.tableName || undefined });\n            return res.data\n        } else {\n            return [];\n        }\n    }\n\n    async function fullTableSize(): Promise<number>;\n    async function fullTableSize(tableName: string): Promise<number>;\n    async function fullTableSize(tableName?: string): Promise<number> {\n        const res = await tokenPost(POST_TYPES.TABLE_SIZE, tableName ? { tableName } : {});\n        if (res.success) {\n            g.analyticsEnabled && g.analyticsEventsToTrack.full_table_size && g.analyticsEvent('full_table_size', { tableName: tableName || undefined });\n            return res.data;\n        } else {\n            return 0;\n        }\n    }\n\n    async function tableTypes(): Promise<Record<string, any>>;\n    async function tableTypes(tableName: string): Promise<Record<string, any>>\n    async function tableTypes(tableName?: string): Promise<Record<string, any>> {\n        const res = await tokenPost(POST_TYPES.COLUMN_TYPES, tableName ? { tableName } : {});\n        if (res.success) {\n            g.analyticsEnabled && g.analyticsEventsToTrack.table_types && g.analyticsEvent('table_types', { tableName: tableName || undefined });\n            return res.data;\n        } else {\n            return {};\n        }\n    }\n\n    return {\n        Query,\n        fullTableSize,\n        tableTypes\n    };\n}","/** Returns a function the creates a new context */\nconst createNewContext = defaultContext => {\n    const { parameterize, escape, mapKey, build } = defaultContext\n\n    return (inherit = {}) => {\n        const { params = [], unparameterized = false } = inherit\n\n        const whr = []\n        return {\n            // properties set by the EasyQB instance\n            parameterize,\n            escape,\n            mapKey,\n            build,\n\n            // properties inherited from the parent query\n            params,\n            unparameterized,\n\n            // properties of the current query\n            type: 'select',\n            // | sql' | 'select' | 'delete' | 'insert' | 'update'\n            target: whr,\n            join: undefined,\n            separator: ' ',\n            sql: [],\n            ret: [],\n            frm: [],\n            whr,\n            grp: [],\n            hav: [],\n            setop: [],\n            ord: [],\n            with: [],\n            set: []\n\n            // properties that may be added dynamically:\n            // userType\n            // distinct\n        }\n    }\n}\n\nmodule.exports = createNewContext\n","const createNewContext = require('./context')\nconst createQueryBuilder = ({ defaultContext, query, e, config }) => {\n    const { queries, methods, properties } = query\n    const newContext = createNewContext(defaultContext)\n    const reducers = createReducers(methods)\n    const updateContext = applyReducers(reducers)\n    reducers.extend = (ctx, args) => {\n        const arr = Array.isArray(args[0]) ? args[0] : args\n        for (let i = 0; i < arr.length; ++i) {\n            updateContext(arr[i].method, ctx)\n        }\n    }\n    const builder = () => { } // must not be object literal\n    const chain = createChain(builder)\n\n    const executeProperties = {\n        one: {\n            value: async function () {\n                const ret = await config.oneCallback(this.query, config.tableName, config.userAssociatedRecordsOnly)\n                return ret;\n            }\n        },\n        all: {\n            value: async function () {\n                const ret = await config.allCallback(this.query, config.tableName, config.userAssociatedRecordsOnly)\n                return ret;\n            }\n        },\n        _tableName: {\n            get: function () {\n                return config.tableName\n            }\n        }\n    }\n\n    // EasyQB no access to from\n    const _methodProperties = methodProperties({ methods, chain });\n    delete _methodProperties.from;\n\n    Object.defineProperties(builder, {\n        ...builderProperties({ chain, newContext, updateContext, queries }),\n        ..._methodProperties,\n        ...executeProperties,\n        ...properties,\n        e: {\n            value: e\n        }\n    })\n    return chain()\n}\n\n/** Creates a new builder instance */\nconst createChain = prototype => {\n    const chain = method => {\n        const fn = (...args) => chain({ name: 'express', args, prev: method })\n        fn.method = method\n        Object.setPrototypeOf(fn, prototype)\n        return fn\n    }\n    return chain\n}\n\n/** Creates an object containing all method reducers */\nconst createReducers = methods => {\n    const reducers = {}\n    for (const name in methods) {\n        const { updateContext, properties = {} } = methods[name]\n        reducers[name] = updateContext\n        // some methods have subproperties, e.g. .unionAll\n        for (const key in properties) {\n            reducers[`${name}.${key}`] = properties[key]\n        }\n    }\n    return reducers\n}\n\n/** Follows a method chain, applying each method's reducer, to ctx */\nconst applyReducers = reducers => (method, ctx) => {\n    // follow method links to construct methods array (in reverse)\n    const methods = []\n    for (; method !== undefined; method = method.prev) {\n        methods.push(method)\n    }\n    // build methods object by processing methods in call order\n    const express = { id: 0 }\n    for (let i = methods.length - 1; i >= 0; --i) {\n        const method = methods[i]\n        reducers[method.name](ctx, method.args, express)\n    }\n    return ctx\n}\n\n/** Default properties of all SQL Query Builders */\nconst builderProperties = ({ newContext, updateContext, queries }) => ({\n    _build: {\n        value: function (inheritedContext) {\n            const ctx = updateContext(this.method, newContext(inheritedContext))\n            return queries[ctx.type](ctx)\n        }\n    },\n    query: {\n        get: function () {\n            return this._build()\n        }\n    },\n    unparameterized: {\n        get: function () {\n            return this._build({ unparameterized: true }).text\n        }\n    }\n})\n\n/** Builds object containing a property for every query building method */\nconst methodProperties = ({ methods, chain }) => {\n    const properties = {}\n    for (const name in methods) {\n        const { getter } = methods[name]\n        if (getter) {\n            // add getter methods\n            properties[name] = {\n                get: function () {\n                    return chain({ name, prev: this.method })\n                }\n            }\n        } else {\n            // add function call methods\n            properties[name] = {\n                value: function (...args) {\n                    return chain({ name, args, prev: this.method })\n                }\n            }\n        }\n    }\n    return properties\n}\n\nmodule.exports = createQueryBuilder","const isTaggedTemplate = ([strings]) => Array.isArray(strings) && strings.raw\n\nconst buildTaggedTemplate = (ctx, [strings, ...args]) => {\n  let txt = strings[0]\n  for (let i = 0; i < args.length; ++i) {\n    txt += ctx.build(args[i]) + strings[i + 1]\n  }\n  return txt\n}\n\nmodule.exports = {\n  isTaggedTemplate,\n  buildTaggedTemplate\n}","const { isTaggedTemplate, buildTaggedTemplate } = require('./tagged_template')\n\nconst isObject = arg => arg && arg.constructor.prototype === Object.prototype\n\nconst buildCall = callbackfn => (ctx, args) =>\n  isTaggedTemplate(args)\n    ? buildTaggedTemplate(ctx, args)\n    : callbackfn(ctx, args)\n\nconst mapJoin = (callbackfn, separator = ', ') => (ctx, args) => {\n  let txt = ''\n  for (let i = 0; i < args.length; ++i) {\n    if (i !== 0) txt += separator\n    txt += callbackfn(ctx, args[i])\n  }\n  return txt\n}\n\nconst mapJoinWrap = (callbackfn, separator = ', ', open = '(', close = ')') => (\n  ctx,\n  args\n) => {\n  let txt = open\n  for (let i = 0; i < args.length; ++i) {\n    if (i !== 0) txt += separator\n    txt += callbackfn(ctx, args[i])\n  }\n  return txt + close\n}\n\nconst objectMapJoin = (callbackfn, separator = ', ') => (ctx, object) => {\n  let txt = ''\n  const keys = Object.keys(object)\n  for (let i = 0; i < keys.length; ++i) {\n    if (i !== 0) txt += separator\n    const key = keys[i]\n    txt += callbackfn(ctx, key, object[key])\n  }\n  return txt\n}\n\nmodule.exports = {\n  isObject,\n  buildCall,\n  mapJoin,\n  mapJoinWrap,\n  objectMapJoin\n}","// included to mitigate cost of case conversion\nconst memoize = fn => {\n  const cache = {}\n  return key => cache[key] || (cache[key] = fn(key))\n}\n\nconst normalKey = given_key => given_key.indexOf('(') === -1 ? given_key.toLowerCase().trim().replace(/ /g, '_') : given_key;\n\nmodule.exports = {\n  memoize,\n  normalKey\n}","const buildUtils = require('./build_utils')\nconst changeCase = require('./change_case')\nconst taggedTemplate = require('./tagged_template')\n\nmodule.exports = {\n  ...buildUtils,\n  ...changeCase,\n  ...taggedTemplate\n}","const { isTaggedTemplate } = require('../lib-util')\n\nconst createExpressionCompiler = expressionTable => {\n  const callsCompiler = createCallsCompiler(expressionTable)\n  return (ctx, current) => {\n    const calls = buildCalls(current)\n    const text = callsCompiler(ctx, calls)\n    return {\n      text,\n      args: ctx.params,\n      type: 'expression'\n    }\n  }\n}\n\n// TODO: Performance optimization:\n// inline expression building with this method so at most only one array\n// is allocated in total, no array of object containing arrays nonsense\nconst buildCalls = current => {\n  // get call nodes\n  const calls = []\n  for (; current; current = current.prev) calls.push(current)\n  if (calls.length === 0) throw Error('Error: Empty expression')\n\n  // build expression list\n  let expression = { name: 'arg', args: [] }\n  const expressions = [expression]\n  const last = calls.length - 1\n  for (let i = last; i >= 0; --i) {\n    const { name, args } = calls[i]\n    if (i === last) {\n      if (name) expression.name = name\n      else pushCall(expression.args, args)\n    } else {\n      if (name) expressions.push((expression = { name, args: [undefined] }))\n      else pushCall(expression.args, args)\n    }\n  }\n  return expressions\n}\n\nconst pushCall = (array, args) => {\n  if (isTaggedTemplate(args)) {\n    array.push({ tag: args })\n  } else {\n    if (args.length === 0)\n      throw Error('Error: Expression call requires at least one argument')\n    for (let i = 0; i < args.length; ++i) {\n      array.push({ arg: args[i] })\n    }\n  }\n}\n\nconst createCallsCompiler = expressionTable => (ctx, calls) => {\n  let exp\n  for (let i = 0; i < calls.length; ++i) {\n    const { name, args } = calls[i]\n    const { build, minArgs, maxArgs } = expressionTable[name]\n    if (i !== 0) args[0] = { exp }\n    const numArgs = args.length\n    if (numArgs < minArgs)\n      throw Error(`Error: ${name} requires at least ${minArgs} arguments`)\n    if (numArgs > maxArgs)\n      throw Error(`Error: ${name} accepts at most ${maxArgs} arguments`)\n    exp = build(ctx, args)\n  }\n  return exp\n}\n\nmodule.exports = createExpressionCompiler\n","const createExpressionCompiler = require('./compile')\nconst { normalKey } = require('../lib-util');\n\nconst aggregator = (op) => (columnName) => `${op}(${normalKey(columnName)})`;\n\nmodule.exports = ({ defaultContext, expression }) => {\n  const { expressions } = expression\n  const newContext = createNewContext(defaultContext)\n  const compile = createExpressionCompiler(expressions)\n  const builder = () => {} // must not be object literal\n  const chain = createChain(builder)\n  Object.defineProperties(builder, {\n    ...builderProperties({ compile, newContext }),\n    ...methodProperties({ expressions, chain }),\n  })\n  const ret = chain();\n  ret.max = aggregator('max');\n  ret.min = aggregator('min');\n  ret.avg = aggregator('avg');\n  ret.count = aggregator('count');\n  ret.sum = aggregator('sum');\n  return ret;\n}\n\nconst builderProperties = ({ compile, newContext }) => ({\n  _build: {\n    value: function(inherit) {\n      return compile(newContext(inherit), this.current)\n    }\n  },\n  query: {\n    get: function() {\n      return this._build()\n    }\n  },\n  unparameterized: {\n    get: function() {\n      return this._build({ unparameterized: true }).text\n    }\n  }\n})\n\nconst createNewContext = defaultContext => {\n  const { build, parameterize, escape, mapKey } = defaultContext\n  return inherit => {\n    const { params = [], unparameterized = false } = inherit || {}\n    return {\n      // EasyQB instance properties\n      build,\n      parameterize,\n      escape,\n      mapKey,\n\n      // inherited properties\n      params,\n      unparameterized\n    }\n  }\n}\n\nconst createChain = prototype => {\n  const chain = current => {\n    const fn = (...args) => chain({ prev: current, args })\n    fn.current = current\n    Object.setPrototypeOf(fn, prototype)\n    return fn\n  }\n  return chain\n}\n\nconst methodProperties = ({ expressions, chain }) => {\n  const properties = {}\n  for (const name in expressions) {\n    properties[name] = {\n      get: function() {\n        return chain({ prev: this.current, name })\n      }\n    }\n  }\n  return properties\n}\n","const createQueryBuilder = require('../builder-sq')\nconst createExpressionBuilder = require('../builder-expression')\nconst { memoize, normalKey } = require('../lib-util')\n\n\n/**\n * Creates a version of EasyQB for the given SQL dialect and database adapter.\n *\n * A dialect is variant of the SQL language,\n * while an adapter is the driver that communicates with the database.\n *\n * This design makes it easy to swap drivers, e.g. mysql vs mysql2 or\n * add new databases just by connecting a new adapter to an existing dialect.\n *\n */\n\nconst createSqorn = ({ dialect }) => (config = {}) => {\n  const { query, expression, parameterize, escape } = dialect\n\n  // 1. Create default context properties passed through build tree\n  const mapKey = memoize(normalKey)\n  const defaultContext = { parameterize, escape, mapKey, build }\n\n  // 2. Create Expression Builder\n  const e = createExpressionBuilder({ defaultContext, expression })\n\n  // 3. Create Query Builder\n  const sq = createQueryBuilder({ defaultContext, query, e, config })\n\n  // 4. TODO: Build Executor, Attach e and execute functions\n\n  // 5. TODO: Return { sq, e, transaction, db }\n  return sq\n}\n\nfunction build(arg) {\n  if (arg === undefined) throw Error('Error: undefined argument')\n  if (typeof arg === 'function') {\n    if (arg._build) {\n      const { type, text } = arg._build(this)\n      if (type === 'expression') return text\n      if (type === 'fragment') return text\n      return `(${text})`\n    }\n    return arg(this)\n  }\n  return this.unparameterized ? this.escape(arg) : this.parameterize(arg)\n}\n\nmodule.exports = createSqorn","const { normalKey } = require('../lib-util')\n\n/** Query building methods */\nconst methods = {\n    with: {\n        updateContext: (ctx, args) => {\n            ctx.with.push(args)\n        }\n    },\n    withRecursive: {\n        updateContext: (ctx, args) => {\n            ctx.recursive = true\n            ctx.with.push(args)\n        }\n    },\n    from: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push({ args, join: ', ' })\n        }\n    },\n    where: {\n        updateContext: (ctx, args) => {\n            ctx.whr.push(args)\n            ctx.target = ctx.whr\n        }\n    },\n    return: {\n        updateContext: (ctx, args) => {\n            ctx.ret.push(Array.isArray(args) ? args.map(normalKey) : args)\n        }\n    },\n    distinct: {\n        getter: true,\n        updateContext: ctx => {\n            ctx.distinct = []\n        }\n    },\n    groupBy: {\n        updateContext: (ctx, args) => {\n            ctx.grp.push(args)\n        }\n    },\n    having: {\n        updateContext: (ctx, args) => {\n            ctx.hav.push(args)\n            ctx.target = ctx.hav\n        }\n    },\n    union: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'union', args })\n        }\n    },\n    unionAll: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'union all', args })\n        }\n    },\n    intersect: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'intersect', args })\n        }\n    },\n    intersectAll: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'intersect all', args })\n        }\n    },\n    except: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'except', args })\n        }\n    },\n    exceptAll: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'except all', args })\n        }\n    },\n    orderBy: {\n        updateContext: (ctx, args) => {\n            ctx.ord.push(args)\n        }\n    },\n    limit: {\n        updateContext: (ctx, args) => {\n            ctx.limit = args\n        }\n    },\n    offset: {\n        updateContext: (ctx, args) => {\n            ctx.offset = args\n        }\n    },\n    join: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' join ' }))\n        }\n    },\n    leftJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' left join ' }))\n        }\n    },\n    rightJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' right join ' }))\n        }\n    },\n    fullJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' full join ' }))\n        }\n    },\n    crossJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' cross join ' }))\n        }\n    },\n    naturalJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' natural join ' }))\n        }\n    },\n    naturalLeftJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' natural left join ' }))\n        }\n    },\n    naturalRightJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' natural right join ' }))\n        }\n    },\n    naturalFullJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' natural full join ' }))\n        }\n    },\n    on: {\n        updateContext: (ctx, args) => {\n            const { join } = ctx\n            if (join.on) {\n                join.on.push(args)\n            } else {\n                ctx.target = join.on = [args]\n            }\n        }\n    },\n    using: {\n        updateContext: (ctx, args) => {\n            const { join } = ctx\n            if (join.using) {\n                join.using.push(args)\n            } else {\n                join.using = [args]\n            }\n        }\n    },\n    delete: {\n        // getter: true,\n        updateContext: ctx => {\n            ctx.type = 'delete'\n        }\n    },\n    insert: {\n        updateContext: (ctx, args) => {\n            ctx.type = 'insert'\n            ctx.insert = args\n        }\n    },\n    set: {\n        updateContext: (ctx, args) => {\n            ctx.type = 'update'\n            ctx.set.push(args)\n        }\n    },\n    express: {\n        updateContext: (ctx, args, count) => {\n            if (count.id === 0) {\n                count.id++\n                ctx.frm.push((ctx.join = { type: 'from', args, join: ', ' }))\n            } else if (count.id === 1) {\n                count.id++\n                ctx.whr.push(args)\n            } else if (count.id === 2) {\n                count.id++\n                ctx.ret.push(args)\n            } else throw Error('Invalid express call')\n        }\n    }\n}\n\nmodule.exports = methods;","const { mapJoin } = require('../../lib-util')\n\nmodule.exports = (ctx, array) => {\n  const keys = uniqueKeys(array)\n  return {\n    columns: columns(ctx, keys),\n    values: values(ctx, array, keys)\n  }\n}\n\n// gets unique keys in object array\nconst uniqueKeys = array => {\n  const keys = {}\n  for (const object of array) {\n    for (const key in object) {\n      keys[key] = true\n    }\n  }\n  return Object.keys(keys)\n}\n\n// gets column string from unique keys of object array\nconst columns = mapJoin((ctx, arg) => ctx.mapKey(arg))\n\n// gets values string of object array\nconst values = (ctx, source, keys) => {\n  let txt = 'values '\n  for (let i = 0; i < source.length; ++i) {\n    if (i !== 0) txt += ', '\n    txt += '('\n    const object = source[i]\n    for (let j = 0; j < keys.length; ++j) {\n      if (j !== 0) txt += ', '\n      txt += value(ctx, object[keys[j]])\n    }\n    txt += ')'\n  }\n  return txt\n}\n\nconst value = (ctx, arg) => {\n  if (arg === undefined) return 'default'\n  return ctx.build(arg)\n}\n","const {\n  isObject,\n  buildCall,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util')\nconst valuesArray = require('../common/values_array')\n\nmodule.exports = ctx => {\n  if (ctx.with.length === 0) return\n  const txt = calls(ctx, ctx.with)\n  return txt && `with ${ctx.recursive ? 'recursive ' : ''}${txt}`\n}\n\nconst buildArg = (ctx, arg) => {\n  if (isObject(arg)) return buildObject(ctx, arg)\n  throw Error('Invalid with argument:', arg)\n}\n\nconst buildProperty = (ctx, key, value) => {\n  if (typeof value === 'function') {\n    return `${ctx.mapKey(key)} ${ctx.build(value)}`\n  }\n  if (Array.isArray(value)) {\n    const { columns, values } = valuesArray(ctx, value)\n    return `${ctx.mapKey(key)}(${columns}) (${values})`\n  }\n  throw Error(`Error: Invalid .with argument`)\n}\n\nconst buildObject = objectMapJoin(buildProperty)\nconst calls = mapJoin(buildCall(mapJoin(buildArg)))\n","const {\n  isObject,\n  buildCall,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util')\n\nconst buildArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (isObject(arg)) return buildObject(ctx, arg)\n  return ctx.build(arg)\n}\n\nconst buildProperty = (ctx, key, value) => {\n  const expression = typeof value === 'string' ? value : ctx.build(value)\n  return `${expression} ${ctx.mapKey(key)}`\n}\n\nconst buildObject = objectMapJoin(buildProperty)\nmodule.exports = mapJoin(buildCall(mapJoin(buildArg)))\n","const expressions = require('../common/expressions')\n\nmodule.exports = ctx =>\n  `select ${buildDistinct(ctx)}${expressions(ctx, ctx.ret) || '*'}`\n\nconst buildDistinct = ctx =>\n  ctx.distinct\n    ? ctx.distinct.length\n      ? // TODO: expressions shouldn't be aliasable here\n        `distinct on (${expressions(ctx, ctx.distinct)})`\n      : 'distinct'\n    : ''\n","const {\n  isTaggedTemplate,\n  buildTaggedTemplate,\n  isObject,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util')\n\nconst buildCall = callbackfn => (ctx, args) =>\n  isTaggedTemplate(args)\n    ? `(${buildTaggedTemplate(ctx, args)})`\n    : callbackfn(ctx, args)\n\nconst buildArg = (ctx, arg) =>\n  isObject(arg) ? buildObject(ctx, arg) : ctx.build(arg)\n\nconst valuesList = mapJoin((ctx, arg) => ctx.build(arg))\n\nconst buildProperty = (ctx, key, value) => {\n  const name = ctx.mapKey(key)\n  if (value === null) return `(${name} is null)`\n  if (Array.isArray(value)) return `(${name} in (${valuesList(ctx, value)}))`\n  return `(${name} = ${ctx.build(value)})`\n}\n\nconst buildObject = objectMapJoin(buildProperty, ' and ')\nmodule.exports = mapJoin(buildCall(mapJoin(buildArg, ' and ')), ' and ')\n","const {\n  isObject,\n  buildCall,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util')\nconst conditions = require('./conditions')\nconst valuesArray = require('./values_array')\n\nmodule.exports = (ctx, items, start = 0, end = items.length) => {\n  if (end > items.length) end = items.length\n  let txt = ''\n  for (let i = start; i < end; ++i) {\n    const item = items[i]\n    if (i !== start) txt += item.join\n    txt += fromItem(ctx, item.args)\n    if (item.on) txt += ` on ${conditions(ctx, item.on)}`\n    else if (item.using) txt += ` using (${using(ctx, item.using)})`\n  }\n  return txt\n}\n\nconst usingArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  throw Error('Error: Invalid .using arg')\n}\nconst using = mapJoin(buildCall(mapJoin(usingArg)))\n\nconst fromArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  if (isObject(arg)) return buildObject(ctx, arg)\n  throw Error('Error: Invalid .from argument:', arg)\n}\n\nconst buildProperty = (ctx, key, value) => {\n  if (typeof value === 'string') return `${value} ${ctx.mapKey(key)}`\n  if (typeof value === 'function')\n    return `${ctx.build(value)} ${ctx.mapKey(key)}`\n  if (Array.isArray(value)) {\n    const { columns, values } = valuesArray(ctx, value)\n    return `(${values}) ${ctx.mapKey(key)}(${columns})`\n  }\n  throw Error('Error: Invalid .from argument')\n}\n\nconst buildObject = objectMapJoin(buildProperty)\nconst fromItem = buildCall(mapJoin(fromArg))\n","const fromItems = require('../common/from_items')\n\nmodule.exports = ctx => {\n  const txt = fromItems(ctx, ctx.frm)\n  return txt && `from ${txt}`\n}\n","const conditions = require('../common/conditions')\n\nmodule.exports = ctx => {\n  if (ctx.whr.length === 0) return\n  const txt = conditions(ctx, ctx.whr)\n  return txt && 'where ' + txt\n}\n","const { isObject, buildCall, mapJoin, mapJoinWrap } = require('../../lib-util')\n\nmodule.exports = ctx => {\n  if (ctx.grp.length === 0) return\n  const txt = calls(ctx, ctx.grp)\n  return txt && `group by ${txt}`\n}\n\nconst buildArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  if (Array.isArray(arg)) return buildArrayArg(ctx, arg)\n  if (isObject(arg)) return buildObject(ctx, arg)\n  throw Error('Invalid order by argument:', arg)\n}\n\nconst buildArrayArg = mapJoinWrap(buildArg)\n\n// postgres only\n// clone of buildArg() without support for object args\nconst buildCubeOrRollupArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  if (Array.isArray(arg)) return buildCubeOrRollupArrayArg(ctx, arg)\n  throw Error('Invalid cube/rollup argument')\n}\n\n// postgres only\n// clone of buildArrayArg() without support for object args\nconst buildCubeOrRollupArrayArg = mapJoinWrap(buildCubeOrRollupArg)\n\n// postgres only\nconst buildObject = (ctx, obj) => {\n  const { type, args } = obj\n  if (type === 'rollup') {\n    return `rollup ${buildCubeOrRollupArg(ctx, args)}`\n  }\n  if (type === 'cube') {\n    return `cube ${buildCubeOrRollupArg(ctx, args)}`\n  }\n  if (type === 'grouping sets') {\n    return `grouping sets ${buildArg(ctx, args)}`\n  }\n  throw Error('Invalid group by argument')\n}\n\nconst calls = mapJoin(buildCall(mapJoin(buildArg)))\n","const conditions = require('../common/conditions')\n\nmodule.exports = ctx => {\n  if (ctx.hav.length === 0) return\n  const txt = conditions(ctx, ctx.hav)\n  return txt && 'having ' + txt\n}\n","module.exports = ctx => {\n  if (ctx.setop.length === 0) return\n  let txt = ''\n  let first = true\n  const { setop } = ctx\n  for (let i = 0; i < setop.length; ++i) {\n    const { type, args } = ctx.setop[i]\n    for (let j = 0; j < args.length; ++j) {\n      if (!first) {\n        txt += ' '\n      } else {\n        first = false\n      }\n      txt += `${type} ${ctx.build(args[j])}`\n    }\n  }\n  return txt\n}\n","const { isObject, buildCall, mapJoin } = require('../../lib-util')\n\nmodule.exports = ctx => {\n  if (ctx.ord.length === 0) return\n  const txt = calls(ctx, ctx.ord)\n  return txt && `order by ${txt}`\n}\n\nconst buildArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  if (isObject(arg)) return buildObject(ctx, arg)\n  throw Error('Invalid order by argument:', arg)\n}\n\nconst buildObject = (ctx, obj) => {\n  let txt = ''\n  const { by, sort, using, nulls } = obj\n  // by\n  if (typeof by === 'string') txt += by\n  else if (typeof by === 'function') txt += ctx.build(by)\n  else throw Error('Invalid order by property \"by\"')\n  // sort\n  if (sort) {\n    if (sort === 'desc') txt += ' desc'\n    else if (sort === 'asc') txt += ' asc'\n    else if (typeof sort === 'string') txt += ` using ${sort}`\n    else throw Error('Invalid order by property \"sort\"')\n  } else if (using) {\n    if (typeof using === 'string') txt += ` using ${using}`\n    else throw Error('Invalid order by property \"using\"')\n  }\n  // nulls\n  if (nulls === undefined);\n  else if (nulls === 'last') txt += ' nulls last'\n  else if (nulls === 'first') txt += ' nulls first'\n  else throw Error('Invalid order by property \"nulls\"')\n  // return\n  return txt\n}\n\nconst calls = mapJoin(buildCall(mapJoin(buildArg)))\n","const { isTaggedTemplate, buildTaggedTemplate } = require('../../lib-util')\n\nmodule.exports = (ctx, args) => {\n  if (isTaggedTemplate(args)) return buildTaggedTemplate(ctx, args)\n  const arg = args[0]\n  if (typeof arg === 'number') return ctx.parameterize(arg)\n  if (typeof arg === 'function') return ctx.build(arg)\n  throw Error('Error: Invalid limit/offset argument')\n}\n","const limitOffset = require('../common/limit_offset')\n\nmodule.exports = ctx => ctx.limit && `limit ${limitOffset(ctx, ctx.limit)}`\n","const limitOffset = require('../common/limit_offset')\n\nmodule.exports = ctx => ctx.offset && `offset ${limitOffset(ctx, ctx.offset)}`\n","const fromItems = require('../common/from_items')\n\nmodule.exports = ctx => {\n  const txt = fromItems(ctx, ctx.frm)\n  return txt && `delete from ${txt}`\n}\n","const expressions = require('../common/expressions')\n\nmodule.exports = ctx => {\n  if (!ctx.ret) return\n  const txt = expressions(ctx, ctx.ret)\n  return txt && `returning ${txt}`\n}\n","const { isTaggedTemplate, buildTaggedTemplate } = require('../../lib-util')\nconst fromItems = require('../common/from_items')\nconst valuesArray = require('../common/values_array')\n\nmodule.exports = ctx => {\n  const table = fromItems(ctx, ctx.frm)\n  const values = buildCall(ctx, ctx.insert)\n  return `insert into ${table}${values}`\n}\n\nconst buildCall = (ctx, args) => {\n  if (isTaggedTemplate(args)) return ' ' + buildTaggedTemplate(ctx, args)\n  if (args.length === 1 && args[0] === undefined) return ' default values'\n  if (Array.isArray(args[0])) return buildValuesArray(ctx, args[0])\n  if (typeof args[0] === 'function') return ' ' + ctx.build(args[0])\n  return buildValuesArray(ctx, args)\n}\n\nconst buildValuesArray = (ctx, array) => {\n  const { values, columns } = valuesArray(ctx, array)\n  return `(${columns}) ${values}`\n}\n","const fromItems = require('../common/from_items')\n\nmodule.exports = ctx => {\n  const txt = fromItems(ctx, ctx.frm)\n  return txt && `update ${txt}`\n}\n","const { buildCall, mapJoin, objectMapJoin } = require('../../lib-util')\n\nmodule.exports = ctx => {\n  if (!ctx.set) return\n  const txt = calls(ctx, ctx.set)\n  return txt && 'set ' + txt\n}\n\nconst buildProperty = (ctx, key, value) =>\n  `${ctx.mapKey(key)} = ${ctx.build(value)}`\n\nconst calls = mapJoin(buildCall(mapJoin(objectMapJoin(buildProperty))))\n","module.exports = {\n  wth: require('./with'),\n  select: require('./select'),\n  from: require('./from'),\n  where: require('./where'),\n  group: require('./group'),\n  having: require('./having'),\n  setop: require('./setop'),\n  order: require('./order'),\n  limit: require('./limit'),\n  offset: require('./offset'),\n  del: require('./delete'),\n  returning: require('./returning'),\n  insert: require('./insert'),\n  update: require('./update'),\n  set: require('./set')\n}\n","const {\n    wth,\n    select,\n    from,\n    where,\n    group,\n    having,\n    setop,\n    order,\n    limit,\n    offset,\n    del,\n    returning,\n    insert,\n    update,\n    set,\n} = require('./clauses')\n\nconst query = (...clauses) => ctx => {\n    let text = ''\n    for (const clause of clauses) {\n        const str = clause && clause(ctx)\n        if (str) {\n            if (text) text += ctx.separator\n            text += str\n        }\n    }\n    return { text, args: ctx.params, type: ctx.userType || ctx.type }\n}\n\nconst queries = {\n    select: query(\n        wth,\n        select,\n        from,\n        where,\n        group,\n        having,\n        setop,\n        order,\n        limit,\n        offset\n    ),\n    update: query(wth, update, set, where, returning),\n    delete: query(wth, del, where, returning),\n    insert: query(wth, insert, returning)\n}\n\nmodule.exports = { query, queries }","const conditions = require('./conditions')\nconst expressions = require('./expressions')\nconst fromItems = require('./from_items')\nconst limitOffset = require('./limit_offset')\nconst valuesArray = require('./values_array')\n\nmodule.exports = {\n  conditions,\n  expressions,\n  fromItems,\n  limitOffset,\n  valuesArray\n}\n","const methods = require('./methods')\nconst { query, queries } = require('./query')\nconst clauses = require('./clauses')\nconst common = require('./common')\n\nmodule.exports = {\n  methods,\n  query,\n  queries,\n  clauses,\n  common\n}","const { methods, queries, query, clauses, common } = require('../lib-sq')\n\nconst { fromItems, expressions } = common\nconst {\n  wth,\n  from,\n  where,\n  group,\n  having,\n  setop,\n  order,\n  limit,\n  offset,\n  returning,\n  set\n} = clauses\n\nconst postgresMethods = {\n  distinctOn: {\n    updateContext: (ctx, args) => {\n      if (ctx.distinct) {\n        ctx.distinct.push(args)\n      } else {\n        ctx.distinct = [args]\n      }\n    }\n  }\n}\n\n// SELECT supports .distinctOn(...expressions)\nconst select = ctx => {\n  let txt = 'select '\n  if (ctx.distinct) {\n    txt += 'distinct '\n    if (ctx.distinct.length) {\n      txt += `on (${expressions(ctx, ctx.distinct)}) `\n    }\n  }\n  txt += expressions(ctx, ctx.ret) || '*'\n  return txt\n}\n// DELETE: first .from call is used in the DELETE clause\n// subsequent .from calls are used in the USING clause\nconst del = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 0, 1)\n  return txt && `delete from ${txt}`\n}\nconst using = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 1)\n  return txt && `using ${txt}`\n}\n// UPDATE: first .from call is used in the UPDATE clause\n// subsequent .from calls are used in the FROM clause\nconst update = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 0, 1)\n  return txt && `update ${txt}`\n}\nconst updateFrom = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 1)\n  return txt && `from ${txt}`\n}\n\nmodule.exports = {\n  methods: { ...methods, ...postgresMethods },\n  queries: {\n    ...queries,\n    select: query(\n      wth,\n      select,\n      from,\n      where,\n      group,\n      having,\n      setop,\n      order,\n      limit,\n      offset\n    ),\n    delete: query(wth, del, using, where, returning),\n    update: query(wth, update, set, updateFrom, where, returning)\n  },\n  properties: {\n    rollup: {\n      value: (...args) => {\n        return {\n          type: 'rollup',\n          args\n        }\n      }\n    },\n    cube: {\n      value: (...args) => {\n        return {\n          type: 'cube',\n          args\n        }\n      }\n    },\n    groupingSets: {\n      value: (...args) => {\n        return {\n          type: 'grouping sets',\n          args\n        }\n      }\n    }\n  }\n}","const { buildTaggedTemplate } = require('../lib-util')\n\nconst dateToYYYYMMDD = d => [\n    d.getFullYear(),\n    ('0' + (d.getMonth() + 1)).slice(-2),\n    ('0' + d.getDate()).slice(-2)\n].join('-');\n\nconst build = (ctx, arg) => {\n    // compiled expression string\n    if (arg.exp) return arg.exp\n    // tagged template argument\n    if (arg.tag) return buildTaggedTemplate(ctx, arg.tag)\n    // expression, subquery or fragment argument\n    return ctx.build(arg.arg)\n}\n\nconst unaryPre = op => ({\n    minArgs: 1,\n    maxArgs: 1,\n    build: (ctx, args) => `(${op} ${build(ctx, args[0])})`\n})\n\nconst unaryPost = op => ({\n    minArgs: 1,\n    maxArgs: 1,\n    build: (ctx, args) => `(${build(ctx, args[0])} ${op})`\n})\n\nconst unaryFunction = op => ({\n    minArgs: 1,\n    maxArgs: 1,\n    build: (ctx, args) => `${op}(${build(ctx, args[0])})`\n})\n\nconst binary = op => ({\n    minArgs: 2,\n    maxArgs: 2,\n    build: (ctx, args) => `(${build(ctx, args[0])} ${op} ${build(ctx, args[1])})`\n})\n\nconst dateBinary = op => ({\n    minArgs: 2,\n    maxArgs: 2,\n    build: (ctx, args) => {\n        const inDate = args[1].arg;\n        if (typeof inDate.getMonth === 'function') {\n            args[1].arg = dateToYYYYMMDD(inDate);\n        }\n        return `date(${build(ctx, args[0])}, 'YYYY-MM-DD') ${op} ${build(ctx, args[1])}`\n    }\n})\n\n\nconst ternary = (op1, op2) => ({\n    minArgs: 3,\n    maxArgs: 3,\n    build: (ctx, args) =>\n        `(${build(ctx, args[0])} ${op1} ${build(ctx, args[1])} ${op2} ${build(\n            ctx,\n            args[2]\n        )})`\n})\n\nconst nary = op => ({\n    minArgs: 1,\n    maxArgs: Number.MAX_SAFE_INTEGER,\n    build: (ctx, args) => {\n        if (args.length === 1) return build(ctx, args[0])\n        let txt = '('\n        for (let i = 0; i < args.length; ++i) {\n            if (i !== 0) txt += ` ${op} `\n            txt += build(ctx, args[i])\n        }\n        return txt + ')'\n    }\n})\n\nconst naryFunction = fn => ({\n    minArgs: 1,\n    maxArgs: Number.MAX_SAFE_INTEGER,\n    build: (ctx, args) => {\n        let txt = `${fn}(`\n        for (let i = 0; i < args.length; ++i) {\n            if (i !== 0) txt += `, `\n            txt += build(ctx, args[i])\n        }\n        return txt + ')'\n    }\n})\n\nconst oneValue = {\n    minArgs: 1,\n    maxArgs: 1,\n    build: (ctx, args) => build(ctx, args[0])\n}\n\nconst compositeValue = {\n    minArgs: 1,\n    maxArgs: Number.MAX_SAFE_INTEGER,\n    build: (ctx, args) => {\n        if (args.length === 1) return build(ctx, args[0])\n        let txt = ''\n        for (let i = 0; i < args.length; ++i) {\n            if (i !== 0) txt += ', '\n            txt += build(ctx, args[i])\n        }\n        return args.length > 1 ? `(${txt})` : txt\n    }\n}\n\nconst buildValuesList = (ctx, values) => {\n    if (values.length === 0) throw Error('Error: .in operation values list empty')\n    let txt = '('\n    for (let i = 0; i < values.length; ++i) {\n        if (i !== 0) txt += ', '\n        txt += ctx.build(values[i])\n    }\n    return txt + ')'\n}\n\nconst membership = op => ({\n    minArgs: 2,\n    maxArgs: 2,\n    build: (ctx, [arg1, arg2]) =>\n        `(${build(ctx, arg1)} ${op} ${Array.isArray(arg2.arg)\n            ? buildValuesList(ctx, arg2.arg)\n            : build(ctx, arg2)\n        })`\n})\n\nconst quantifiedComparison = op => ({\n    minArgs: 2,\n    maxArgs: 2,\n    build: (ctx, args) => `(${build(ctx, args[0])} ${op}(${build(ctx, args[1])}))`\n})\n\nmodule.exports = {\n    build,\n    unaryFunction,\n    unaryPre,\n    unaryPost,\n    binary,\n    ternary,\n    nary,\n    naryFunction,\n    oneValue,\n    compositeValue,\n    membership,\n    quantifiedComparison,\n    dateBinary\n}\n","const {\n    unaryPre,\n    unaryPost,\n    unaryFunction,\n    binary,\n    ternary,\n    nary,\n    naryFunction,\n    oneValue,\n    compositeValue,\n    membership,\n    quantifiedComparison,\n    dateBinary\n} = require('./util')\n\n// value\nconst value = {\n    arg: compositeValue,\n    row: compositeValue,\n    unknown: oneValue,\n    boolean: oneValue,\n    number: oneValue,\n    string: oneValue,\n    array: oneValue,\n    json: oneValue,\n    table: oneValue\n}\n\n// boolean\nconst boolean = {\n    // logical\n    and: nary('and'),\n    or: nary('or'),\n    not: unaryFunction('not'),\n    // comparison\n    isTrue: unaryPost('is true'),\n    isNotTrue: unaryPost('is not true'),\n    isFalse: unaryPost('is false'),\n    isNotFalse: unaryPost('is not false'),\n    isUnknown: unaryPost('is unknown'),\n    isNotUnknown: unaryPost('is not unknown')\n}\n\n// comparison\nconst comparison = {\n    // binary comparison\n    eq: binary('='),\n    neq: binary('<>'),\n    lt: binary('<'),\n    gt: binary('>'),\n    lte: binary('<='),\n    gte: binary('>='),\n    // misc\n    between: ternary('between', 'and'),\n    isDistinctFrom: binary('is distinct from'),\n    isNotDistinctFrom: binary('is not distinct from'),\n    isNull: unaryPost('is null'),\n    isNotNull: unaryPost('is not null'),\n    in: membership('in'),\n    notIn: membership('not in'),\n    // quantified any\n    eqAny: quantifiedComparison('= any'),\n    neqAny: quantifiedComparison('<> any'),\n    ltAny: quantifiedComparison('< any'),\n    gtAny: quantifiedComparison('> any'),\n    lteAny: quantifiedComparison('<= any'),\n    gteAny: quantifiedComparison('>= any'),\n    // quantified all\n    eqAll: quantifiedComparison('= all'),\n    neqAll: quantifiedComparison('<> all'),\n    ltAll: quantifiedComparison('< all'),\n    gtAll: quantifiedComparison('> all'),\n    lteAll: quantifiedComparison('<= all'),\n    gteAll: quantifiedComparison('>= all')\n}\n\n// dates\nconst dateComparison = {\n    // dateEq: dateBinary('='),\n    // dateNeq: dateBinary('<>'),\n    dateLt: dateBinary('<'),\n    dateGt: dateBinary('>'),\n    dateLte: dateBinary('<='),\n    dateGte: dateBinary('>=')\n}\n\n// math\nconst math = {\n    add: binary('+'),\n    sub: binary('-'),\n    mul: binary('*'),\n    div: binary('/'),\n    mod: binary('%'),\n    exp: binary('%'),\n    sqrt: unaryPre('|/'),\n    cbrt: unaryPre('||/'),\n    fact: unaryPre('!!'),\n    abs: unaryFunction('abs')\n}\n\n// string\nconst string = {\n    like: binary('like'),\n    notLike: binary('not like')\n}\n\nconst array = {\n    unnest: naryFunction('unnest')\n}\n\nmodule.exports = {\n    ...value,\n    ...boolean,\n    ...comparison,\n    ...math,\n    ...array,\n    ...dateComparison,\n    ...string\n}\n","const expressions = require('../lib-expression')\n\nmodule.exports = { expressions }","// parameterizes given argument, function should be attached to ctx\nfunction parameterize(arg) {\n    if (arg === undefined) throw Error('Error: parameter is undefined')\n    return `$${this.params.push(arg)}`\n}\n\n/** Escapes an argument for use in UNPARAMETERIZED queries. NOT SAFE AT ALL. */\nconst escape = arg => {\n    if (arg === undefined) throw Error('Error: parameter is undefined')\n    if (arg === null) return 'null'\n    if (typeof arg === 'string') return escapeLiteral(arg)\n    if (typeof arg === 'number') return '' + arg\n    if (typeof arg === 'boolean') return '' + arg\n    if (typeof arg === 'object') {\n        if (Array.isArray(arg)) {\n            return `array[${arg.map(e => escape(e)).join(', ')}]`\n        } else {\n            return escapeLiteral(JSON.stringify(arg))\n        }\n    }\n    throw Error(`Invalid argument SQL argument of type '${typeof arg}'`, arg)\n}\n\n// from https://github.com/brianc/node-postgres/blob/eb076db5d47a29c19d3212feac26cd7b6d257a95/lib/client.js#L351\nconst escapeLiteral = str => {\n    let hasBackslash = false\n    let escaped = \"'\"\n    for (let i = 0; i < str.length; i++) {\n        const c = str[i]\n        if (c === \"'\") {\n            escaped += c + c\n        } else if (c === '\\\\') {\n            escaped += c + c\n            hasBackslash = true\n        } else {\n            escaped += c\n        }\n    }\n    escaped += \"'\"\n    if (hasBackslash === true) {\n        escaped = ' E' + escaped\n    }\n    return escaped\n}\n\nmodule.exports = {\n    parameterize,\n    escape\n}\n","const query = require('./query')\nconst expression = require('./expression')\nconst { parameterize, escape } = require('./parameterize')\n\nmodule.exports = {\n  query,\n  expression,\n  parameterize,\n  escape\n}","const core = require('./lib-core')\nconst dialect = require('./dialect-postgres')\n\nconst a = core({ dialect });\na.from = undefined;\nmodule.exports = a;\n","import _g from \"./g\";\nimport easyqb from 'easyqb';\nimport { SQW } from \"easyqb/types/sq\";\nimport { NewExpression } from \"easyqb/types/expression\";\nimport authFactory from \"./auth\";\nimport { POST_TYPES, DB_STATUS, Globals, EXECUTE_COUNT, FileFromURI, StatusResponse } from \"./types\";\nimport imageExtensions from \"./assets/image-extensions.json\";\nimport videoExtensions from \"./assets/video-extensions.json\";\n\ninterface IdbFactory {\n    db: (tableName?: string, userAssociatedRecordsOnly?: boolean) => SQW;\n    dbEventListener: (callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void) => () => void;\n    e: NewExpression;\n    setImage(recordKey: string, columnName: string, image: File | FileFromURI, tableName?: string): Promise<StatusResponse>;\n    setVideo(recordKey: string, columnName: string, video: File | FileFromURI, tableName?: string): Promise<StatusResponse>;\n    setFile(recordKey: string, columnName: string, file: File | FileFromURI, tableName?: string): Promise<StatusResponse>;\n}\n\ninterface IUploadFile {\n    recordKey: string;\n    columnName: string;\n    attachment: File | FileFromURI;\n    type: \"image\" | \"video\" | \"file\"\n    tableName?: string;\n}\n\nexport default function dbFactory(globals?: Globals): IdbFactory {\n    const g = globals || _g;\n    const { tokenPost, tokenPostAttachment } = authFactory(g);\n    let _listenerIndex = 0;\n\n    const _listeners: Record<string, (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void> = {};\n\n    function _runListeners(...params: any[]) {\n        for (const cb of Object.values(_listeners)) {\n            cb(...params)\n        }\n    }\n\n    const dbEventListener = (callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void): () => void => {\n        const currKey = '' + _listenerIndex++;\n        _listeners[currKey] = callback;\n        return () => {\n            delete _listeners[currKey]\n        }\n    }\n\n    const allCallback = async (trx: any, tableName: string, userAssociatedRecordsOnly?: boolean): Promise<Record<string, any>[] | number[]> => {\n        trx.count = \"all\";\n        trx.tableName = tableName;\n        if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n        _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n        try {\n            const res = await tokenPost(POST_TYPES.EASY_QB, trx);\n            if (res.success) {\n                g.analyticsEnabled && g.analyticsEventsToTrack.db_all && g.analyticsEvent('db_all', { tableName: tableName !== \"untable\" ? tableName : undefined, type: trx.type });\n                _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null, res.data);\n                return res.data;\n            } else {\n                _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n                return res;\n            }\n        } catch (error) {\n            console.warn(error)\n            _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n            return [];\n        }\n    }\n\n    const oneCallback = async (trx: any, tableName: string, userAssociatedRecordsOnly?: boolean): Promise<Record<string, any> | number> => {\n        trx.count = \"one\";\n        trx.tableName = tableName;\n        if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n        _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n        try {\n            const res = await tokenPost(POST_TYPES.EASY_QB, trx);\n            if (res.success) {\n                g.analyticsEnabled && g.analyticsEventsToTrack.db_one && g.analyticsEvent('db_one', { tableName: tableName !== \"untable\" ? tableName : undefined, type: trx.type });\n                _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null, res.data);\n                return res.data;\n            } else {\n                _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n                return res;\n            }\n        } catch (error) {\n            console.warn(error)\n            _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n            return {};\n        }\n    }\n\n    const db = (tableName?: string, userAssociatedRecordsOnly?: boolean) => {\n        if (tableName && typeof tableName === \"string\") {\n            return easyqb({ allCallback, oneCallback, userAssociatedRecordsOnly, tableName: tableName.toUpperCase() })(tableName.replace(/[^0-9a-zA-Z]/g, '_').toUpperCase());\n        } else {\n            return easyqb({ allCallback, oneCallback, userAssociatedRecordsOnly, tableName: \"untable\" })(\"untable\");\n        }\n    }\n\n    const _setAttachment = async ({ recordKey, columnName, attachment, tableName, type }: IUploadFile): Promise<StatusResponse> => {\n        const ext: string = attachment.name.split(\".\").pop()!.toLowerCase();\n\n        // Similar pattern as db() naming\n        let fixedTableName: string;\n        if (tableName && typeof tableName === \"string\") {\n            fixedTableName = tableName.toUpperCase();\n        } else {\n            fixedTableName = \"untable\";\n        }\n\n        if (type === \"image\" && !imageExtensions.includes(ext)) {\n            return {\n                success: false,\n                message: \"Image files must have a proper image extension in the file name\"\n            };\n        }\n\n        if (type === \"video\" && !videoExtensions.includes(ext)) {\n            return {\n                success: false,\n                message: \"Video files must have a proper video extension in the file name\"\n            };\n        }\n\n        const formData = new FormData();\n\n        formData.append(\"file\", attachment as Blob);\n        formData.append(\"name\", attachment.name);\n\n        const customHeaders = {\n            'Eb-upload-type': type,\n            'Eb-column-name': columnName,\n            'Eb-record-id': recordKey,\n            'Eb-table-name': fixedTableName\n        }\n\n        try {\n            const res = await tokenPostAttachment(formData, customHeaders);\n            if (res.success) {\n                g.analyticsEnabled && g.analyticsEventsToTrack.db_one && g.analyticsEvent('db_one', { tableName: fixedTableName !== \"untable\" ? fixedTableName : undefined, type: \"update\" });\n                _runListeners(DB_STATUS.SUCCESS, \"update\", EXECUTE_COUNT.ONE, fixedTableName !== \"untable\" ? fixedTableName : null, res.data);\n            } else {\n                _runListeners(DB_STATUS.ERROR, \"update\", EXECUTE_COUNT.ONE, fixedTableName !== \"untable\" ? fixedTableName : null);\n            }\n            return {\n                message: res.data,\n                success: res.success\n            };\n        } catch (error) {\n            console.warn(error)\n            _runListeners(DB_STATUS.ERROR, \"update\", EXECUTE_COUNT.ONE, fixedTableName !== \"untable\" ? fixedTableName : null);\n            return {\n                message: \"\",\n                success: false,\n            };\n        }\n    }\n\n    const setImage = async (recordKey: string, columnName: string, image: File | FileFromURI, tableName?: string) => _setAttachment({\n        recordKey,\n        columnName,\n        tableName,\n        attachment: image,\n        type: \"image\"\n    });\n\n    const setVideo = async (recordKey: string, columnName: string, video: File | FileFromURI, tableName?: string) => _setAttachment({\n        recordKey,\n        columnName,\n        tableName,\n        attachment: video,\n        type: \"video\"\n    });\n\n    const setFile = async (recordKey: string, columnName: string, file: File | FileFromURI, tableName?: string) => _setAttachment({\n        recordKey,\n        columnName,\n        tableName,\n        attachment: file,\n        type: \"file\"\n    });\n\n    return {\n        db,\n        dbEventListener,\n        e: easyqb().e,\n        setImage,\n        setFile,\n        setVideo\n    }\n}\n","function t(){const t=this[d],e=t.target;let o,r,n;for(e.reverse(),o=0,r=e.length;o<r;o++)if((n=e[o])&&\"object\"==typeof n){const i=n[d];i&&(i.ownKey=o)}var s=[new O(h,[],void 0,void 0,this)];return j(t,s),this}function e(t){const e=this[d],o=e.target;let r,n,s;for(o.sort(t),r=0,n=o.length;r<n;r++)if((s=o[r])&&\"object\"==typeof s){const i=s[d];i&&(i.ownKey=r)}return t=[new O(a,[],void 0,void 0,this)],j(e,t),this}function o(t,n,s){const i=this[d],h=i.target,a=[],e=h.length,l=h.slice(0);if(n=void 0===n?0:n<0?Math.max(e+n,0):Math.min(n,e),s=void 0===s?e:s<0?Math.max(e+s,0):Math.min(s,e),n<e&&n<s){h.fill(t,n,s);let r;for(let t=n,e,o;t<s;t++)e=h[t],h[t]=m(e,t,i),t in l?(o=l[t],o&&\"object\"==typeof o&&(r=o[d],r&&(o=r.detach())),a.push(new O(v,[t],h[t],o,this))):a.push(new O(w,[t],h[t],void 0,this));j(i,a)}return this}function r(n,t,e){const s=this[d],i=s.target,o=i.length;n=n<0?Math.max(o+n,0):n,t=void 0===t?0:t<0?Math.max(o+t,0):Math.min(t,o),e=void 0===e?o:e<0?Math.max(o+e,0):Math.min(e,o);var h=Math.min(e-t,o-n);if(n<o&&n!==t&&0<h){const a=i.slice(0),l=[];i.copyWithin(n,t,e);for(let t=n,e,o,r;t<n+h;t++)e=i[t],e&&\"object\"==typeof e&&(e=m(e,t,s),i[t]=e),o=a[t],o&&\"object\"==typeof o&&(r=o[d],r&&(o=r.detach())),\"object\"!=typeof e&&e===o||l.push(new O(v,[t],e,o,this));j(s,l)}return this}const w=\"insert\",v=\"update\",g=\"delete\",h=\"reverse\",a=\"shuffle\",d=Symbol.for(\"object-observer-meta-key-0\"),n={async:1},s={observe:{value:function(e,t){if(\"function\"!=typeof e)throw new Error(`observer MUST be a function, got '${e}'`);const o=this[d].observers;o.some(t=>t[0]===e)?console.warn(\"observer may be bound to an observable only once; will NOT rebind\"):o.push([e,(t=>{if(!t||\"object\"!=typeof t)return null;const e={},o=[];for(var[r,n]of Object.entries(t))if(\"path\"===r){if(\"string\"!=typeof n||\"\"===n)throw new Error('\"path\" option, if/when provided, MUST be a non-empty string');e[r]=n}else if(\"pathsOf\"===r){if(t.path)throw new Error('\"pathsOf\" option MAY NOT be specified together with \"path\" option');if(\"string\"!=typeof n)throw new Error('\"pathsOf\" option, if/when provided, MUST be a string (MAY be empty)');e[r]=t.pathsOf.split(\".\").filter(Boolean)}else if(\"pathsFrom\"===r){if(t.path||t.pathsOf)throw new Error('\"pathsFrom\" option MAY NOT be specified together with \"path\"/\"pathsOf\" option/s');if(\"string\"!=typeof n||\"\"===n)throw new Error('\"pathsFrom\" option, if/when provided, MUST be a non-empty string');e[r]=n}else o.push(r);if(o.length)throw new Error(`'${o.join(\", \")}' is/are not a valid observer option/s`);return e})(t)])}},unobserve:{value:function(){const o=this[d].observers;let r=o.length;if(r){let e=arguments.length;if(e)for(;e--;){let t=r;for(;t--;)o[t][0]===arguments[e]&&(o.splice(t,1),r--)}else o.splice(0)}}}},i=(t,e)=>{const o=Object.defineProperties({},s);o[d]=e;for(const r in t)o[r]=m(t[r],r,e);return o},l=(e,o)=>{var r=e.length;const n=Object.defineProperties(new Array(r),s);n[d]=o;for(let t=0;t<r;t++)n[t]=m(e[t],t,o);return n},f=(t,e)=>(Object.defineProperties(t,s),t[d]=e,t),c=(t,e)=>{if(!t)return e;let o=e;if(t.path){const r=t.path;o=e.filter(t=>t.path.join(\".\")===r)}else if(t.pathsOf){const n=t.pathsOf,s=n.join(\".\");o=e.filter(t=>(t.path.length===n.length+1||t.path.length===n.length&&(t.type===h||t.type===a))&&t.path.join(\".\").startsWith(s))}else if(t.pathsFrom){const i=t.pathsFrom;o=e.filter(t=>t.path.join(\".\").startsWith(i))}return o},p=(e,o)=>{try{e(o)}catch(t){console.error(`failed to notify listener ${e} with `+o,t)}},u=function(){var t,e,o=this.batches;this.batches=null;for([t,e]of o)p(t,e)},j=(t,e)=>{let o=t,r,n,s,i,h;var a=e.length;do{for(r=o.observers,h=r.length;h--;)if([n,s]=r[h],(i=c(s,e)).length)if(o.options.async){o.batches||(o.batches=[],queueMicrotask(u.bind(o)));let t;for(const l of o.batches)if(l[0]===n){t=l;break}t||(t=[n,[]],o.batches.push(t)),Array.prototype.push.apply(t[1],i)}else p(n,i);if(o.parent){const f=new Array(a);for(let t=0;t<a;t++)f[t]={...e[t]},f[t].path=[o.ownKey,...f[t].path];e=f,o=o.parent}else o=null}while(o)},m=(t,e,o)=>t&&\"object\"==typeof t?Array.isArray(t)?new A({target:t,ownKey:e,parent:o}).proxy:ArrayBuffer.isView(t)?new K({target:t,ownKey:e,parent:o}).proxy:t instanceof Date?t:new M({target:t,ownKey:e,parent:o}).proxy:t,y={pop:function(){const t=this[d],e=t.target,o=e.length-1;let r=e.pop();if(r&&\"object\"==typeof r){const s=r[d];s&&(r=s.detach())}var n=[new O(g,[o],void 0,r,this)];return j(t,n),r},push:function(){const e=this[d],o=e.target,r=arguments.length,n=new Array(r),s=o.length;for(let t=0;t<r;t++)n[t]=m(arguments[t],s+t,e);var t=Reflect.apply(o.push,o,n);const i=[];for(let t=s,e=o.length;t<e;t++)i[t-s]=new O(w,[t],o[t],void 0,this);return j(e,i),t},shift:function(){const t=this[d],e=t.target;let o,r,n,s,i;for(o=e.shift(),o&&\"object\"==typeof o&&(i=o[d],i&&(o=i.detach())),r=0,n=e.length;r<n;r++)(s=e[r])&&\"object\"==typeof s&&(i=s[d],i&&(i.ownKey=r));var h=[new O(g,[0],void 0,o,this)];return j(t,h),o},unshift:function(){const e=this[d],r=e.target,o=arguments.length,n=new Array(o);for(let t=0;t<o;t++)n[t]=m(arguments[t],t,e);var t=Reflect.apply(r.unshift,r,n);for(let t=0,e=r.length,o;t<e;t++)if((o=r[t])&&\"object\"==typeof o){const h=o[d];h&&(h.ownKey=t)}var s=n.length;const i=new Array(s);for(let t=0;t<s;t++)i[t]=new O(w,[t],r[t],void 0,this);return j(e,i),t},reverse:t,sort:e,fill:o,copyWithin:r,splice:function(){const e=this[d],o=e.target,r=arguments.length,n=new Array(r),t=o.length;for(let t=0;t<r;t++)n[t]=m(arguments[t],t,e);const s=0===r?0:n[0]<0?t+n[0]:n[0],i=r<2?t-s:n[1],h=Math.max(r-2,0),a=Reflect.apply(o.splice,o,n),l=o.length;let f;for(let t=0,e;t<l;t++)(e=o[t])&&\"object\"==typeof e&&(f=e[d],f&&(f.ownKey=t));let c,p,u;for(c=0,p=a.length;c<p;c++)(u=a[c])&&\"object\"==typeof u&&(f=u[d],f&&(a[c]=f.detach()));const y=[];let b;for(b=0;b<i;b++)b<h?y.push(new O(v,[s+b],o[s+b],a[b],this)):y.push(new O(g,[s+b],void 0,a[b],this));for(;b<h;b++)y.push(new O(w,[s+b],o[s+b],void 0,this));return j(e,y),a}},b={reverse:t,sort:e,fill:o,copyWithin:r,set:function(t,e){const o=this[d],r=o.target,n=t.length,s=r.slice(0);e=e||0,r.set(t,e);const i=new Array(n);for(let t=e;t<n+e;t++)i[t-e]=new O(v,[t],r[t],s[t],this);j(o,i)}};class O{constructor(t,e,o,r,n){this.type=t,this.path=e,this.value=o,this.oldValue=r,this.object=n}}class x{constructor(t,e){var{target:o,parent:r,ownKey:n}=t;r&&void 0!==n?(this.parent=r,this.ownKey=n):(this.parent=null,this.ownKey=null);o=e(o,this);this.observers=[],this.revocable=Proxy.revocable(o,this),this.proxy=this.revocable.proxy,this.target=o,this.options=this.processOptions(t.options)}processOptions(t){if(t){if(\"object\"!=typeof t)throw new Error(`Observable options if/when provided, MAY only be an object, got '${t}'`);const e=Object.keys(t).filter(t=>!(t in n));if(e.length)throw new Error(`'${e.join(\", \")}' is/are not a valid Observable option/s`);return Object.assign({},t)}return{}}detach(){return this.parent=null,this.target}set(t,e,o){let r=t[e];if(o!==r){o=m(o,e,this);if(t[e]=o,r&&\"object\"==typeof r){const n=r[d];n&&(r=n.detach())}o=void 0===r?[new O(w,[e],o,void 0,this.proxy)]:[new O(v,[e],o,r,this.proxy)];j(this,o)}return!0}deleteProperty(t,e){let o=t[e];if(delete t[e],o&&\"object\"==typeof o){const r=o[d];r&&(o=r.detach())}e=[new O(g,[e],void 0,o,this.proxy)];return j(this,e),!0}}class M extends x{constructor(t){super(t,i)}}class A extends x{constructor(t){super(t,l)}get(t,e){return y[e]||t[e]}}class K extends x{constructor(t){super(t,f)}get(t,e){return b[e]||t[e]}}const E=Object.freeze({from:(t,e)=>{if(t&&\"object\"==typeof t){if(t[d])return t;if(Array.isArray(t))return new A({target:t,ownKey:null,parent:null,options:e}).proxy;if(ArrayBuffer.isView(t))return new K({target:t,ownKey:null,parent:null,options:e}).proxy;if(t instanceof Date)throw new Error(t+\" found to be one of a non-observable types\");return new M({target:t,ownKey:null,parent:null,options:e}).proxy}throw new Error(\"observable MAY ONLY be created from a non-null object\")},isObservable:t=>!(!t||!t[d])}),S=Symbol(\"callback-key\"),k=Symbol(\"targets-key\");class T{constructor(t){this[S]=t,this[k]=new Set,Object.freeze(this)}observe(t,e){const o=E.from(t);return o.observe(this[S],e),this[k].add(o),o}unobserve(t){t.unobserve(this[S]),this[k].delete(t)}disconnect(){for(const t of this[k])t.unobserve(this[S]);this[k].clear()}}export{E as Observable,T as ObjectObserver};","import React, { useState, useEffect, Fragment, useRef } from \"react\";\nimport EasybaseContext from \"./EasybaseContext\";\nimport deepEqual from \"fast-deep-equal\";\nimport {\n    EasybaseProviderProps,\n    ContextValue,\n    UseReturnValue,\n    POST_TYPES,\n    FrameConfiguration,\n    FileFromURI,\n    AddRecordOptions,\n    UpdateRecordAttachmentOptions,\n    StatusResponse,\n    ConfigureFrameOptions,\n    DeleteRecordOptions,\n    DB_STATUS,\n    EXECUTE_COUNT\n} from \"./types/types\";\nimport imageExtensions from \"./assets/image-extensions.json\";\nimport videoExtensions from \"./assets/video-extensions.json\";\nimport utilsFactory from \"../node_modules/easybasejs/src/EasybaseProvider/utils\";\nimport tableFactory from \"../node_modules/easybasejs/src/EasybaseProvider/table\";\nimport authFactory from \"../node_modules/easybasejs/src/EasybaseProvider/auth\";\nimport dbFactory from \"../node_modules/easybasejs/src/EasybaseProvider/db\";\nimport { gFactory } from \"../node_modules/easybasejs/src/EasybaseProvider/g\";\nimport { Observable } from \"object-observer\";\nimport { SQW } from \"easyqb/types/sq\";\nimport fetch from 'cross-fetch';\nconst cache = require(\"./cache\");\n\nlet _isFrameInitialized: boolean = true;\n\nlet _frameConfiguration: FrameConfiguration = {\n    offset: 0,\n    limit: 0\n};\n\nlet _effect: React.EffectCallback = () => () => { };\nlet _signInCallback: () => void;\n\nconst _observedChangeStack: Record<string, any>[] = [];\nlet _recordIdMap: WeakMap<Record<string, any>, \"string\"> = new WeakMap();\nlet _proxyRecordMap: WeakMap<Record<string, any>, \"string\"> = new WeakMap();\n\nconst EasybaseProvider = ({ children, ebconfig, options }: EasybaseProviderProps) => {\n    if (typeof ebconfig !== 'object' || ebconfig === null || ebconfig === undefined) {\n        console.error(\"No ebconfig object passed. do `import ebconfig from \\\"./ebconfig.js\\\"` and pass it to the Easybase provider\");\n        return (\n            <Fragment>\n                {children}\n            </Fragment>\n        );\n    } else if (!ebconfig.integration) {\n        console.error(\"Invalid ebconfig object passed. Download ebconfig.json from Easybase.io and try again.\");\n        return (\n            <Fragment>\n                {children}\n            </Fragment>\n        );\n    }\n\n    const [mounted, setMounted] = useState<boolean>(false);\n    const [isSyncing, setIsSyncing] = useState<boolean>(false);\n    const [userSignedIn, setUserSignedIn] = useState<boolean>(false);\n\n    const [_frame, _setFrame] = useState<Record<string, any>[]>([]);\n    const [_observableFrame, _setObservableFrame] = useState<any>({\n        observe: () => { },\n        unobserve: () => { }\n    });\n\n    const _ranSignInCallback = useRef<boolean>(false);\n\n    // TODO: useRef vs useState({})\n    const g = useRef(gFactory({ ebconfig, options })).current;\n\n    const {\n        initAuth,\n        tokenPost,\n        tokenPostAttachment,\n        signUp,\n        setUserAttribute,\n        getUserAttributes,\n        resetUserPassword,\n        signIn,\n        signOut,\n        forgotPassword,\n        forgotPasswordConfirm,\n        userID\n    } = useRef(authFactory(g)).current;\n\n    const { log } = useRef(utilsFactory(g)).current;\n\n    const {\n        Query,\n        fullTableSize,\n        tableTypes\n    } = useRef(tableFactory(g)).current;\n\n    const {\n        db,\n        dbEventListener,\n        e,\n        setFile,\n        setImage,\n        setVideo\n    } = useRef(dbFactory(g)).current;\n\n    useEffect(() => {\n        const mount = async () => {\n            // eslint-disable-next-line dot-notation\n            const isIE = typeof document !== 'undefined' && !!document['documentMode'];\n\n            if (isIE) {\n                console.error(\"EASYBASE â€” easybase-react does not support Internet Explorer. Please use a different browser.\");\n            }\n\n            g.instance = (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') ? \"React Native\" : \"React\";\n\n            if (options?.googleAnalyticsId) {\n                if (options.googleAnalyticsId.startsWith(\"G-\")) {\n                    if (g.instance === \"React\") {\n                        const { GA4React } = await import('ga-4-react');\n                        const ga4ReactLoader = new GA4React(options.googleAnalyticsId);\n                        try {\n                            const ga4React = await ga4ReactLoader.initialize();\n                            g.analyticsEvent = (eventTitle: string, params?: Record<string, any>) => ga4React.gtag('event', eventTitle, params);\n                            g.analyticsIdentify = (hashedUserId: string) => ga4React.gtag('config', options.googleAnalyticsId, { user_id: hashedUserId });\n                            g.analyticsEnabled = true;\n                            if (window.location.hash) {\n                                // Using hash router - https://github.com/unrealmanu/ga-4-react/issues/15\n                                window.onhashchange = () => {\n                                    ga4React.pageview(window.location.hash);\n                                };\n                            }\n                        } catch (error) {\n                            log(\"Analytics initialization error: \", error)\n                        }\n                    } else if (g.instance === \"React Native\") {\n                        if (options.googleAnalyticsSecret) {\n                            const genUUID = () => {\n                                // https://www.w3resource.com/javascript-exercises/javascript-math-exercise-23.php\n                                let dt = new Date().getTime();\n                                const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                                    const r = (dt + Math.random() * 16) % 16 | 0;\n                                    dt = Math.floor(dt / 16);\n                                    return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n                                });\n                                return uuid;\n                            }\n\n                            let _userIdHash: string;\n                            const _mockDeviceId = genUUID();\n\n                            // Mocking a 'pageview'\n                            fetch(`https://www.google-analytics.com/mp/collect?measurement_id=${options.googleAnalyticsId}&api_secret=${options.googleAnalyticsSecret}`, {\n                                method: \"POST\",\n                                body: JSON.stringify({\n                                    client_id: _mockDeviceId,\n                                    events: [{ name: 'select_content' }]\n                                })\n                            });\n\n                            g.analyticsEvent = (eventTitle: string, params?: Record<string, any>) => fetch(`https://www.google-analytics.com/mp/collect?measurement_id=${options.googleAnalyticsId}&api_secret=${options.googleAnalyticsSecret}`, {\n                                method: \"POST\",\n                                body: JSON.stringify({\n                                    client_id: _mockDeviceId,\n                                    user_id: _userIdHash,\n                                    events: [{\n                                        name: eventTitle,\n                                        params\n                                    }]\n                                })\n                            });\n                            g.analyticsIdentify = (hashedUserId: string) => { _userIdHash = hashedUserId };\n                            g.analyticsEnabled = true;\n                        } else {\n                            console.error(\"EASYBASE â€” React Native analytics requires the presence of 'googleAnalyticsSecret'. To create a new secret, navigate in the Google Analytics UI to: Admin > Data Streams > choose your stream > Measurement Protocol > Create\");\n                        }\n                    }\n                } else if (options.googleAnalyticsId.startsWith(\"UA-\")) {\n                    console.error(\"EASYBASE â€” Detected Universal Analytics tag in googleAnalyticsId parameter. This version is not supported â€“Â please update to Google Analytics 4.\\nhttps://support.google.com/analytics/answer/9744165?hl=en\");\n                } else {\n                    console.error(\"EASYBASE â€” Unknown googleAnalyticsId version parameter. Please use Google Analytics 4.\\nhttps://support.google.com/analytics/answer/9744165?hl=en\");\n                }\n            }\n\n            if (g.ebconfig.tt && g.ebconfig.integration.split(\"-\")[0].toUpperCase() !== \"PROJECT\") {\n                const t1 = Date.now();\n                log(\"mounting...\");\n                await initAuth();\n                const res = await tokenPost(POST_TYPES.VALID_TOKEN);\n                const elapsed = Date.now() - t1;\n                if (res.success) {\n                    log(\"Valid auth initiation in \" + elapsed + \"ms\");\n                    setMounted(true);\n                }\n            } else {\n                g.mounted = true; // Bypass initAuth()\n\n                const cookieName = g.ebconfig.integration.slice(-10);\n\n                const {\n                    cacheToken,\n                    cacheRefreshToken,\n                    cacheSession\n                } = await cache.getCacheTokens(cookieName);\n\n                if (cacheRefreshToken) {\n                    g.token = cacheToken;\n                    g.refreshToken = cacheRefreshToken;\n                    g.session = +cacheSession;\n\n                    const fallbackMount = setTimeout(() => { setMounted(true) }, 2500);\n\n                    const [refreshTokenRes, { hash }, { fromUtf8 }] = await Promise.all([\n                        tokenPost(POST_TYPES.REQUEST_TOKEN, {\n                            refreshToken: g.refreshToken,\n                            token: g.token,\n                            getUserID: true\n                        }),\n                        import('fast-sha256'),\n                        import('@aws-sdk/util-utf8-browser')\n                    ])\n\n                    if (refreshTokenRes.success) {\n                        clearTimeout(fallbackMount);\n                        g.token = refreshTokenRes.data.token;\n                        g.userID = refreshTokenRes.data.userID;\n                        if (g.analyticsEnabled && g.analyticsEventsToTrack.login) {\n                            const hashOut = hash(fromUtf8(g.GA_USER_ID_SALT + refreshTokenRes.data.userID));\n                            const hexHash = Array.prototype.map.call(hashOut, x => ('00' + x.toString(16)).slice(-2)).join('');\n                            g.analyticsIdentify(hexHash);\n                            g.analyticsEvent('login', { method: \"Easybase\" });\n                        }\n                        await cache.setCacheTokens(g, cookieName);\n                        setUserSignedIn(true);\n                    } else {\n                        cache.clearCacheTokens(cookieName);\n                    }\n                }\n\n                setMounted(true);\n            }\n        }\n\n        mount();\n    }, []);\n\n    const useFrameEffect = (effect: React.EffectCallback) => {\n        _effect = effect;\n    };\n\n    useEffect(() => {\n        if (userSignedIn === true && _ranSignInCallback.current === false && _signInCallback !== undefined) {\n            _signInCallback();\n            _ranSignInCallback.current = true;\n        }\n    }, [userSignedIn])\n\n    const onSignIn = (callback: () => void) => {\n        _signInCallback = callback;\n\n        if (userSignedIn === true && _ranSignInCallback.current === false && _signInCallback !== undefined) {\n            _signInCallback();\n            _ranSignInCallback.current = true;\n        }\n    }\n\n    useEffect(() => {\n        _observableFrame.observe((allChanges: any[]) => {\n            allChanges.forEach((change: any) => {\n                _observedChangeStack.push({\n                    type: change.type,\n                    path: change.path,\n                    value: change.value,\n                    _id: _recordIdMap.get(_frame[Number(change.path[0])])\n                    // Not bringing change.object or change.oldValue\n                });\n                log(JSON.stringify({\n                    type: change.type,\n                    path: change.path,\n                    value: change.value,\n                    _id: _recordIdMap.get(_frame[Number(change.path[0])])\n                    // Not bringing change.object or change.oldValue\n                }))\n            });\n        });\n\n        _proxyRecordMap = new WeakMap();\n        _frame.forEach((_: any, i: number) => _proxyRecordMap.set(_observableFrame[i], \"\" + i as any))\n\n        _effect(); // call useFrameEffect\n    }, [_observableFrame]);\n\n    useEffect(() => {\n        _observableFrame.unobserve();\n        _setObservableFrame(Observable.from(_frame));\n    }, [_frame]);\n\n    function Frame(): Record<string, any>[];\n    function Frame(index: number): Record<string, any>;\n    function Frame(index?: number): Record<string, any>[] | Record<string, any> {\n        if (typeof index === \"number\") {\n            return _observableFrame[index];\n        } else {\n            return _observableFrame;\n        }\n    }\n\n    const _recordIDExists = (record: Record<string, any>): Boolean => !!_recordIdMap.get(record) || !!_recordIdMap.get(_getRawRecordFromProxy(record) || {});\n    const _getRawRecordFromProxy = (proxyRecord: Record<string, any>): Record<string, any> | undefined => _proxyRecordMap.get(proxyRecord) ? _frame[+_proxyRecordMap.get(proxyRecord)!] : undefined\n\n    const configureFrame = (options: ConfigureFrameOptions): StatusResponse => {\n        _frameConfiguration = { ..._frameConfiguration };\n\n        if (options.limit !== undefined) _frameConfiguration.limit = options.limit;\n        if (options.offset !== undefined && options.offset >= 0) _frameConfiguration.offset = options.offset;\n        if (options.tableName !== undefined) _frameConfiguration.tableName = options.tableName;\n\n        _isFrameInitialized = false;\n        return {\n            message: \"Successfully configured frame. Run sync() for changes to be shown in frame\",\n            success: true\n        }\n    }\n\n    const currentConfiguration = (): FrameConfiguration => ({ ..._frameConfiguration });\n\n    const addRecord = async (options: AddRecordOptions): Promise<StatusResponse> => {\n        const defaultValues: AddRecordOptions = {\n            insertAtEnd: false,\n            newRecord: {},\n            tableName: undefined\n        }\n\n        const fullOptions: AddRecordOptions = { ...defaultValues, ...options };\n\n        try {\n            const res = await tokenPost(POST_TYPES.SYNC_INSERT, fullOptions);\n            return {\n                message: res.data,\n                success: res.success\n            }\n        } catch (err: any) {\n            console.error(\"Easybase Error: addRecord failed \", err);\n            return {\n                message: \"Easybase Error: addRecord failed \" + err,\n                success: false,\n                errorCode: err\n            }\n        }\n    }\n\n    const deleteRecord = async (options: DeleteRecordOptions): Promise<StatusResponse> => {\n        const _frameRecord = _getRawRecordFromProxy(options.record) || _frame.find(ele => deepEqual(ele, options.record));\n\n        if (_frameRecord && _recordIdMap.get(_frameRecord)) {\n            const res = await tokenPost(POST_TYPES.SYNC_DELETE, {\n                _id: _recordIdMap.get(_frameRecord),\n                tableName: options.tableName\n            });\n            return {\n                success: res.success,\n                message: res.data\n            }\n        } else {\n            try {\n                const res = await tokenPost(POST_TYPES.SYNC_DELETE, {\n                    record: options.record,\n                    tableName: options.tableName\n                });\n                return {\n                    success: res.success,\n                    message: res.data\n                }\n            } catch (error: any) {\n                console.error(\"Easybase Error: deleteRecord failed \", error);\n                return {\n                    success: false,\n                    message: \"Easybase Error: deleteRecord failed \" + error,\n                    errorCode: error.errorCode || undefined\n                }\n            }\n        }\n    }\n\n    // Only allow the deletion of one element at a time\n    // First handle shifting of the array size. Then iterate\n    const sync = async (): Promise<StatusResponse> => {\n        const _realignFrames = (newData: Record<string, any>[]) => {\n            let isNewDataTheSame = true;\n\n            if (newData.length !== _frame.length) {\n                isNewDataTheSame = false;\n            } else {\n                for (let i = 0; i < newData.length; i++) {\n                    const newDataNoId = { ...newData[i] };\n                    delete newDataNoId._id;\n                    if (!deepEqual(newDataNoId, _frame[i])) {\n                        isNewDataTheSame = false;\n                        break;\n                    }\n                }\n            }\n\n            if (!isNewDataTheSame) {\n                _recordIdMap = new WeakMap();\n                _frame.length = newData.length;\n\n                newData.forEach((currNewEle, i) => {\n                    _frame[i] = currNewEle;\n                    _recordIdMap.set(currNewEle, currNewEle._id);\n                    delete currNewEle._id;\n                });\n                _setFrame([..._frame]);\n            }\n        }\n\n        if (isSyncing) {\n            return {\n                success: false,\n                message: \"Easybase Error: the provider is currently syncing, use 'await sync()' before calling sync() again\"\n            };\n        }\n        setIsSyncing(true);\n\n        if (_isFrameInitialized) {\n            if (_observedChangeStack.length > 0) {\n                log(\"Stack change: \", _observedChangeStack);\n                const res = await tokenPost(POST_TYPES.SYNC_STACK, {\n                    stack: _observedChangeStack,\n                    ..._frameConfiguration\n                });\n                if (res.success) {\n                    _observedChangeStack.length = 0;\n                }\n            }\n        }\n\n        try {\n            const res = await tokenPost(POST_TYPES.GET_FRAME, _frameConfiguration);\n\n            // Check if the array received from db is the same as frame\n            // If not, update it and send useFrameEffect\n\n            if (res.success === false) {\n                console.error(res.data);\n                setIsSyncing(false);\n                return {\n                    success: false,\n                    message: \"\" + res.data\n                }\n            } else {\n                _isFrameInitialized = true;\n                _realignFrames(res.data);\n                setIsSyncing(false);\n                return {\n                    message: 'Success. Call frame for data',\n                    success: true\n                }\n            }\n        } catch (error: any) {\n            console.error(\"Easybase Error: get failed \", error);\n            setIsSyncing(false);\n            return {\n                success: false,\n                message: \"Easybase Error: get failed \" + error,\n                errorCode: error.errorCode || undefined\n            }\n        }\n    }\n\n    const updateRecordImage = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"image\");\n        return res;\n    }\n    const updateRecordVideo = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"video\");\n        return res;\n    }\n    const updateRecordFile = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"file\");\n        return res;\n    }\n\n    const _updateRecordAttachment = async (options: UpdateRecordAttachmentOptions, type: string): Promise<StatusResponse> => {\n        const _frameRecord: Record<string, any> | undefined = _getRawRecordFromProxy(options.record) || _frame.find(ele => deepEqual(ele, options.record));\n\n        if (_frameRecord === undefined || !_recordIDExists(_frameRecord)) {\n            log(\"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\");\n            return {\n                success: false,\n                message: \"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\"\n            }\n        }\n\n        const ext: string = options.attachment.name.split(\".\").pop()!.toLowerCase();\n\n        log(ext);\n\n        if (type === \"image\" && !imageExtensions.includes(ext)) {\n            return {\n                success: false,\n                message: \"Image files must have a proper image extension in the file name\"\n            };\n        }\n\n        if (type === \"video\" && !videoExtensions.includes(ext)) {\n            return {\n                success: false,\n                message: \"Video files must have a proper video extension in the file name\"\n            };\n        }\n\n        function isFileFromURI(f: File | FileFromURI): f is FileFromURI {\n            return (f as FileFromURI).uri !== undefined;\n        }\n\n        const formData = new FormData();\n\n        if (isFileFromURI(options.attachment)) {\n            formData.append(\"file\", options.attachment as any);\n            formData.append(\"name\", options.attachment.name);\n        } else {\n            formData.append(\"file\", options.attachment);\n            formData.append(\"name\", options.attachment.name);\n        }\n\n        const customHeaders = {\n            'Eb-upload-type': type,\n            'Eb-column-name': options.columnName,\n            'Eb-record-id': _recordIdMap.get(_frameRecord),\n            'Eb-table-name': options.tableName\n        }\n\n        const res = await tokenPostAttachment(formData, customHeaders);\n\n        await sync();\n\n        return {\n            message: res.data,\n            success: res.success\n        };\n    }\n\n    const isUserSignedIn = (): boolean => userSignedIn;\n\n    g.newTokenCallback = () => {\n        const cookieName = g.ebconfig.integration.slice(-10);\n\n        if (!g.token) {\n            // User signed out\n            cache.clearCacheTokens(cookieName).then((_: any) => {\n                setUserSignedIn(false);\n                _ranSignInCallback.current = false;\n            });\n        } else {\n            // User signed in or refreshed token\n            cache.setCacheTokens(g, cookieName).then((_: any) => {\n                setUserSignedIn(true);\n            });\n        }\n    }\n\n    const useReturn = <T, >(dbInstance: () => SQW, deps?: React.DependencyList): UseReturnValue<T> => {\n        // eslint-disable-next-line no-extra-parens\n        const [unsubscribe, setUnsubscribe] = useState<() => void>(() => () => { });\n        const [frame, setFrame] = useState<T[]>([]);\n        const [error, setError] = useState<any>(null);\n        const [loading, setLoading] = useState<boolean>(false);\n        const [dead, setDead] = useState<boolean>(false);\n\n        const doFetch = async (): Promise<void> => {\n            setLoading(true);\n            try {\n                const res = await dbInstance().all();\n                if (Array.isArray(res)) {\n                    setFrame(res as T[]);\n                }\n            } catch (error) {\n                setError(error);\n            }\n            setLoading(false);\n        }\n\n        useEffect(() => {\n            let isAlive = true;\n            if (!dead) {\n                const _instanceTableName: string = (dbInstance() as any)._tableName;\n                (unsubscribe as any)(\"true\");\n\n                const _listener = dbEventListener((status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => {\n                    if (!isAlive) {\n                        return;\n                    }\n                    log(_instanceTableName, status, queryType, executeCount, tableName)\n                    if ((tableName === null && _instanceTableName === \"untable\") || tableName === _instanceTableName) {\n                        if (status === DB_STATUS.SUCCESS && queryType !== \"select\") {\n                            if (typeof returned === \"number\" && returned > 0) {\n                                doFetch();\n                            } else if (Array.isArray(returned) && typeof returned[0] === \"number\" && returned[0] > 0) {\n                                doFetch();\n                            }\n                        }\n                    }\n                });\n\n                setUnsubscribe(() => (stayAlive?: string) => {\n                    _listener();\n                    stayAlive !== \"true\" && setDead(true);\n                });\n\n                doFetch();\n            }\n            return () => { isAlive = false; }\n        }, deps || []);\n\n        return {\n            frame,\n            unsubscribe,\n            error,\n            manualFetch: doFetch,\n            loading\n        };\n    };\n\n    const c: ContextValue = {\n        configureFrame,\n        addRecord,\n        deleteRecord,\n        sync,\n        updateRecordImage,\n        updateRecordVideo,\n        updateRecordFile,\n        Frame,\n        useFrameEffect,\n        fullTableSize,\n        tableTypes,\n        currentConfiguration,\n        Query,\n        signIn,\n        signOut,\n        isUserSignedIn,\n        signUp,\n        setUserAttribute,\n        getUserAttributes,\n        resetUserPassword,\n        onSignIn,\n        db,\n        dbEventListener,\n        e,\n        setFile,\n        setImage,\n        setVideo,\n        useReturn,\n        forgotPassword,\n        forgotPasswordConfirm,\n        userID\n    }\n\n    return (\n        <EasybaseContext.Provider value={c}>\n            {mounted && children}\n        </EasybaseContext.Provider>\n    )\n}\n\nexport default EasybaseProvider;\n","import { useContext } from \"react\";\nimport EasybaseContext from \"./EasybaseContext\";\n\nconst useEasybase = () => {\n    const easybase = useContext(EasybaseContext);\n    return easybase;\n}\n\nexport default useEasybase;\n","import React, { Suspense, Fragment, lazy } from 'react';\nimport { IAuth } from '../uiTypes';\n\nconst Auth = lazy(() => import('./Auth'));\n\nexport default function (props: IAuth): JSX.Element {\n    return (\n        <Suspense fallback={<Fragment />}>\n            <Auth {...props} />\n        </Suspense>\n    )\n}\n\n/**\n * Note that this wrapper component exists to force code-splitting\n */\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}