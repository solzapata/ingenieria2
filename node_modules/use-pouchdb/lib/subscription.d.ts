/// <reference types="pouchdb-core" />
/// <reference types="pouchdb-find" />
/// <reference types="pouchdb-mapreduce" />
export declare type DocsCallback<T> = (deleted: boolean, id: PouchDB.Core.DocumentId, doc?: PouchDB.Core.Document<T>) => void;
export declare type ViewCallback = (id: PouchDB.Core.DocumentId) => void;
export declare type subscribeToView = (fun: string, callback: ViewCallback) => () => void;
export declare type subscribeToDocs = <T>(ids: PouchDB.Core.DocumentId[] | null, callback: DocsCallback<T>) => () => void;
export default class SubscriptionManager {
    #private;
    constructor(pouch: PouchDB.Database);
    subscribeToDocs<T>(ids: PouchDB.Core.DocumentId[] | null, callback: DocsCallback<T>): () => void;
    subscribeToView(fun: string, callback: ViewCallback): () => void;
    unsubscribeAll(): void;
}
