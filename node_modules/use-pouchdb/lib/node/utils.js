"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useDeepMemo = void 0;
const react_1 = require("react");
const fast_deep_equal_1 = __importDefault(require("fast-deep-equal"));
/**
 * Memorize a value. Only invalidate if the value in it did change. Does a deep equal.
 * @param option Options to memorize.
 */
function useDeepMemo(option) {
    const last = (0, react_1.useRef)(option);
    return (0, react_1.useMemo)(() => {
        if ((0, fast_deep_equal_1.default)(last.current, option)) {
            return last.current;
        }
        else {
            last.current = option;
            return option;
        }
    }, [option]);
}
exports.useDeepMemo = useDeepMemo;
